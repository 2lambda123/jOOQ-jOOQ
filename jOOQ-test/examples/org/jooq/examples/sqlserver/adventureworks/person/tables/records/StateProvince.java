/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.person.tables.records;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "StateProvince", schema = "Person")
public class StateProvince extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.person.tables.records.StateProvince> implements org.jooq.Record8<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.Integer, java.util.UUID, java.sql.Timestamp> {

	private static final long serialVersionUID = 700230340;

	/**
	 * Setter for <code>Person.StateProvince.StateProvinceID</code>. 
	 */
	public void setStateProvinceID(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>Person.StateProvince.StateProvinceID</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "StateProvinceID", unique = true, nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getStateProvinceID() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>Person.StateProvince.StateProvinceCode</code>. 
	 */
	public void setStateProvinceCode(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>Person.StateProvince.StateProvinceCode</code>. 
	 */
	@javax.persistence.Column(name = "StateProvinceCode", nullable = false, length = 3)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 3)
	public java.lang.String getStateProvinceCode() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>Person.StateProvince.CountryRegionCode</code>. 
	 */
	public void setCountryRegionCode(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>Person.StateProvince.CountryRegionCode</code>. 
	 */
	@javax.persistence.Column(name = "CountryRegionCode", nullable = false, length = 3)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 3)
	public java.lang.String getCountryRegionCode() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>Person.StateProvince.IsOnlyStateProvinceFlag</code>. 
	 */
	public void setIsOnlyStateProvinceFlag(java.lang.Boolean value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>Person.StateProvince.IsOnlyStateProvinceFlag</code>. 
	 */
	@javax.persistence.Column(name = "IsOnlyStateProvinceFlag", nullable = false)
	@javax.validation.constraints.NotNull
	public java.lang.Boolean getIsOnlyStateProvinceFlag() {
		return (java.lang.Boolean) getValue(3);
	}

	/**
	 * Setter for <code>Person.StateProvince.Name</code>. 
	 */
	public void setName(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>Person.StateProvince.Name</code>. 
	 */
	@javax.persistence.Column(name = "Name", nullable = false, length = 50)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 50)
	public java.lang.String getName() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>Person.StateProvince.TerritoryID</code>. 
	 */
	public void setTerritoryID(java.lang.Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>Person.StateProvince.TerritoryID</code>. 
	 */
	@javax.persistence.Column(name = "TerritoryID", nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getTerritoryID() {
		return (java.lang.Integer) getValue(5);
	}

	/**
	 * Setter for <code>Person.StateProvince.rowguid</code>. 
	 */
	public void setrowguid(java.util.UUID value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>Person.StateProvince.rowguid</code>. 
	 */
	@javax.persistence.Column(name = "rowguid", nullable = false)
	@javax.validation.constraints.NotNull
	public java.util.UUID getrowguid() {
		return (java.util.UUID) getValue(6);
	}

	/**
	 * Setter for <code>Person.StateProvince.ModifiedDate</code>. 
	 */
	public void setModifiedDate(java.sql.Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>Person.StateProvince.ModifiedDate</code>. 
	 */
	@javax.persistence.Column(name = "ModifiedDate", nullable = false)
	@javax.validation.constraints.NotNull
	public java.sql.Timestamp getModifiedDate() {
		return (java.sql.Timestamp) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.Integer, java.util.UUID, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.Integer, java.util.UUID, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.StateProvince.StateProvince.StateProvinceID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.StateProvince.StateProvince.StateProvinceCode;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.StateProvince.StateProvince.CountryRegionCode;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field4() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.StateProvince.StateProvince.IsOnlyStateProvinceFlag;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.StateProvince.StateProvince.Name;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field6() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.StateProvince.StateProvince.TerritoryID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field7() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.StateProvince.StateProvince.rowguid;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field8() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.StateProvince.StateProvince.ModifiedDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getStateProvinceID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getStateProvinceCode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getCountryRegionCode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value4() {
		return getIsOnlyStateProvinceFlag();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value6() {
		return getTerritoryID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value7() {
		return getrowguid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value8() {
		return getModifiedDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StateProvince value1(java.lang.Integer value) {
		setStateProvinceID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StateProvince value2(java.lang.String value) {
		setStateProvinceCode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StateProvince value3(java.lang.String value) {
		setCountryRegionCode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StateProvince value4(java.lang.Boolean value) {
		setIsOnlyStateProvinceFlag(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StateProvince value5(java.lang.String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StateProvince value6(java.lang.Integer value) {
		setTerritoryID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StateProvince value7(java.util.UUID value) {
		setrowguid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StateProvince value8(java.sql.Timestamp value) {
		setModifiedDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StateProvince values(java.lang.Integer value1, java.lang.String value2, java.lang.String value3, java.lang.Boolean value4, java.lang.String value5, java.lang.Integer value6, java.util.UUID value7, java.sql.Timestamp value8) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached StateProvince
	 */
	public StateProvince() {
		super(org.jooq.examples.sqlserver.adventureworks.person.tables.StateProvince.StateProvince);
	}

	/**
	 * Create a detached, initialised StateProvince
	 */
	public StateProvince(java.lang.Integer StateProvinceID, java.lang.String StateProvinceCode, java.lang.String CountryRegionCode, java.lang.Boolean IsOnlyStateProvinceFlag, java.lang.String Name, java.lang.Integer TerritoryID, java.util.UUID rowguid, java.sql.Timestamp ModifiedDate) {
		super(org.jooq.examples.sqlserver.adventureworks.person.tables.StateProvince.StateProvince);

		setValue(0, StateProvinceID);
		setValue(1, StateProvinceCode);
		setValue(2, CountryRegionCode);
		setValue(3, IsOnlyStateProvinceFlag);
		setValue(4, Name);
		setValue(5, TerritoryID);
		setValue(6, rowguid);
		setValue(7, ModifiedDate);
	}
}
