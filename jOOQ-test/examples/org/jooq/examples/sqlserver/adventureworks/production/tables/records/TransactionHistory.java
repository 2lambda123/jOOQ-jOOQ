/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.production.tables.records;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "TransactionHistory", schema = "Production")
public class TransactionHistory extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.production.tables.records.TransactionHistory> implements org.jooq.Record9<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.sql.Timestamp, java.lang.String, java.lang.Integer, java.math.BigDecimal, java.sql.Timestamp> {

	private static final long serialVersionUID = -2069832376;

	/**
	 * Setter for <code>Production.TransactionHistory.TransactionID</code>. 
	 */
	public void setTransactionID(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>Production.TransactionHistory.TransactionID</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "TransactionID", unique = true, nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getTransactionID() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>Production.TransactionHistory.ProductID</code>. 
	 */
	public void setProductID(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>Production.TransactionHistory.ProductID</code>. 
	 */
	@javax.persistence.Column(name = "ProductID", nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getProductID() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>Production.TransactionHistory.ReferenceOrderID</code>. 
	 */
	public void setReferenceOrderID(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>Production.TransactionHistory.ReferenceOrderID</code>. 
	 */
	@javax.persistence.Column(name = "ReferenceOrderID", nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getReferenceOrderID() {
		return (java.lang.Integer) getValue(2);
	}

	/**
	 * Setter for <code>Production.TransactionHistory.ReferenceOrderLineID</code>. 
	 */
	public void setReferenceOrderLineID(java.lang.Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>Production.TransactionHistory.ReferenceOrderLineID</code>. 
	 */
	@javax.persistence.Column(name = "ReferenceOrderLineID", nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getReferenceOrderLineID() {
		return (java.lang.Integer) getValue(3);
	}

	/**
	 * Setter for <code>Production.TransactionHistory.TransactionDate</code>. 
	 */
	public void setTransactionDate(java.sql.Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>Production.TransactionHistory.TransactionDate</code>. 
	 */
	@javax.persistence.Column(name = "TransactionDate", nullable = false)
	@javax.validation.constraints.NotNull
	public java.sql.Timestamp getTransactionDate() {
		return (java.sql.Timestamp) getValue(4);
	}

	/**
	 * Setter for <code>Production.TransactionHistory.TransactionType</code>. 
	 */
	public void setTransactionType(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>Production.TransactionHistory.TransactionType</code>. 
	 */
	@javax.persistence.Column(name = "TransactionType", nullable = false, length = 1)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 1)
	public java.lang.String getTransactionType() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>Production.TransactionHistory.Quantity</code>. 
	 */
	public void setQuantity(java.lang.Integer value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>Production.TransactionHistory.Quantity</code>. 
	 */
	@javax.persistence.Column(name = "Quantity", nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getQuantity() {
		return (java.lang.Integer) getValue(6);
	}

	/**
	 * Setter for <code>Production.TransactionHistory.ActualCost</code>. 
	 */
	public void setActualCost(java.math.BigDecimal value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>Production.TransactionHistory.ActualCost</code>. 
	 */
	@javax.persistence.Column(name = "ActualCost", nullable = false, precision = 19, scale = 4)
	@javax.validation.constraints.NotNull
	public java.math.BigDecimal getActualCost() {
		return (java.math.BigDecimal) getValue(7);
	}

	/**
	 * Setter for <code>Production.TransactionHistory.ModifiedDate</code>. 
	 */
	public void setModifiedDate(java.sql.Timestamp value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>Production.TransactionHistory.ModifiedDate</code>. 
	 */
	@javax.persistence.Column(name = "ModifiedDate", nullable = false)
	@javax.validation.constraints.NotNull
	public java.sql.Timestamp getModifiedDate() {
		return (java.sql.Timestamp) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.sql.Timestamp, java.lang.String, java.lang.Integer, java.math.BigDecimal, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.sql.Timestamp, java.lang.String, java.lang.Integer, java.math.BigDecimal, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.TransactionHistory.TransactionHistory.TransactionID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.TransactionHistory.TransactionHistory.ProductID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.TransactionHistory.TransactionHistory.ReferenceOrderID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field4() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.TransactionHistory.TransactionHistory.ReferenceOrderLineID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field5() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.TransactionHistory.TransactionHistory.TransactionDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.TransactionHistory.TransactionHistory.TransactionType;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field7() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.TransactionHistory.TransactionHistory.Quantity;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.math.BigDecimal> field8() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.TransactionHistory.TransactionHistory.ActualCost;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field9() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.TransactionHistory.TransactionHistory.ModifiedDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getTransactionID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getProductID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return getReferenceOrderID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value4() {
		return getReferenceOrderLineID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value5() {
		return getTransactionDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getTransactionType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value7() {
		return getQuantity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.math.BigDecimal value8() {
		return getActualCost();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value9() {
		return getModifiedDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionHistory value1(java.lang.Integer value) {
		setTransactionID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionHistory value2(java.lang.Integer value) {
		setProductID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionHistory value3(java.lang.Integer value) {
		setReferenceOrderID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionHistory value4(java.lang.Integer value) {
		setReferenceOrderLineID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionHistory value5(java.sql.Timestamp value) {
		setTransactionDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionHistory value6(java.lang.String value) {
		setTransactionType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionHistory value7(java.lang.Integer value) {
		setQuantity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionHistory value8(java.math.BigDecimal value) {
		setActualCost(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionHistory value9(java.sql.Timestamp value) {
		setModifiedDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TransactionHistory values(java.lang.Integer value1, java.lang.Integer value2, java.lang.Integer value3, java.lang.Integer value4, java.sql.Timestamp value5, java.lang.String value6, java.lang.Integer value7, java.math.BigDecimal value8, java.sql.Timestamp value9) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TransactionHistory
	 */
	public TransactionHistory() {
		super(org.jooq.examples.sqlserver.adventureworks.production.tables.TransactionHistory.TransactionHistory);
	}

	/**
	 * Create a detached, initialised TransactionHistory
	 */
	public TransactionHistory(java.lang.Integer TransactionID, java.lang.Integer ProductID, java.lang.Integer ReferenceOrderID, java.lang.Integer ReferenceOrderLineID, java.sql.Timestamp TransactionDate, java.lang.String TransactionType, java.lang.Integer Quantity, java.math.BigDecimal ActualCost, java.sql.Timestamp ModifiedDate) {
		super(org.jooq.examples.sqlserver.adventureworks.production.tables.TransactionHistory.TransactionHistory);

		setValue(0, TransactionID);
		setValue(1, ProductID);
		setValue(2, ReferenceOrderID);
		setValue(3, ReferenceOrderLineID);
		setValue(4, TransactionDate);
		setValue(5, TransactionType);
		setValue(6, Quantity);
		setValue(7, ActualCost);
		setValue(8, ModifiedDate);
	}
}
