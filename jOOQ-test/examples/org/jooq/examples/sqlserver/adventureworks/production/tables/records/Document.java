/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.production.tables.records;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "Document", schema = "Production")
public class Document extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.production.tables.records.Document> implements org.jooq.Record14<java.lang.Object, java.lang.Short, java.lang.String, java.lang.Integer, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, org.jooq.types.UByte, java.lang.String, byte[], java.util.UUID, java.sql.Timestamp> {

	private static final long serialVersionUID = -915765258;

	/**
	 * Setter for <code>Production.Document.DocumentNode</code>. 
	 */
	public void setDocumentNode(java.lang.Object value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>Production.Document.DocumentNode</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "DocumentNode", unique = true, nullable = false, length = 892)
	@javax.validation.constraints.NotNull
	public java.lang.Object getDocumentNode() {
		return (java.lang.Object) getValue(0);
	}

	/**
	 * Setter for <code>Production.Document.DocumentLevel</code>. 
	 */
	public void setDocumentLevel(java.lang.Short value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>Production.Document.DocumentLevel</code>. 
	 */
	@javax.persistence.Column(name = "DocumentLevel", precision = 5)
	public java.lang.Short getDocumentLevel() {
		return (java.lang.Short) getValue(1);
	}

	/**
	 * Setter for <code>Production.Document.Title</code>. 
	 */
	public void setTitle(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>Production.Document.Title</code>. 
	 */
	@javax.persistence.Column(name = "Title", nullable = false, length = 50)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 50)
	public java.lang.String getTitle() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>Production.Document.Owner</code>. 
	 */
	public void setOwner(java.lang.Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>Production.Document.Owner</code>. 
	 */
	@javax.persistence.Column(name = "Owner", nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getOwner() {
		return (java.lang.Integer) getValue(3);
	}

	/**
	 * Setter for <code>Production.Document.FolderFlag</code>. 
	 */
	public void setFolderFlag(java.lang.Boolean value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>Production.Document.FolderFlag</code>. 
	 */
	@javax.persistence.Column(name = "FolderFlag", nullable = false)
	@javax.validation.constraints.NotNull
	public java.lang.Boolean getFolderFlag() {
		return (java.lang.Boolean) getValue(4);
	}

	/**
	 * Setter for <code>Production.Document.FileName</code>. 
	 */
	public void setFileName(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>Production.Document.FileName</code>. 
	 */
	@javax.persistence.Column(name = "FileName", nullable = false, length = 400)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 400)
	public java.lang.String getFileName() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>Production.Document.FileExtension</code>. 
	 */
	public void setFileExtension(java.lang.String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>Production.Document.FileExtension</code>. 
	 */
	@javax.persistence.Column(name = "FileExtension", nullable = false, length = 8)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 8)
	public java.lang.String getFileExtension() {
		return (java.lang.String) getValue(6);
	}

	/**
	 * Setter for <code>Production.Document.Revision</code>. 
	 */
	public void setRevision(java.lang.String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>Production.Document.Revision</code>. 
	 */
	@javax.persistence.Column(name = "Revision", nullable = false, length = 5)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 5)
	public java.lang.String getRevision() {
		return (java.lang.String) getValue(7);
	}

	/**
	 * Setter for <code>Production.Document.ChangeNumber</code>. 
	 */
	public void setChangeNumber(java.lang.Integer value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>Production.Document.ChangeNumber</code>. 
	 */
	@javax.persistence.Column(name = "ChangeNumber", nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getChangeNumber() {
		return (java.lang.Integer) getValue(8);
	}

	/**
	 * Setter for <code>Production.Document.Status</code>. 
	 */
	public void setStatus(org.jooq.types.UByte value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>Production.Document.Status</code>. 
	 */
	@javax.persistence.Column(name = "Status", nullable = false, precision = 3)
	@javax.validation.constraints.NotNull
	public org.jooq.types.UByte getStatus() {
		return (org.jooq.types.UByte) getValue(9);
	}

	/**
	 * Setter for <code>Production.Document.DocumentSummary</code>. 
	 */
	public void setDocumentSummary(java.lang.String value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>Production.Document.DocumentSummary</code>. 
	 */
	@javax.persistence.Column(name = "DocumentSummary")
	public java.lang.String getDocumentSummary() {
		return (java.lang.String) getValue(10);
	}

	/**
	 * Setter for <code>Production.Document.Document</code>. 
	 */
	public void setDocument(byte[] value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>Production.Document.Document</code>. 
	 */
	@javax.persistence.Column(name = "Document")
	public byte[] getDocument() {
		return (byte[]) getValue(11);
	}

	/**
	 * Setter for <code>Production.Document.rowguid</code>. 
	 */
	public void setrowguid(java.util.UUID value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>Production.Document.rowguid</code>. 
	 */
	@javax.persistence.Column(name = "rowguid", unique = true, nullable = false)
	@javax.validation.constraints.NotNull
	public java.util.UUID getrowguid() {
		return (java.util.UUID) getValue(12);
	}

	/**
	 * Setter for <code>Production.Document.ModifiedDate</code>. 
	 */
	public void setModifiedDate(java.sql.Timestamp value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>Production.Document.ModifiedDate</code>. 
	 */
	@javax.persistence.Column(name = "ModifiedDate", nullable = false)
	@javax.validation.constraints.NotNull
	public java.sql.Timestamp getModifiedDate() {
		return (java.sql.Timestamp) getValue(13);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Object> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record14 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row14<java.lang.Object, java.lang.Short, java.lang.String, java.lang.Integer, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, org.jooq.types.UByte, java.lang.String, byte[], java.util.UUID, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row14) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row14<java.lang.Object, java.lang.Short, java.lang.String, java.lang.Integer, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, org.jooq.types.UByte, java.lang.String, byte[], java.util.UUID, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row14) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Object> field1() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.DocumentNode;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Short> field2() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.DocumentLevel;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.Title;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field4() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.Owner;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field5() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.FolderFlag;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.FileName;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field7() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.FileExtension;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field8() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.Revision;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field9() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.ChangeNumber;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.jooq.types.UByte> field10() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.Status;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field11() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.DocumentSummary;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field12() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.Document_;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field13() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.rowguid;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field14() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document.ModifiedDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Object value1() {
		return getDocumentNode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Short value2() {
		return getDocumentLevel();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getTitle();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value4() {
		return getOwner();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value5() {
		return getFolderFlag();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getFileName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value7() {
		return getFileExtension();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value8() {
		return getRevision();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value9() {
		return getChangeNumber();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.types.UByte value10() {
		return getStatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value11() {
		return getDocumentSummary();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value12() {
		return getDocument();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value13() {
		return getrowguid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value14() {
		return getModifiedDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value1(java.lang.Object value) {
		setDocumentNode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value2(java.lang.Short value) {
		setDocumentLevel(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value3(java.lang.String value) {
		setTitle(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value4(java.lang.Integer value) {
		setOwner(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value5(java.lang.Boolean value) {
		setFolderFlag(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value6(java.lang.String value) {
		setFileName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value7(java.lang.String value) {
		setFileExtension(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value8(java.lang.String value) {
		setRevision(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value9(java.lang.Integer value) {
		setChangeNumber(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value10(org.jooq.types.UByte value) {
		setStatus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value11(java.lang.String value) {
		setDocumentSummary(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value12(byte[] value) {
		setDocument(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value13(java.util.UUID value) {
		setrowguid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document value14(java.sql.Timestamp value) {
		setModifiedDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Document values(java.lang.Object value1, java.lang.Short value2, java.lang.String value3, java.lang.Integer value4, java.lang.Boolean value5, java.lang.String value6, java.lang.String value7, java.lang.String value8, java.lang.Integer value9, org.jooq.types.UByte value10, java.lang.String value11, byte[] value12, java.util.UUID value13, java.sql.Timestamp value14) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached Document
	 */
	public Document() {
		super(org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document);
	}

	/**
	 * Create a detached, initialised Document
	 */
	public Document(java.lang.Object DocumentNode, java.lang.Short DocumentLevel, java.lang.String Title, java.lang.Integer Owner, java.lang.Boolean FolderFlag, java.lang.String FileName, java.lang.String FileExtension, java.lang.String Revision, java.lang.Integer ChangeNumber, org.jooq.types.UByte Status, java.lang.String DocumentSummary, byte[] Document, java.util.UUID rowguid, java.sql.Timestamp ModifiedDate) {
		super(org.jooq.examples.sqlserver.adventureworks.production.tables.Document.Document);

		setValue(0, DocumentNode);
		setValue(1, DocumentLevel);
		setValue(2, Title);
		setValue(3, Owner);
		setValue(4, FolderFlag);
		setValue(5, FileName);
		setValue(6, FileExtension);
		setValue(7, Revision);
		setValue(8, ChangeNumber);
		setValue(9, Status);
		setValue(10, DocumentSummary);
		setValue(11, Document);
		setValue(12, rowguid);
		setValue(13, ModifiedDate);
	}
}
