/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.production.tables.records;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "WorkOrder", schema = "Production")
public class WorkOrder extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.production.tables.records.WorkOrder> implements org.jooq.Record10<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Short, java.sql.Timestamp, java.sql.Timestamp, java.sql.Timestamp, java.lang.Short, java.sql.Timestamp> {

	private static final long serialVersionUID = -1854046711;

	/**
	 * Setter for <code>Production.WorkOrder.WorkOrderID</code>. 
	 */
	public void setWorkOrderID(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>Production.WorkOrder.WorkOrderID</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "WorkOrderID", unique = true, nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getWorkOrderID() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>Production.WorkOrder.ProductID</code>. 
	 */
	public void setProductID(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>Production.WorkOrder.ProductID</code>. 
	 */
	@javax.persistence.Column(name = "ProductID", nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getProductID() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>Production.WorkOrder.OrderQty</code>. 
	 */
	public void setOrderQty(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>Production.WorkOrder.OrderQty</code>. 
	 */
	@javax.persistence.Column(name = "OrderQty", nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getOrderQty() {
		return (java.lang.Integer) getValue(2);
	}

	/**
	 * Setter for <code>Production.WorkOrder.StockedQty</code>. 
	 */
	public void setStockedQty(java.lang.Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>Production.WorkOrder.StockedQty</code>. 
	 */
	@javax.persistence.Column(name = "StockedQty", nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getStockedQty() {
		return (java.lang.Integer) getValue(3);
	}

	/**
	 * Setter for <code>Production.WorkOrder.ScrappedQty</code>. 
	 */
	public void setScrappedQty(java.lang.Short value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>Production.WorkOrder.ScrappedQty</code>. 
	 */
	@javax.persistence.Column(name = "ScrappedQty", nullable = false, precision = 5)
	@javax.validation.constraints.NotNull
	public java.lang.Short getScrappedQty() {
		return (java.lang.Short) getValue(4);
	}

	/**
	 * Setter for <code>Production.WorkOrder.StartDate</code>. 
	 */
	public void setStartDate(java.sql.Timestamp value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>Production.WorkOrder.StartDate</code>. 
	 */
	@javax.persistence.Column(name = "StartDate", nullable = false)
	@javax.validation.constraints.NotNull
	public java.sql.Timestamp getStartDate() {
		return (java.sql.Timestamp) getValue(5);
	}

	/**
	 * Setter for <code>Production.WorkOrder.EndDate</code>. 
	 */
	public void setEndDate(java.sql.Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>Production.WorkOrder.EndDate</code>. 
	 */
	@javax.persistence.Column(name = "EndDate")
	public java.sql.Timestamp getEndDate() {
		return (java.sql.Timestamp) getValue(6);
	}

	/**
	 * Setter for <code>Production.WorkOrder.DueDate</code>. 
	 */
	public void setDueDate(java.sql.Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>Production.WorkOrder.DueDate</code>. 
	 */
	@javax.persistence.Column(name = "DueDate", nullable = false)
	@javax.validation.constraints.NotNull
	public java.sql.Timestamp getDueDate() {
		return (java.sql.Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>Production.WorkOrder.ScrapReasonID</code>. 
	 */
	public void setScrapReasonID(java.lang.Short value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>Production.WorkOrder.ScrapReasonID</code>. 
	 */
	@javax.persistence.Column(name = "ScrapReasonID", precision = 5)
	public java.lang.Short getScrapReasonID() {
		return (java.lang.Short) getValue(8);
	}

	/**
	 * Setter for <code>Production.WorkOrder.ModifiedDate</code>. 
	 */
	public void setModifiedDate(java.sql.Timestamp value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>Production.WorkOrder.ModifiedDate</code>. 
	 */
	@javax.persistence.Column(name = "ModifiedDate", nullable = false)
	@javax.validation.constraints.NotNull
	public java.sql.Timestamp getModifiedDate() {
		return (java.sql.Timestamp) getValue(9);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record10 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row10<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Short, java.sql.Timestamp, java.sql.Timestamp, java.sql.Timestamp, java.lang.Short, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row10) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row10<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Short, java.sql.Timestamp, java.sql.Timestamp, java.sql.Timestamp, java.lang.Short, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row10) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.WorkOrder.WorkOrder.WorkOrderID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.WorkOrder.WorkOrder.ProductID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.WorkOrder.WorkOrder.OrderQty;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field4() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.WorkOrder.WorkOrder.StockedQty;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Short> field5() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.WorkOrder.WorkOrder.ScrappedQty;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field6() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.WorkOrder.WorkOrder.StartDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field7() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.WorkOrder.WorkOrder.EndDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field8() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.WorkOrder.WorkOrder.DueDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Short> field9() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.WorkOrder.WorkOrder.ScrapReasonID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field10() {
		return org.jooq.examples.sqlserver.adventureworks.production.tables.WorkOrder.WorkOrder.ModifiedDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getWorkOrderID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getProductID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return getOrderQty();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value4() {
		return getStockedQty();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Short value5() {
		return getScrappedQty();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value6() {
		return getStartDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value7() {
		return getEndDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value8() {
		return getDueDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Short value9() {
		return getScrapReasonID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value10() {
		return getModifiedDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkOrder value1(java.lang.Integer value) {
		setWorkOrderID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkOrder value2(java.lang.Integer value) {
		setProductID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkOrder value3(java.lang.Integer value) {
		setOrderQty(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkOrder value4(java.lang.Integer value) {
		setStockedQty(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkOrder value5(java.lang.Short value) {
		setScrappedQty(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkOrder value6(java.sql.Timestamp value) {
		setStartDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkOrder value7(java.sql.Timestamp value) {
		setEndDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkOrder value8(java.sql.Timestamp value) {
		setDueDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkOrder value9(java.lang.Short value) {
		setScrapReasonID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkOrder value10(java.sql.Timestamp value) {
		setModifiedDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public WorkOrder values(java.lang.Integer value1, java.lang.Integer value2, java.lang.Integer value3, java.lang.Integer value4, java.lang.Short value5, java.sql.Timestamp value6, java.sql.Timestamp value7, java.sql.Timestamp value8, java.lang.Short value9, java.sql.Timestamp value10) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached WorkOrder
	 */
	public WorkOrder() {
		super(org.jooq.examples.sqlserver.adventureworks.production.tables.WorkOrder.WorkOrder);
	}

	/**
	 * Create a detached, initialised WorkOrder
	 */
	public WorkOrder(java.lang.Integer WorkOrderID, java.lang.Integer ProductID, java.lang.Integer OrderQty, java.lang.Integer StockedQty, java.lang.Short ScrappedQty, java.sql.Timestamp StartDate, java.sql.Timestamp EndDate, java.sql.Timestamp DueDate, java.lang.Short ScrapReasonID, java.sql.Timestamp ModifiedDate) {
		super(org.jooq.examples.sqlserver.adventureworks.production.tables.WorkOrder.WorkOrder);

		setValue(0, WorkOrderID);
		setValue(1, ProductID);
		setValue(2, OrderQty);
		setValue(3, StockedQty);
		setValue(4, ScrappedQty);
		setValue(5, StartDate);
		setValue(6, EndDate);
		setValue(7, DueDate);
		setValue(8, ScrapReasonID);
		setValue(9, ModifiedDate);
	}
}
