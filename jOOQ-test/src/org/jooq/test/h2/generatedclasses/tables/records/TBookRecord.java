/**
 * This class is generated by jOOQ
 */
package org.jooq.test.h2.generatedclasses.tables.records;

/**
 * This class is generated by jOOQ.
 *
 * An entity holding books
 */
@java.lang.SuppressWarnings("all")
public class TBookRecord extends org.jooq.impl.UpdatableRecordImpl<org.jooq.test.h2.generatedclasses.tables.records.TBookRecord> implements org.jooq.test.h2.generatedclasses.tables.interfaces.ITBook {

	private static final long serialVersionUID = -1757077845;

	/**
	 * Setter for <code>PUBLIC.T_BOOK.ID</code>. The book ID
	 */
	@Override
	public void setId(java.lang.Integer value) {
		setValue(org.jooq.test.h2.generatedclasses.tables.TBook.ID, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_BOOK.ID</code>. The book ID
	 */
	@Override
	public java.lang.Integer getId() {
		return getValue(org.jooq.test.h2.generatedclasses.tables.TBook.ID);
	}

	/**
	 * Setter for <code>PUBLIC.T_BOOK.AUTHOR_ID</code>. The author ID in entity 'author'
	 */
	@Override
	public void setAuthorId(java.lang.Integer value) {
		setValue(org.jooq.test.h2.generatedclasses.tables.TBook.AUTHOR_ID, value);
	}

	/**
	 * Link this record to a given {@link org.jooq.test.h2.generatedclasses.tables.records.TAuthorRecord}
	 */
	public void setAuthorId(org.jooq.test.h2.generatedclasses.tables.records.TAuthorRecord value) {
		if (value == null) {
			setValue(org.jooq.test.h2.generatedclasses.tables.TBook.AUTHOR_ID, null);
		}
		else {
			setValue(org.jooq.test.h2.generatedclasses.tables.TBook.AUTHOR_ID, value.getValue(org.jooq.test.h2.generatedclasses.tables.TAuthor.ID));
		}
	}

	/**
	 * Getter for <code>PUBLIC.T_BOOK.AUTHOR_ID</code>. The author ID in entity 'author'
	 */
	@Override
	public java.lang.Integer getAuthorId() {
		return getValue(org.jooq.test.h2.generatedclasses.tables.TBook.AUTHOR_ID);
	}

	/**
	 * Setter for <code>PUBLIC.T_BOOK.CO_AUTHOR_ID</code>. 
	 */
	@Override
	public void setCoAuthorId(java.lang.Integer value) {
		setValue(org.jooq.test.h2.generatedclasses.tables.TBook.CO_AUTHOR_ID, value);
	}

	/**
	 * Link this record to a given {@link org.jooq.test.h2.generatedclasses.tables.records.TAuthorRecord}
	 */
	public void setCoAuthorId(org.jooq.test.h2.generatedclasses.tables.records.TAuthorRecord value) {
		if (value == null) {
			setValue(org.jooq.test.h2.generatedclasses.tables.TBook.CO_AUTHOR_ID, null);
		}
		else {
			setValue(org.jooq.test.h2.generatedclasses.tables.TBook.CO_AUTHOR_ID, value.getValue(org.jooq.test.h2.generatedclasses.tables.TAuthor.ID));
		}
	}

	/**
	 * Getter for <code>PUBLIC.T_BOOK.CO_AUTHOR_ID</code>. 
	 */
	@Override
	public java.lang.Integer getCoAuthorId() {
		return getValue(org.jooq.test.h2.generatedclasses.tables.TBook.CO_AUTHOR_ID);
	}

	/**
	 * Setter for <code>PUBLIC.T_BOOK.DETAILS_ID</code>. 
	 */
	@Override
	public void setDetailsId(java.lang.Integer value) {
		setValue(org.jooq.test.h2.generatedclasses.tables.TBook.DETAILS_ID, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_BOOK.DETAILS_ID</code>. 
	 */
	@Override
	public java.lang.Integer getDetailsId() {
		return getValue(org.jooq.test.h2.generatedclasses.tables.TBook.DETAILS_ID);
	}

	/**
	 * Setter for <code>PUBLIC.T_BOOK.TITLE</code>. The book's title
	 */
	@Override
	public void setTitle(java.lang.String value) {
		setValue(org.jooq.test.h2.generatedclasses.tables.TBook.TITLE, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_BOOK.TITLE</code>. The book's title
	 */
	@Override
	public java.lang.String getTitle() {
		return getValue(org.jooq.test.h2.generatedclasses.tables.TBook.TITLE);
	}

	/**
	 * Setter for <code>PUBLIC.T_BOOK.PUBLISHED_IN</code>. The year the book was published in
	 */
	@Override
	public void setPublishedIn(java.lang.Integer value) {
		setValue(org.jooq.test.h2.generatedclasses.tables.TBook.PUBLISHED_IN, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_BOOK.PUBLISHED_IN</code>. The year the book was published in
	 */
	@Override
	public java.lang.Integer getPublishedIn() {
		return getValue(org.jooq.test.h2.generatedclasses.tables.TBook.PUBLISHED_IN);
	}

	/**
	 * Setter for <code>PUBLIC.T_BOOK.LANGUAGE_ID</code>. The language of the book
	 */
	@Override
	public void setLanguageId(java.lang.Integer value) {
		setValue(org.jooq.test.h2.generatedclasses.tables.TBook.LANGUAGE_ID, value);
	}

	/**
	 * Link this record to a given {@link org.jooq.test.h2.generatedclasses.tables.records.TLanguageRecord}
	 */
	public void setLanguageId(org.jooq.test.h2.generatedclasses.tables.records.TLanguageRecord value) {
		if (value == null) {
			setValue(org.jooq.test.h2.generatedclasses.tables.TBook.LANGUAGE_ID, null);
		}
		else {
			setValue(org.jooq.test.h2.generatedclasses.tables.TBook.LANGUAGE_ID, value.getValue(org.jooq.test.h2.generatedclasses.tables.TLanguage.ID));
		}
	}

	/**
	 * Getter for <code>PUBLIC.T_BOOK.LANGUAGE_ID</code>. The language of the book
	 */
	@Override
	public java.lang.Integer getLanguageId() {
		return getValue(org.jooq.test.h2.generatedclasses.tables.TBook.LANGUAGE_ID);
	}

	/**
	 * Setter for <code>PUBLIC.T_BOOK.CONTENT_TEXT</code>. Some textual content of the book
	 */
	@Override
	public void setContentText(java.lang.String value) {
		setValue(org.jooq.test.h2.generatedclasses.tables.TBook.CONTENT_TEXT, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_BOOK.CONTENT_TEXT</code>. Some textual content of the book
	 */
	@Override
	public java.lang.String getContentText() {
		return getValue(org.jooq.test.h2.generatedclasses.tables.TBook.CONTENT_TEXT);
	}

	/**
	 * Setter for <code>PUBLIC.T_BOOK.CONTENT_PDF</code>. Some binary content of the book
	 */
	@Override
	public void setContentPdf(byte[] value) {
		setValue(org.jooq.test.h2.generatedclasses.tables.TBook.CONTENT_PDF, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_BOOK.CONTENT_PDF</code>. Some binary content of the book
	 */
	@Override
	public byte[] getContentPdf() {
		return getValue(org.jooq.test.h2.generatedclasses.tables.TBook.CONTENT_PDF);
	}

	/**
	 * Setter for <code>PUBLIC.T_BOOK.REC_VERSION</code>. 
	 */
	@Override
	public void setRecVersion(java.lang.Integer value) {
		setValue(org.jooq.test.h2.generatedclasses.tables.TBook.REC_VERSION, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_BOOK.REC_VERSION</code>. 
	 */
	@Override
	public java.lang.Integer getRecVersion() {
		return getValue(org.jooq.test.h2.generatedclasses.tables.TBook.REC_VERSION);
	}

	/**
	 * Setter for <code>PUBLIC.T_BOOK.REC_TIMESTAMP</code>. 
	 */
	@Override
	public void setRecTimestamp(java.sql.Timestamp value) {
		setValue(org.jooq.test.h2.generatedclasses.tables.TBook.REC_TIMESTAMP, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_BOOK.REC_TIMESTAMP</code>. 
	 */
	@Override
	public java.sql.Timestamp getRecTimestamp() {
		return getValue(org.jooq.test.h2.generatedclasses.tables.TBook.REC_TIMESTAMP);
	}

	// -------------------------------------------------------------------------
	// Foreign key navigation methods
	// -------------------------------------------------------------------------

	/**
	 * Fetch a list of <code>PUBLIC.T_BOOK_TO_BOOK_STORE</code> referencing this <code>PUBLIC.T_BOOK</code>
	 */
	public org.jooq.Result<org.jooq.test.h2.generatedclasses.tables.records.TBookToBookStoreRecord> fetchTBookToBookStoreList() {
		return create()
			.selectFrom(org.jooq.test.h2.generatedclasses.tables.TBookToBookStore.T_BOOK_TO_BOOK_STORE)
			.where(org.jooq.test.h2.generatedclasses.tables.TBookToBookStore.BOOK_ID.equal(getValue(org.jooq.test.h2.generatedclasses.tables.TBook.ID)))
			.fetch();
	}

	/**
	 * Fetch a <code>PUBLIC.T_AUTHOR</code> referenced by this <code>PUBLIC.T_BOOK</code>
	 */
	public org.jooq.test.h2.generatedclasses.tables.records.TAuthorRecord fetchTAuthorByAuthorId() {
		return create()
			.selectFrom(org.jooq.test.h2.generatedclasses.tables.TAuthor.T_AUTHOR)
			.where(org.jooq.test.h2.generatedclasses.tables.TAuthor.ID.equal(getValue(org.jooq.test.h2.generatedclasses.tables.TBook.AUTHOR_ID)))
			.fetchOne();
	}

	/**
	 * Fetch a <code>PUBLIC.T_AUTHOR</code> referenced by this <code>PUBLIC.T_BOOK</code>
	 */
	public org.jooq.test.h2.generatedclasses.tables.records.TAuthorRecord fetchTAuthorByCoAuthorId() {
		return create()
			.selectFrom(org.jooq.test.h2.generatedclasses.tables.TAuthor.T_AUTHOR)
			.where(org.jooq.test.h2.generatedclasses.tables.TAuthor.ID.equal(getValue(org.jooq.test.h2.generatedclasses.tables.TBook.CO_AUTHOR_ID)))
			.fetchOne();
	}

	/**
	 * Fetch a <code>PUBLIC.T_LANGUAGE</code> referenced by this <code>PUBLIC.T_BOOK</code>
	 */
	public org.jooq.test.h2.generatedclasses.tables.records.TLanguageRecord fetchTLanguage() {
		return create()
			.selectFrom(org.jooq.test.h2.generatedclasses.tables.TLanguage.T_LANGUAGE)
			.where(org.jooq.test.h2.generatedclasses.tables.TLanguage.ID.equal(getValue(org.jooq.test.h2.generatedclasses.tables.TBook.LANGUAGE_ID)))
			.fetchOne();
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TBookRecord
	 */
	public TBookRecord() {
		super(org.jooq.test.h2.generatedclasses.tables.TBook.T_BOOK);
	}
}
