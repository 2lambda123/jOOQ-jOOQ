/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables.records;

/**
 * This class is generated by jOOQ.
 *
 * An entity holding authors of books
 */
@java.lang.SuppressWarnings("all")
@javax.persistence.Entity
@javax.persistence.Table(name = "T_AUTHOR", schema = "TEST")
public class T_AUTHOR extends org.jooq.impl.UpdatableRecordImpl<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR> implements java.lang.Cloneable, org.jooq.Record6<java.lang.Integer, java.lang.String, java.lang.String, java.sql.Date, java.lang.Integer, org.jooq.test.oracle3.generatedclasses.udt.records.U_ADDRESS_TYPE>, org.jooq.test.oracle3.generatedclasses.tables.interfaces.T_AUTHOR_INTERFACE {

	private static final long serialVersionUID = -48614356;

	/**
	 * Setter for <code>TEST.T_AUTHOR.ID</code>. The author ID
	 */
	@Override
	public void setID(java.lang.Integer value) {
		setValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.ID, value);
	}

	/**
	 * Getter for <code>TEST.T_AUTHOR.ID</code>. The author ID
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "ID", unique = true, nullable = false, precision = 7)
	@Override
	public java.lang.Integer getID() {
		return getValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.ID);
	}

	/**
	 * Setter for <code>TEST.T_AUTHOR.FIRST_NAME</code>. The author's first name
	 */
	@Override
	public void setFIRST_NAME(java.lang.String value) {
		setValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.FIRST_NAME, value);
	}

	/**
	 * Getter for <code>TEST.T_AUTHOR.FIRST_NAME</code>. The author's first name
	 */
	@javax.persistence.Column(name = "FIRST_NAME", length = 50)
	@Override
	public java.lang.String getFIRST_NAME() {
		return getValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.FIRST_NAME);
	}

	/**
	 * Setter for <code>TEST.T_AUTHOR.LAST_NAME</code>. The author's last name
	 */
	@Override
	public void setLAST_NAME(java.lang.String value) {
		setValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.LAST_NAME, value);
	}

	/**
	 * Getter for <code>TEST.T_AUTHOR.LAST_NAME</code>. The author's last name
	 */
	@javax.persistence.Column(name = "LAST_NAME", nullable = false, length = 50)
	@Override
	public java.lang.String getLAST_NAME() {
		return getValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.LAST_NAME);
	}

	/**
	 * Setter for <code>TEST.T_AUTHOR.DATE_OF_BIRTH</code>. The author's date of birth
	 */
	@Override
	public void setDATE_OF_BIRTH(java.sql.Date value) {
		setValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.DATE_OF_BIRTH, value);
	}

	/**
	 * Getter for <code>TEST.T_AUTHOR.DATE_OF_BIRTH</code>. The author's date of birth
	 */
	@javax.persistence.Column(name = "DATE_OF_BIRTH", length = 7)
	@Override
	public java.sql.Date getDATE_OF_BIRTH() {
		return getValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.DATE_OF_BIRTH);
	}

	/**
	 * Setter for <code>TEST.T_AUTHOR.YEAR_OF_BIRTH</code>. The author's year of birth
	 */
	@Override
	public void setYEAR_OF_BIRTH(java.lang.Integer value) {
		setValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.YEAR_OF_BIRTH, value);
	}

	/**
	 * Getter for <code>TEST.T_AUTHOR.YEAR_OF_BIRTH</code>. The author's year of birth
	 */
	@javax.persistence.Column(name = "YEAR_OF_BIRTH", precision = 7)
	@Override
	public java.lang.Integer getYEAR_OF_BIRTH() {
		return getValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.YEAR_OF_BIRTH);
	}

	/**
	 * Setter for <code>TEST.T_AUTHOR.ADDRESS</code>. The author's address
	 */
	@Override
	public void setADDRESS(org.jooq.test.oracle3.generatedclasses.udt.records.U_ADDRESS_TYPE value) {
		setValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.ADDRESS, value);
	}

	/**
	 * Getter for <code>TEST.T_AUTHOR.ADDRESS</code>. The author's address
	 */
	@javax.persistence.Column(name = "ADDRESS", length = 1)
	@Override
	public org.jooq.test.oracle3.generatedclasses.udt.records.U_ADDRESS_TYPE getADDRESS() {
		return getValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.ADDRESS);
	}

	// -------------------------------------------------------------------------
	// Foreign key navigation methods
	// -------------------------------------------------------------------------

	/**
	 * Fetch a list of <code>TEST.T_BOOK</code> referencing this <code>TEST.T_AUTHOR</code>
	 */
	public org.jooq.Result<org.jooq.test.oracle3.generatedclasses.tables.records.T_BOOK> fetchT_BOOKListByAUTHOR_ID() {
		return create()
			.selectFrom(org.jooq.test.oracle3.generatedclasses.tables.T_BOOK.T_BOOK)
			.where(org.jooq.test.oracle3.generatedclasses.tables.T_BOOK.T_BOOK.AUTHOR_ID.equal(getValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.ID)))
			.fetch();
	}

	/**
	 * Fetch a list of <code>TEST.T_BOOK</code> referencing this <code>TEST.T_AUTHOR</code>
	 */
	public org.jooq.Result<org.jooq.test.oracle3.generatedclasses.tables.records.T_BOOK> fetchT_BOOKListByCO_AUTHOR_ID() {
		return create()
			.selectFrom(org.jooq.test.oracle3.generatedclasses.tables.T_BOOK.T_BOOK)
			.where(org.jooq.test.oracle3.generatedclasses.tables.T_BOOK.T_BOOK.CO_AUTHOR_ID.equal(getValue(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.ID)))
			.fetch();
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Integer, java.lang.String, java.lang.String, java.sql.Date, java.lang.Integer, org.jooq.test.oracle3.generatedclasses.udt.records.U_ADDRESS_TYPE> fieldsRow() {
		return org.jooq.impl.Factory.row(field1(), field2(), field3(), field4(), field5(), field6());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Integer, java.lang.String, java.lang.String, java.sql.Date, java.lang.Integer, org.jooq.test.oracle3.generatedclasses.udt.records.U_ADDRESS_TYPE> valuesRow() {
		return org.jooq.impl.Factory.row(value1(), value2(), value3(), value4(), value5(), value6());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.FIRST_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.LAST_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Date> field4() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.DATE_OF_BIRTH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.YEAR_OF_BIRTH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.jooq.test.oracle3.generatedclasses.udt.records.U_ADDRESS_TYPE> field6() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR.ADDRESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getFIRST_NAME();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getLAST_NAME();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Date value4() {
		return getDATE_OF_BIRTH();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getYEAR_OF_BIRTH();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.test.oracle3.generatedclasses.udt.records.U_ADDRESS_TYPE value6() {
		return getADDRESS();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(org.jooq.test.oracle3.generatedclasses.tables.interfaces.T_AUTHOR_INTERFACE from) {
		setID(from.getID());
		setFIRST_NAME(from.getFIRST_NAME());
		setLAST_NAME(from.getLAST_NAME());
		setDATE_OF_BIRTH(from.getDATE_OF_BIRTH());
		setYEAR_OF_BIRTH(from.getYEAR_OF_BIRTH());
		setADDRESS(from.getADDRESS());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends org.jooq.test.oracle3.generatedclasses.tables.interfaces.T_AUTHOR_INTERFACE> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached T_AUTHOR
	 */
	public T_AUTHOR() {
		super(org.jooq.test.oracle3.generatedclasses.tables.T_AUTHOR.T_AUTHOR);
	}
}
