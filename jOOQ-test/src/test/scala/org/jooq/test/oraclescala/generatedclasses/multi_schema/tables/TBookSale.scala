/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.multi_schema.tables


import java.lang.Class
import java.lang.Integer
import java.lang.String
import java.math.BigDecimal
import java.sql.Date
import java.util.Arrays
import java.util.List

import org.jooq.Field
import org.jooq.ForeignKey
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl
import org.jooq.test.all.scala.Test
import org.jooq.test.oraclescala.generatedclasses.multi_schema.Keys
import org.jooq.test.oraclescala.generatedclasses.multi_schema.MultiSchema
import org.jooq.test.oraclescala.generatedclasses.multi_schema.tables.records.TBookSaleRecord


object TBookSale {

	/**
	 * The reference instance of <code>MULTI_SCHEMA.T_BOOK_SALE</code>
	 */
	val T_BOOK_SALE = new TBookSale
}

/**
 * This class is generated by jOOQ.
 */
class TBookSale(alias : String, aliased : Table[TBookSaleRecord], parameters : Array[ Field[_] ]) extends TableImpl[TBookSaleRecord](alias, MultiSchema.MULTI_SCHEMA, aliased, parameters, "") with Test {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[TBookSaleRecord] = {
		classOf[TBookSaleRecord]
	}

	/**
	 * The column <code>MULTI_SCHEMA.T_BOOK_SALE.ID</code>.
	 */
	val ID : TableField[TBookSaleRecord, Integer] = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), "")

	/**
	 * The column <code>MULTI_SCHEMA.T_BOOK_SALE.BOOK_ID</code>.
	 */
	val BOOK_ID : TableField[TBookSaleRecord, Integer] = createField("BOOK_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), "")

	/**
	 * The column <code>MULTI_SCHEMA.T_BOOK_SALE.BOOK_STORE_NAME</code>.
	 */
	val BOOK_STORE_NAME : TableField[TBookSaleRecord, String] = createField("BOOK_STORE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(400).nullable(false), "")

	/**
	 * The column <code>MULTI_SCHEMA.T_BOOK_SALE.SOLD_AT</code>.
	 */
	val SOLD_AT : TableField[TBookSaleRecord, Date] = createField("SOLD_AT", org.jooq.impl.SQLDataType.DATE.nullable(false), "")

	/**
	 * The column <code>MULTI_SCHEMA.T_BOOK_SALE.SOLD_FOR</code>.
	 */
	val SOLD_FOR : TableField[TBookSaleRecord, BigDecimal] = createField("SOLD_FOR", org.jooq.impl.SQLDataType.NUMERIC.precision(10, 2).nullable(false), "")

	/**
	 * Create a <code>MULTI_SCHEMA.T_BOOK_SALE</code> table reference
	 */
	def this() = {
		this("T_BOOK_SALE", null, null)
	}

	/**
	 * Create an aliased <code>MULTI_SCHEMA.T_BOOK_SALE</code> table reference
	 */
	def this(alias : String) = {
		this(alias, org.jooq.test.oraclescala.generatedclasses.multi_schema.tables.TBookSale.T_BOOK_SALE, null)
	}

	private def this(alias : String, aliased : Table[TBookSaleRecord]) = {
		this(alias, aliased, null)
	}

	override def getPrimaryKey : UniqueKey[TBookSaleRecord] = {
		Keys.PK_T_BOOK_SALE
	}

	override def getKeys : List[ UniqueKey[TBookSaleRecord] ] = {
		return Arrays.asList[ UniqueKey[TBookSaleRecord] ](Keys.PK_T_BOOK_SALE)
	}

	override def getReferences : List[ ForeignKey[TBookSaleRecord, _] ] = {
		return Arrays.asList[ ForeignKey[TBookSaleRecord, _] ](Keys.FK_T_BOOK_TO_BOOK_STORE)
	}

	override def as(alias : String) : TBookSale = {
		new TBookSale(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : TBookSale = {
		new TBookSale(name, null)
	}
}
