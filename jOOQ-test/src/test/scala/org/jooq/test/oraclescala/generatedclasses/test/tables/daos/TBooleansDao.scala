/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.daos


import java.lang.Boolean
import java.lang.Integer
import java.util.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl
import org.jooq.test.all.converters.Boolean_10
import org.jooq.test.all.converters.Boolean_TF_LC
import org.jooq.test.all.converters.Boolean_TF_UC
import org.jooq.test.all.converters.Boolean_YES_NO_LC
import org.jooq.test.all.converters.Boolean_YES_NO_UC
import org.jooq.test.all.converters.Boolean_YN_LC
import org.jooq.test.all.converters.Boolean_YN_UC
import org.jooq.test.oraclescala.generatedclasses.test.tables.TBooleans
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.TBooleansRecord


/**
 * This class is generated by jOOQ.
 */
class TBooleansDao(configuration : Configuration) extends DAOImpl[TBooleansRecord, org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans, Integer](TBooleans.T_BOOLEANS, classOf[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans], configuration) {

	/**
	 * Create a new TBooleansDao without any configuration
	 */
	def this() = {
		this(null)
	}

	override protected def getId(o : org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans) : Integer = {
		o.getId
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	def fetchById(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans] = {
		fetch(TBooleans.T_BOOLEANS.ID, values:_*)
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	def fetchOneById(value : Integer) : org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans = {
		fetchOne(TBooleans.T_BOOLEANS.ID, value)
	}

	/**
	 * Fetch records that have <code>ONE_ZERO IN (values)</code>
	 */
	def fetchByOneZero(values : Boolean_10*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans] = {
		fetch(TBooleans.T_BOOLEANS.ONE_ZERO, values:_*)
	}

	/**
	 * Fetch records that have <code>TRUE_FALSE_LC IN (values)</code>
	 */
	def fetchByTrueFalseLc(values : Boolean_TF_LC*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans] = {
		fetch(TBooleans.T_BOOLEANS.TRUE_FALSE_LC, values:_*)
	}

	/**
	 * Fetch records that have <code>TRUE_FALSE_UC IN (values)</code>
	 */
	def fetchByTrueFalseUc(values : Boolean_TF_UC*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans] = {
		fetch(TBooleans.T_BOOLEANS.TRUE_FALSE_UC, values:_*)
	}

	/**
	 * Fetch records that have <code>YES_NO_LC IN (values)</code>
	 */
	def fetchByYesNoLc(values : Boolean_YES_NO_LC*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans] = {
		fetch(TBooleans.T_BOOLEANS.YES_NO_LC, values:_*)
	}

	/**
	 * Fetch records that have <code>YES_NO_UC IN (values)</code>
	 */
	def fetchByYesNoUc(values : Boolean_YES_NO_UC*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans] = {
		fetch(TBooleans.T_BOOLEANS.YES_NO_UC, values:_*)
	}

	/**
	 * Fetch records that have <code>Y_N_LC IN (values)</code>
	 */
	def fetchByYNLc(values : Boolean_YN_LC*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans] = {
		fetch(TBooleans.T_BOOLEANS.Y_N_LC, values:_*)
	}

	/**
	 * Fetch records that have <code>Y_N_UC IN (values)</code>
	 */
	def fetchByYNUc(values : Boolean_YN_UC*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans] = {
		fetch(TBooleans.T_BOOLEANS.Y_N_UC, values:_*)
	}

	/**
	 * Fetch records that have <code>VC_BOOLEAN IN (values)</code>
	 */
	def fetchByVcBoolean(values : Boolean*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans] = {
		fetch(TBooleans.T_BOOLEANS.VC_BOOLEAN, values:_*)
	}

	/**
	 * Fetch records that have <code>C_BOOLEAN IN (values)</code>
	 */
	def fetchByCBoolean(values : Boolean*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans] = {
		fetch(TBooleans.T_BOOLEANS.C_BOOLEAN, values:_*)
	}

	/**
	 * Fetch records that have <code>N_BOOLEAN IN (values)</code>
	 */
	def fetchByNBoolean(values : Boolean*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBooleans] = {
		fetch(TBooleans.T_BOOLEANS.N_BOOLEAN, values:_*)
	}
}
