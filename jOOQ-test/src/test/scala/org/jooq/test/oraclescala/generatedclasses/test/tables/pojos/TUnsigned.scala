/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.pojos


import java.io.Serializable
import java.lang.StringBuilder

import javax.persistence.Column
import javax.persistence.Entity
import javax.persistence.Table

import org.jooq.types.UByte
import org.jooq.types.UInteger
import org.jooq.types.ULong
import org.jooq.types.UShort


/**
 * This class is generated by jOOQ.
 */
@Entity
@Table(name = "T_UNSIGNED", schema = "TEST")
class TUnsigned(
	  private var uByte : UByte   
	, private var uShort : UShort  
	, private var uInt : UInteger
	, private var uLong : ULong   
) extends Serializable {

	def this() = {
		this(null, null, null, null)
	}

	def this (value : TUnsigned) = {
		this(
			  value.uByte
			, value.uShort
			, value.uInt
			, value.uLong
		)
	}

	@Column(name = "U_BYTE")
	def getUByte : UByte = {
		this.uByte
	}

	def setUByte(uByte : UByte) : Unit = {
		this.uByte = uByte
	}

	@Column(name = "U_SHORT")
	def getUShort : UShort = {
		this.uShort
	}

	def setUShort(uShort : UShort) : Unit = {
		this.uShort = uShort
	}

	@Column(name = "U_INT")
	def getUInt : UInteger = {
		this.uInt
	}

	def setUInt(uInt : UInteger) : Unit = {
		this.uInt = uInt
	}

	@Column(name = "U_LONG")
	def getULong : ULong = {
		this.uLong
	}

	def setULong(uLong : ULong) : Unit = {
		this.uLong = uLong
	}

	override def equals(obj : Any) : scala.Boolean = {
		if (this == obj)
			return true
		if (obj == null)
			return false
		if (getClass() != obj.getClass())
			return false
		val other = obj.asInstanceOf[TUnsigned]
		if (uByte == null) {
			if (other.uByte != null)
				return false
		}
		else if (!uByte.equals(other.uByte))
			return false
		if (uShort == null) {
			if (other.uShort != null)
				return false
		}
		else if (!uShort.equals(other.uShort))
			return false
		if (uInt == null) {
			if (other.uInt != null)
				return false
		}
		else if (!uInt.equals(other.uInt))
			return false
		if (uLong == null) {
			if (other.uLong != null)
				return false
		}
		else if (!uLong.equals(other.uLong))
			return false
		return true
	}

	override def hashCode : Int = {
		val prime = 31
		var result = 1
		result = prime * result + (if (uByte == null) 0 else uByte.hashCode())
		result = prime * result + (if (uShort == null) 0 else uShort.hashCode())
		result = prime * result + (if (uInt == null) 0 else uInt.hashCode())
		result = prime * result + (if (uLong == null) 0 else uLong.hashCode())
		return result
	}

	override def toString : String = {
		val sb = new StringBuilder("TUnsigned (")

		sb.append(uByte)
		sb.append(", ").append(uShort)
		sb.append(", ").append(uInt)
		sb.append(", ").append(uLong)

		sb.append(")");
		return sb.toString
	}
}
