/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.packages


import java.lang.Number
import java.lang.Object
import java.lang.String
import java.math.BigDecimal

import org.jooq.Configuration
import org.jooq.Field
import org.jooq.impl.PackageImpl
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.packages.pls_objects.FBool
import org.jooq.test.oraclescala.generatedclasses.test.packages.pls_objects.PBool
import org.jooq.test.oraclescala.generatedclasses.test.packages.pls_objects.PlsF
import org.jooq.test.oraclescala.generatedclasses.test.packages.pls_objects.PlsP


/**
 * Convenience access to all stored procedures and functions in PLS_OBJECTS
 */
object PlsObjects extends PackageImpl("PLS_OBJECTS", Test.TEST) {

	/**
	 * The reference instance of <code>TEST.PLS_OBJECTS</code>
	 */
	val PLS_OBJECTS = PlsObjects

	/**
	 * Call <code>TEST.PLS_OBJECTS.F_BOOL</code>
	 */
	def fBool(configuration : Configuration, i : Object) : Object = {
		val f = new FBool()
		f.setI(i)

		f.execute(configuration)
		f.getReturnValue
	}

	/**
	 * Get <code>TEST.PLS_OBJECTS.F_BOOL</code> as a field
	 */
	def fBool(i : Object) : Field[Object] = {
		val f = new FBool
		f.setI(i)

		return f.asField
	}

	/**
	 * Get <code>TEST.PLS_OBJECTS.F_BOOL</code> as a field
	 */
	def fBool(i : Field[Object]) : Field[Object] = {
		val f = new FBool
		f.setI(i)

		return f.asField
	}

	/**
	 * Call <code>TEST.PLS_OBJECTS.P_BOOL</code>
	 */
	def pBool(configuration : Configuration, i : Object, io : Object) : PBool = {
		val p = new PBool
		p.setI(i)
		p.setIo(io)

		p.execute(configuration)
		return p
	}

	/**
	 * Call <code>TEST.PLS_OBJECTS.PLS_F</code>
	 */
	def plsF(configuration : Configuration, i : Number, v : String) : BigDecimal = {
		val f = new PlsF()
		f.setI(i)
		f.setV(v)

		f.execute(configuration)
		f.getReturnValue
	}

	/**
	 * Get <code>TEST.PLS_OBJECTS.PLS_F</code> as a field
	 */
	def plsF(i : Number, v : String) : Field[BigDecimal] = {
		val f = new PlsF
		f.setI(i)
		f.setV(v)

		return f.asField
	}

	/**
	 * Get <code>TEST.PLS_OBJECTS.PLS_F</code> as a field
	 */
	def plsF(i : Field[_ <: Number], v : Field[String]) : Field[BigDecimal] = {
		val f = new PlsF
		f.setI(i)
		f.setV(v)

		return f.asField
	}

	/**
	 * Call <code>TEST.PLS_OBJECTS.PLS_P</code>
	 */
	def plsP(configuration : Configuration, i : Number, v : String) : PlsP = {
		val p = new PlsP
		p.setI(i)
		p.setV(v)

		p.execute(configuration)
		return p
	}
}
