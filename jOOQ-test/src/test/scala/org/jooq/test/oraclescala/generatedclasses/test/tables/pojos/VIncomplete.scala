/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.pojos


import java.io.Serializable
import java.lang.Object
import java.lang.StringBuilder

import javax.persistence.Column
import javax.persistence.Entity
import javax.persistence.Table


/**
 * This class is generated by jOOQ.
 */
@Entity
@Table(name = "V_INCOMPLETE", schema = "TEST")
class VIncomplete(
	  private var id : Object
	, private var authorId : Object
	, private var coAuthorId : Object
	, private var detailsId : Object
	, private var title : Object
	, private var publishedIn : Object
	, private var languageId : Object
	, private var contentText : Object
	, private var contentPdf : Object
	, private var recVersion : Object
	, private var recTimestamp : Object
) extends Serializable {

	def this() = {
		this(null, null, null, null, null, null, null, null, null, null, null)
	}

	def this (value : VIncomplete) = {
		this(
			  value.id
			, value.authorId
			, value.coAuthorId
			, value.detailsId
			, value.title
			, value.publishedIn
			, value.languageId
			, value.contentText
			, value.contentPdf
			, value.recVersion
			, value.recTimestamp
		)
	}

	@Column(name = "ID")
	def getId : Object = {
		this.id
	}

	def setId(id : Object) : Unit = {
		this.id = id
	}

	@Column(name = "AUTHOR_ID")
	def getAuthorId : Object = {
		this.authorId
	}

	def setAuthorId(authorId : Object) : Unit = {
		this.authorId = authorId
	}

	@Column(name = "CO_AUTHOR_ID")
	def getCoAuthorId : Object = {
		this.coAuthorId
	}

	def setCoAuthorId(coAuthorId : Object) : Unit = {
		this.coAuthorId = coAuthorId
	}

	@Column(name = "DETAILS_ID")
	def getDetailsId : Object = {
		this.detailsId
	}

	def setDetailsId(detailsId : Object) : Unit = {
		this.detailsId = detailsId
	}

	@Column(name = "TITLE")
	def getTitle : Object = {
		this.title
	}

	def setTitle(title : Object) : Unit = {
		this.title = title
	}

	@Column(name = "PUBLISHED_IN")
	def getPublishedIn : Object = {
		this.publishedIn
	}

	def setPublishedIn(publishedIn : Object) : Unit = {
		this.publishedIn = publishedIn
	}

	@Column(name = "LANGUAGE_ID")
	def getLanguageId : Object = {
		this.languageId
	}

	def setLanguageId(languageId : Object) : Unit = {
		this.languageId = languageId
	}

	@Column(name = "CONTENT_TEXT")
	def getContentText : Object = {
		this.contentText
	}

	def setContentText(contentText : Object) : Unit = {
		this.contentText = contentText
	}

	@Column(name = "CONTENT_PDF")
	def getContentPdf : Object = {
		this.contentPdf
	}

	def setContentPdf(contentPdf : Object) : Unit = {
		this.contentPdf = contentPdf
	}

	@Column(name = "REC_VERSION")
	def getRecVersion : Object = {
		this.recVersion
	}

	def setRecVersion(recVersion : Object) : Unit = {
		this.recVersion = recVersion
	}

	@Column(name = "REC_TIMESTAMP")
	def getRecTimestamp : Object = {
		this.recTimestamp
	}

	def setRecTimestamp(recTimestamp : Object) : Unit = {
		this.recTimestamp = recTimestamp
	}

	override def equals(obj : Any) : scala.Boolean = {
		if (this == obj)
			return true
		if (obj == null)
			return false
		if (getClass() != obj.getClass())
			return false
		val other = obj.asInstanceOf[VIncomplete]
		if (id == null) {
			if (other.id != null)
				return false
		}
		else if (!id.equals(other.id))
			return false
		if (authorId == null) {
			if (other.authorId != null)
				return false
		}
		else if (!authorId.equals(other.authorId))
			return false
		if (coAuthorId == null) {
			if (other.coAuthorId != null)
				return false
		}
		else if (!coAuthorId.equals(other.coAuthorId))
			return false
		if (detailsId == null) {
			if (other.detailsId != null)
				return false
		}
		else if (!detailsId.equals(other.detailsId))
			return false
		if (title == null) {
			if (other.title != null)
				return false
		}
		else if (!title.equals(other.title))
			return false
		if (publishedIn == null) {
			if (other.publishedIn != null)
				return false
		}
		else if (!publishedIn.equals(other.publishedIn))
			return false
		if (languageId == null) {
			if (other.languageId != null)
				return false
		}
		else if (!languageId.equals(other.languageId))
			return false
		if (contentText == null) {
			if (other.contentText != null)
				return false
		}
		else if (!contentText.equals(other.contentText))
			return false
		if (contentPdf == null) {
			if (other.contentPdf != null)
				return false
		}
		else if (!contentPdf.equals(other.contentPdf))
			return false
		if (recVersion == null) {
			if (other.recVersion != null)
				return false
		}
		else if (!recVersion.equals(other.recVersion))
			return false
		if (recTimestamp == null) {
			if (other.recTimestamp != null)
				return false
		}
		else if (!recTimestamp.equals(other.recTimestamp))
			return false
		return true
	}

	override def hashCode : Int = {
		val prime = 31
		var result = 1
		result = prime * result + (if (id == null) 0 else id.hashCode())
		result = prime * result + (if (authorId == null) 0 else authorId.hashCode())
		result = prime * result + (if (coAuthorId == null) 0 else coAuthorId.hashCode())
		result = prime * result + (if (detailsId == null) 0 else detailsId.hashCode())
		result = prime * result + (if (title == null) 0 else title.hashCode())
		result = prime * result + (if (publishedIn == null) 0 else publishedIn.hashCode())
		result = prime * result + (if (languageId == null) 0 else languageId.hashCode())
		result = prime * result + (if (contentText == null) 0 else contentText.hashCode())
		result = prime * result + (if (contentPdf == null) 0 else contentPdf.hashCode())
		result = prime * result + (if (recVersion == null) 0 else recVersion.hashCode())
		result = prime * result + (if (recTimestamp == null) 0 else recTimestamp.hashCode())
		return result
	}

	override def toString : String = {
		val sb = new StringBuilder("VIncomplete (")

		sb.append(id)
		sb.append(", ").append(authorId)
		sb.append(", ").append(coAuthorId)
		sb.append(", ").append(detailsId)
		sb.append(", ").append(title)
		sb.append(", ").append(publishedIn)
		sb.append(", ").append(languageId)
		sb.append(", ").append(contentText)
		sb.append(", ").append(contentPdf)
		sb.append(", ").append(recVersion)
		sb.append(", ").append(recTimestamp)

		sb.append(")");
		return sb.toString
	}
}
