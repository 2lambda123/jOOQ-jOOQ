/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables


import java.lang.Class
import java.lang.Integer
import java.lang.String
import java.util.Arrays
import java.util.List

import org.jooq.Field
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl
import org.jooq.test.oraclescala.generatedclasses.test.Keys
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.TArraysRecord
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UDateArrayRecord
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UNumberArrayRecord
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UNumberLongArrayRecord
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UStringArrayRecord


object TArrays {

	/**
	 * The reference instance of <code>TEST.T_ARRAYS</code>
	 */
	val T_ARRAYS = new TArrays
}

/**
 * This class is generated by jOOQ.
 */
class TArrays(alias : String, aliased : Table[TArraysRecord], parameters : Array[ Field[_] ]) extends TableImpl[TArraysRecord](alias, Test.TEST, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[TArraysRecord] = {
		classOf[TArraysRecord]
	}

	/**
	 * The column <code>TEST.T_ARRAYS.ID</code>.
	 */
	val ID : TableField[TArraysRecord, Integer] = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), "")

	/**
	 * The column <code>TEST.T_ARRAYS.STRING_ARRAY</code>.
	 */
	val STRING_ARRAY : TableField[TArraysRecord, UStringArrayRecord] = createField("STRING_ARRAY", org.jooq.impl.SQLDataType.VARCHAR.length(20).asArrayDataType(classOf[org.jooq.test.oraclescala.generatedclasses.test.udt.records.UStringArrayRecord]), "")

	/**
	 * The column <code>TEST.T_ARRAYS.NUMBER_ARRAY</code>.
	 */
	val NUMBER_ARRAY : TableField[TArraysRecord, UNumberArrayRecord] = createField("NUMBER_ARRAY", org.jooq.impl.SQLDataType.INTEGER.asArrayDataType(classOf[org.jooq.test.oraclescala.generatedclasses.test.udt.records.UNumberArrayRecord]), "")

	/**
	 * The column <code>TEST.T_ARRAYS.NUMBER_LONG_ARRAY</code>.
	 */
	val NUMBER_LONG_ARRAY : TableField[TArraysRecord, UNumberLongArrayRecord] = createField("NUMBER_LONG_ARRAY", org.jooq.impl.SQLDataType.BIGINT.asArrayDataType(classOf[org.jooq.test.oraclescala.generatedclasses.test.udt.records.UNumberLongArrayRecord]), "")

	/**
	 * The column <code>TEST.T_ARRAYS.DATE_ARRAY</code>.
	 */
	val DATE_ARRAY : TableField[TArraysRecord, UDateArrayRecord] = createField("DATE_ARRAY", org.jooq.impl.SQLDataType.DATE.asArrayDataType(classOf[org.jooq.test.oraclescala.generatedclasses.test.udt.records.UDateArrayRecord]), "")

	/**
	 * Create a <code>TEST.T_ARRAYS</code> table reference
	 */
	def this() = {
		this("T_ARRAYS", null, null)
	}

	/**
	 * Create an aliased <code>TEST.T_ARRAYS</code> table reference
	 */
	def this(alias : String) = {
		this(alias, org.jooq.test.oraclescala.generatedclasses.test.tables.TArrays.T_ARRAYS, null)
	}

	private def this(alias : String, aliased : Table[TArraysRecord]) = {
		this(alias, aliased, null)
	}

	override def getPrimaryKey : UniqueKey[TArraysRecord] = {
		Keys.PK_T_ARRAYS
	}

	override def getKeys : List[ UniqueKey[TArraysRecord] ] = {
		return Arrays.asList[ UniqueKey[TArraysRecord] ](Keys.PK_T_ARRAYS)
	}

	override def as(alias : String) : TArrays = {
		new TArrays(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : TArrays = {
		new TArrays(name, null)
	}
}
