/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.multi_schema.udt.pojos


import java.io.Serializable
import java.lang.Integer
import java.lang.StringBuilder

import org.jooq.test.oraclescala.generatedclasses.test.udt.pojos.UAddressType
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UAddressTableRecord


/**
 * This class is generated by jOOQ.
 */
class U_4347(
	  private var id : Integer            
	, private var t : UAddressTableRecord
	, private var o : UAddressType       
) extends Serializable {

	def this() = {
		this(null, null, null)
	}

	def this (value : U_4347) = {
		this(
			  value.id
			, value.t
			, value.o
		)
	}

	def getId : Integer = {
		this.id
	}

	def setId(id : Integer) : Unit = {
		this.id = id
	}

	def getT : UAddressTableRecord = {
		this.t
	}

	def setT(t : UAddressTableRecord) : Unit = {
		this.t = t
	}

	def getO : UAddressType = {
		this.o
	}

	def setO(o : UAddressType) : Unit = {
		this.o = o
	}

	override def equals(obj : Any) : scala.Boolean = {
		if (this == obj)
			return true
		if (obj == null)
			return false
		if (getClass() != obj.getClass())
			return false
		val other = obj.asInstanceOf[U_4347]
		if (id == null) {
			if (other.id != null)
				return false
		}
		else if (!id.equals(other.id))
			return false
		if (t == null) {
			if (other.t != null)
				return false
		}
		else if (!t.equals(other.t))
			return false
		if (o == null) {
			if (other.o != null)
				return false
		}
		else if (!o.equals(other.o))
			return false
		return true
	}

	override def hashCode : Int = {
		val prime = 31
		var result = 1
		result = prime * result + (if (id == null) 0 else id.hashCode())
		result = prime * result + (if (t == null) 0 else t.hashCode())
		result = prime * result + (if (o == null) 0 else o.hashCode())
		return result
	}

	override def toString : String = {
		val sb = new StringBuilder("U_4347 (")

		sb.append(id)
		sb.append(", ").append(t)
		sb.append(", ").append(o)

		sb.append(")");
		return sb.toString
	}
}
