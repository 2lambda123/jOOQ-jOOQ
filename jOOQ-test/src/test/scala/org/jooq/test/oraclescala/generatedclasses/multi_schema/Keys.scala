/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.multi_schema


import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.AbstractKeys
import org.jooq.test.oraclescala.generatedclasses.multi_schema.tables.TAuthor
import org.jooq.test.oraclescala.generatedclasses.multi_schema.tables.TBook
import org.jooq.test.oraclescala.generatedclasses.multi_schema.tables.TBookSale
import org.jooq.test.oraclescala.generatedclasses.multi_schema.tables.records.TAuthorRecord
import org.jooq.test.oraclescala.generatedclasses.multi_schema.tables.records.TBookRecord
import org.jooq.test.oraclescala.generatedclasses.multi_schema.tables.records.TBookSaleRecord
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.TBookToBookStoreRecord
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.TLanguageRecord


/**
 * A class modelling foreign key relationships between tables of the <code>MULTI_SCHEMA</code> 
 * schema
 */
object Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	val PK_T_AUTHOR = UniqueKeys0.PK_T_AUTHOR
	val PK_T_BOOK = UniqueKeys0.PK_T_BOOK
	val PK_T_BOOK_SALE = UniqueKeys0.PK_T_BOOK_SALE

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	val FK_T_BOOK_AUTHOR_ID = ForeignKeys0.FK_T_BOOK_AUTHOR_ID
	val FK_T_BOOK_CO_AUTHOR_ID = ForeignKeys0.FK_T_BOOK_CO_AUTHOR_ID
	val FK_T_BOOK_LANGUAGE_ID = ForeignKeys0.FK_T_BOOK_LANGUAGE_ID
	val FK_T_BOOK_TO_BOOK_STORE = ForeignKeys0.FK_T_BOOK_TO_BOOK_STORE

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private object UniqueKeys0 extends AbstractKeys {
		val PK_T_AUTHOR : UniqueKey[TAuthorRecord] = AbstractKeys.createUniqueKey(TAuthor.T_AUTHOR, TAuthor.T_AUTHOR.ID)
		val PK_T_BOOK : UniqueKey[TBookRecord] = AbstractKeys.createUniqueKey(TBook.T_BOOK, TBook.T_BOOK.ID)
		val PK_T_BOOK_SALE : UniqueKey[TBookSaleRecord] = AbstractKeys.createUniqueKey(TBookSale.T_BOOK_SALE, TBookSale.T_BOOK_SALE.ID)
	}

	private object ForeignKeys0 extends AbstractKeys {
		val FK_T_BOOK_AUTHOR_ID : ForeignKey[TBookRecord, TAuthorRecord] = AbstractKeys.createForeignKey(org.jooq.test.oraclescala.generatedclasses.multi_schema.Keys.PK_T_AUTHOR, TBook.T_BOOK, TBook.T_BOOK.AUTHOR_ID)
		val FK_T_BOOK_CO_AUTHOR_ID : ForeignKey[TBookRecord, TAuthorRecord] = AbstractKeys.createForeignKey(org.jooq.test.oraclescala.generatedclasses.multi_schema.Keys.PK_T_AUTHOR, TBook.T_BOOK, TBook.T_BOOK.CO_AUTHOR_ID)
		val FK_T_BOOK_LANGUAGE_ID : ForeignKey[TBookRecord, TLanguageRecord] = AbstractKeys.createForeignKey(org.jooq.test.oraclescala.generatedclasses.test.Keys.PK_T_LANGUAGE, TBook.T_BOOK, TBook.T_BOOK.LANGUAGE_ID)
		val FK_T_BOOK_TO_BOOK_STORE : ForeignKey[TBookSaleRecord, TBookToBookStoreRecord] = AbstractKeys.createForeignKey(org.jooq.test.oraclescala.generatedclasses.test.Keys.PK_B2BS, TBookSale.T_BOOK_SALE, TBookSale.T_BOOK_SALE.BOOK_STORE_NAME, TBookSale.T_BOOK_SALE.BOOK_ID)
	}
}
