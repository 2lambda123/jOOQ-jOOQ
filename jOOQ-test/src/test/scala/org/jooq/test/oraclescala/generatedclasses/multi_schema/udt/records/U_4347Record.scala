/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.multi_schema.udt.records


import java.lang.Integer

import org.jooq.Field
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.UDTRecordImpl
import org.jooq.test.oraclescala.generatedclasses.multi_schema.udt.U_4347
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UAddressTableRecord
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UAddressTypeRecord


/**
 * This class is generated by jOOQ.
 */
class U_4347Record extends UDTRecordImpl[U_4347Record](U_4347.U_4347) with Record3[Integer, UAddressTableRecord, UAddressTypeRecord] {

	/**
	 * Setter for <code>MULTI_SCHEMA.U_4347.ID</code>.
	 */
	def setId(value : Integer) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>MULTI_SCHEMA.U_4347.ID</code>.
	 */
	def getId : Integer = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[Integer]
	}

	/**
	 * Setter for <code>MULTI_SCHEMA.U_4347.T</code>.
	 */
	def setT(value : UAddressTableRecord) : Unit = {
		setValue(1, value)
	}

	/**
	 * Getter for <code>MULTI_SCHEMA.U_4347.T</code>.
	 */
	def getT : UAddressTableRecord = {
		val r = getValue(1)
		if (r == null) null else r.asInstanceOf[UAddressTableRecord]
	}

	/**
	 * Setter for <code>MULTI_SCHEMA.U_4347.O</code>.
	 */
	def setO(value : UAddressTypeRecord) : Unit = {
		setValue(2, value)
	}

	/**
	 * Getter for <code>MULTI_SCHEMA.U_4347.O</code>.
	 */
	def getO : UAddressTypeRecord = {
		val r = getValue(2)
		if (r == null) null else r.asInstanceOf[UAddressTypeRecord]
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	override def fieldsRow : Row3[Integer, UAddressTableRecord, UAddressTypeRecord] = {
		super.fieldsRow.asInstanceOf[ Row3[Integer, UAddressTableRecord, UAddressTypeRecord] ]
	}

	override def valuesRow : Row3[Integer, UAddressTableRecord, UAddressTypeRecord] = {
		super.valuesRow.asInstanceOf[ Row3[Integer, UAddressTableRecord, UAddressTypeRecord] ]
	}
	override def field1 : Field[Integer] = U_4347.ID
	override def field2 : Field[UAddressTableRecord] = U_4347.T
	override def field3 : Field[UAddressTypeRecord] = U_4347.O
	override def value1 : Integer = getId
	override def value2 : UAddressTableRecord = getT
	override def value3 : UAddressTypeRecord = getO

	override def value1(value : Integer) : U_4347Record = {
		setId(value)
		this
	}

	override def value2(value : UAddressTableRecord) : U_4347Record = {
		setT(value)
		this
	}

	override def value3(value : UAddressTypeRecord) : U_4347Record = {
		setO(value)
		this
	}

	override def values(value1 : Integer, value2 : UAddressTableRecord, value3 : UAddressTypeRecord) : U_4347Record = {
		this.value1(value1)
		this.value2(value2)
		this.value3(value3)
		this
	}

	/**
	 * Create a detached, initialised U_4347Record
	 */
	def this(id : Integer, t : UAddressTableRecord, o : UAddressTypeRecord) = {
		this()

		setValue(0, id)
		setValue(1, t)
		setValue(2, o)
	}
}
