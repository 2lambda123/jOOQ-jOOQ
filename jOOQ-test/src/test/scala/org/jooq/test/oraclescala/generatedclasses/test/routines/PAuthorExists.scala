/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.routines


import java.lang.String
import java.math.BigDecimal

import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.test.oraclescala.generatedclasses.test.Test


object PAuthorExists {

	/**
	 * The parameter <code>TEST.P_AUTHOR_EXISTS.AUTHOR_NAME</code>.
	 */
	val AUTHOR_NAME : Parameter[String] = AbstractRoutine.createParameter("AUTHOR_NAME", org.jooq.impl.SQLDataType.VARCHAR, false)

	/**
	 * The parameter <code>TEST.P_AUTHOR_EXISTS.RESULT</code>.
	 */
	val RESULT : Parameter[BigDecimal] = AbstractRoutine.createParameter("RESULT", org.jooq.impl.SQLDataType.NUMERIC, false)
}

/**
 * This class is generated by jOOQ.
 */
class PAuthorExists extends AbstractRoutine[java.lang.Void]("P_AUTHOR_EXISTS", Test.TEST) {
	{
		addInParameter(PAuthorExists.AUTHOR_NAME)
		addOutParameter(PAuthorExists.RESULT)
	}

	/**
	 * Set the <code>AUTHOR_NAME</code> parameter IN value to the routine
	 */
	def setAuthorName(value : String) : Unit = {
		setValue(PAuthorExists.AUTHOR_NAME, value)
	}

	/**
	 * Get the <code>RESULT</code> parameter OUT value from the routine
	 */
	def getResult : BigDecimal = {
		getValue(PAuthorExists.RESULT)
	}
}
