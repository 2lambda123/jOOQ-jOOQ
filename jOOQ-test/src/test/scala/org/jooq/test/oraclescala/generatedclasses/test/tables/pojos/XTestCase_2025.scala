/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.pojos


import java.io.Serializable
import java.lang.Integer
import java.lang.String

import javax.persistence.Column
import javax.persistence.Entity
import javax.persistence.Table
import javax.validation.constraints.NotNull
import javax.validation.constraints.Size


/**
 * This class is generated by jOOQ.
 */
@Entity
@Table(name = "X_TEST_CASE_2025", schema = "TEST")
class XTestCase_2025(
	  private var refId : Integer
	, private var refName : String 
) extends Serializable {

	def this() = {
		this(null, null)
	}

	def this (value : XTestCase_2025) = {
		this(
			  value.refId
			, value.refName
		)
	}

	@Column(name = "REF_ID", nullable = false, precision = 7)
	@NotNull
	def getRefId : Integer = {
		this.refId
	}

	def setRefId(refId : Integer) : Unit = {
		this.refId = refId
	}

	@Column(name = "REF_NAME", nullable = false, length = 10)
	@NotNull
	@Size(max = 10)
	def getRefName : String = {
		this.refName
	}

	def setRefName(refName : String) : Unit = {
		this.refName = refName
	}

	override def equals(obj : Any) : scala.Boolean = {
		if (this == obj)
			return true
		if (obj == null)
			return false
		if (getClass() != obj.getClass())
			return false
		val other = obj.asInstanceOf[XTestCase_2025]
		if (refId == null) {
			if (other.refId != null)
				return false
		}
		else if (!refId.equals(other.refId))
			return false
		if (refName == null) {
			if (other.refName != null)
				return false
		}
		else if (!refName.equals(other.refName))
			return false
		return true
	}

	override def hashCode : Int = {
		val prime = 31
		var result = 1
		result = prime * result + (if (refId == null) 0 else refId.hashCode())
		result = prime * result + (if (refName == null) 0 else refName.hashCode())
		return result
	}
}
