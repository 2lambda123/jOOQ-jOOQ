/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.daos


import java.lang.Integer
import java.util.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl
import org.jooq.test.oraclescala.generatedclasses.test.tables.XTestCase_64_69
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.XTestCase_64_69Record


/**
 * This class is generated by jOOQ.
 */
class XTestCase_64_69Dao(configuration : Configuration) extends DAOImpl[XTestCase_64_69Record, org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XTestCase_64_69, Integer](XTestCase_64_69.X_TEST_CASE_64_69, classOf[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XTestCase_64_69], configuration) {

	/**
	 * Create a new XTestCase_64_69Dao without any configuration
	 */
	def this() = {
		this(null)
	}

	override protected def getId(o : org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XTestCase_64_69) : Integer = {
		o.getId
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	def fetchById(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XTestCase_64_69] = {
		fetch(XTestCase_64_69.X_TEST_CASE_64_69.ID, values:_*)
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	def fetchOneById(value : Integer) : org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XTestCase_64_69 = {
		fetchOne(XTestCase_64_69.X_TEST_CASE_64_69.ID, value)
	}

	/**
	 * Fetch records that have <code>UNUSED_ID IN (values)</code>
	 */
	def fetchByUnusedId(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XTestCase_64_69] = {
		fetch(XTestCase_64_69.X_TEST_CASE_64_69.UNUSED_ID, values:_*)
	}
}
