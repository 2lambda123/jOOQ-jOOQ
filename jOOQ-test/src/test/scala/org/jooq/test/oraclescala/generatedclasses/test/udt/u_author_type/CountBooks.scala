/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.udt.u_author_type


import java.math.BigDecimal

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.udt.UAuthorType
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UAuthorTypeRecord


object CountBooks {

	/**
	 * The parameter <code>TEST.U_AUTHOR_TYPE.COUNT_BOOKS.RETURN_VALUE</code>.
	 */
	val RETURN_VALUE : Parameter[BigDecimal] = AbstractRoutine.createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.NUMERIC, false)

	/**
	 * The parameter <code>TEST.U_AUTHOR_TYPE.COUNT_BOOKS.SELF</code>.
	 */
	val SELF : Parameter[UAuthorTypeRecord] = AbstractRoutine.createParameter("SELF", org.jooq.test.oraclescala.generatedclasses.test.udt.UAuthorType.U_AUTHOR_TYPE.getDataType(), false)
}

/**
 * This class is generated by jOOQ.
 */
class CountBooks extends AbstractRoutine[BigDecimal]("COUNT_BOOKS", Test.TEST, UAuthorType.U_AUTHOR_TYPE, org.jooq.impl.SQLDataType.NUMERIC) {
	{
		setReturnParameter(CountBooks.RETURN_VALUE)
		addInParameter(CountBooks.SELF)
	}

	/**
	 * Set the <code>SELF</code> parameter IN value to the routine
	 */
	def setSelf(value : UAuthorTypeRecord) : Unit = {
		setValue(CountBooks.SELF, value)
	}

	/**
	 * Set the <code>SELF</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	def setSelf(field : Field[UAuthorTypeRecord]) : Unit = {
		setField(CountBooks.SELF, field)
	}
}
