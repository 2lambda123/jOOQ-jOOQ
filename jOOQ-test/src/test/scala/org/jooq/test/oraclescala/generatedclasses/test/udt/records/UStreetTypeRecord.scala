/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.udt.records


import java.lang.String

import javax.validation.constraints.Size

import org.jooq.Field
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UDTRecordImpl
import org.jooq.test.oraclescala.generatedclasses.test.udt.UStreetType
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UNumberArrayRecord

import scala.Array


/**
 * This class is generated by jOOQ.
 */
class UStreetTypeRecord extends UDTRecordImpl[UStreetTypeRecord](UStreetType.U_STREET_TYPE) with Record5[String, String, UNumberArrayRecord, Array[scala.Byte], String] {

	/**
	 * Setter for <code>TEST.U_STREET_TYPE.STREET</code>.
	 */
	def setStreet(value : String) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>TEST.U_STREET_TYPE.STREET</code>.
	 */
	@Size(max = 100)
	def getStreet : String = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>TEST.U_STREET_TYPE.NO</code>.
	 */
	def setNo(value : String) : Unit = {
		setValue(1, value)
	}

	/**
	 * Getter for <code>TEST.U_STREET_TYPE.NO</code>.
	 */
	@Size(max = 30)
	def getNo : String = {
		val r = getValue(1)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>TEST.U_STREET_TYPE.FLOORS</code>.
	 */
	def setFloors(value : UNumberArrayRecord) : Unit = {
		setValue(2, value)
	}

	/**
	 * Getter for <code>TEST.U_STREET_TYPE.FLOORS</code>.
	 */
	def getFloors : UNumberArrayRecord = {
		val r = getValue(2)
		if (r == null) null else r.asInstanceOf[UNumberArrayRecord]
	}

	/**
	 * Setter for <code>TEST.U_STREET_TYPE.F_1323</code>.
	 */
	def setF_1323(value : Array[scala.Byte]) : Unit = {
		setValue(3, value)
	}

	/**
	 * Getter for <code>TEST.U_STREET_TYPE.F_1323</code>.
	 */
	def getF_1323 : Array[scala.Byte] = {
		val r = getValue(3)
		if (r == null) null else r.asInstanceOf[Array[scala.Byte]]
	}

	/**
	 * Setter for <code>TEST.U_STREET_TYPE.F_1326</code>.
	 */
	def setF_1326(value : String) : Unit = {
		setValue(4, value)
	}

	/**
	 * Getter for <code>TEST.U_STREET_TYPE.F_1326</code>.
	 */
	def getF_1326 : String = {
		val r = getValue(4)
		if (r == null) null else r.asInstanceOf[String]
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	override def fieldsRow : Row5[String, String, UNumberArrayRecord, Array[scala.Byte], String] = {
		super.fieldsRow.asInstanceOf[ Row5[String, String, UNumberArrayRecord, Array[scala.Byte], String] ]
	}

	override def valuesRow : Row5[String, String, UNumberArrayRecord, Array[scala.Byte], String] = {
		super.valuesRow.asInstanceOf[ Row5[String, String, UNumberArrayRecord, Array[scala.Byte], String] ]
	}
	override def field1 : Field[String] = UStreetType.STREET
	override def field2 : Field[String] = UStreetType.NO
	override def field3 : Field[UNumberArrayRecord] = UStreetType.FLOORS
	override def field4 : Field[Array[scala.Byte]] = UStreetType.F_1323
	override def field5 : Field[String] = UStreetType.F_1326
	override def value1 : String = getStreet
	override def value2 : String = getNo
	override def value3 : UNumberArrayRecord = getFloors
	override def value4 : Array[scala.Byte] = getF_1323
	override def value5 : String = getF_1326

	override def value1(value : String) : UStreetTypeRecord = {
		setStreet(value)
		this
	}

	override def value2(value : String) : UStreetTypeRecord = {
		setNo(value)
		this
	}

	override def value3(value : UNumberArrayRecord) : UStreetTypeRecord = {
		setFloors(value)
		this
	}

	override def value4(value : Array[scala.Byte]) : UStreetTypeRecord = {
		setF_1323(value)
		this
	}

	override def value5(value : String) : UStreetTypeRecord = {
		setF_1326(value)
		this
	}

	override def values(value1 : String, value2 : String, value3 : UNumberArrayRecord, value4 : Array[scala.Byte], value5 : String) : UStreetTypeRecord = {
		this.value1(value1)
		this.value2(value2)
		this.value3(value3)
		this.value4(value4)
		this.value5(value5)
		this
	}

	/**
	 * Create a detached, initialised UStreetTypeRecord
	 */
	def this(street : String, no : String, floors : UNumberArrayRecord, f_1323 : Array[scala.Byte], f_1326 : String) = {
		this()

		setValue(0, street)
		setValue(1, no)
		setValue(2, floors)
		setValue(3, f_1323)
		setValue(4, f_1326)
	}
}
