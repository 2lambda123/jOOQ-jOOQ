/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.udt.records


import java.lang.String

import javax.validation.constraints.Size

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Row1
import org.jooq.impl.UDTRecordImpl
import org.jooq.test.oraclescala.generatedclasses.test.udt.U_3709
import org.jooq.test.oraclescala.generatedclasses.test.udt.u_3709.Value1
import org.jooq.test.oraclescala.generatedclasses.test.udt.u_3709.Value2


/**
 * This class is generated by jOOQ.
 */
class U_3709Record extends UDTRecordImpl[U_3709Record](U_3709.U_3709) with Record1[String] {

	/**
	 * Setter for <code>TEST.U_3709.V</code>.
	 */
	def setV(value : String) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>TEST.U_3709.V</code>.
	 */
	@Size(max = 4000)
	def getV : String = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Call <code>TEST.U_3709.VALUE</code>
	 */
	def value1() : String = {
		val f = new Value1()
		f.setSelf(this)

		f.execute(configuration())
		f.getReturnValue
	}

	/**
	 * Call <code>TEST.U_3709.VALUE</code>
	 */
	def value2(value : String) : String = {
		val f = new Value2()
		f.setSelf(this)
		f.setValue(value)

		f.execute(configuration())
		f.getReturnValue
	}

	// -------------------------------------------------------------------------
	// Record1 type implementation
	// -------------------------------------------------------------------------

	override def fieldsRow : Row1[String] = {
		super.fieldsRow.asInstanceOf[ Row1[String] ]
	}

	override def valuesRow : Row1[String] = {
		super.valuesRow.asInstanceOf[ Row1[String] ]
	}
	override def field1 : Field[String] = U_3709.V
	override def value1 : String = getV

	override def value1(value : String) : U_3709Record = {
		setV(value)
		this
	}

	override def values(value1 : String) : U_3709Record = {
		this
	}

	/**
	 * Create a detached, initialised U_3709Record
	 */
	def this(v : String) = {
		this()

		setValue(0, v)
	}
}
