/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables


import java.lang.Class
import java.lang.Integer
import java.lang.String
import java.util.Arrays
import java.util.List

import org.jooq.Field
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl
import org.jooq.test.oraclescala.generatedclasses.test.Keys
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.tables.TLanguage
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.TLanguageRecord


object TLanguage {

	/**
	 * The reference instance of <code>TEST.T_LANGUAGE</code>
	 */
	val T_LANGUAGE = new TLanguage
}

/**
 * An entity holding language master data
 * 
 * Oh oh. Newline character.
 * 
 * "Quotes". And \Escaping\That\Shouldn't\Be\Escaping
 * 
 * Oh, and beware of end-of-javadoc * /
 */
class TLanguage(alias : String, aliased : Table[TLanguageRecord], parameters : Array[ Field[_] ]) extends TableImpl[TLanguageRecord](alias, Test.TEST, aliased, parameters, "An entity holding language master data\n\nOh oh. Newline character.\n\n\"Quotes\". And \\Escaping\\That\\Shouldn't\\Be\\Escaping\n\nOh, and beware of end-of-javadoc */") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[TLanguageRecord] = {
		classOf[TLanguageRecord]
	}

	/**
	 * The column <code>TEST.T_LANGUAGE.CD</code>. The language ISO code
	 */
	val CD : TableField[TLanguageRecord, String] = createField("CD", org.jooq.impl.SQLDataType.CHAR.length(2).nullable(false), "The language ISO code")

	/**
	 * The column <code>TEST.T_LANGUAGE.DESCRIPTION</code>. The language description
	 */
	val DESCRIPTION : TableField[TLanguageRecord, String] = createField("DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR.length(50), "The language description")

	/**
	 * The column <code>TEST.T_LANGUAGE.DESCRIPTION_ENGLISH</code>.
	 */
	val DESCRIPTION_ENGLISH : TableField[TLanguageRecord, String] = createField("DESCRIPTION_ENGLISH", org.jooq.impl.SQLDataType.VARCHAR.length(50), "")

	/**
	 * The column <code>TEST.T_LANGUAGE.ID</code>. The language ID
	 */
	val ID : TableField[TLanguageRecord, Integer] = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), "The language ID")

	/**
	 * Create a <code>TEST.T_LANGUAGE</code> table reference
	 */
	def this() = {
		this("T_LANGUAGE", null, null)
	}

	/**
	 * Create an aliased <code>TEST.T_LANGUAGE</code> table reference
	 */
	def this(alias : String) = {
		this(alias, TLanguage.T_LANGUAGE, null)
	}

	private def this(alias : String, aliased : Table[TLanguageRecord]) = {
		this(alias, aliased, null)
	}

	override def getPrimaryKey : UniqueKey[TLanguageRecord] = {
		Keys.PK_T_LANGUAGE
	}

	override def getKeys : List[ UniqueKey[TLanguageRecord] ] = {
		return Arrays.asList[ UniqueKey[TLanguageRecord] ](Keys.PK_T_LANGUAGE)
	}

	override def as(alias : String) : TLanguage = {
		new TLanguage(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : TLanguage = {
		new TLanguage(name, null)
	}
}
