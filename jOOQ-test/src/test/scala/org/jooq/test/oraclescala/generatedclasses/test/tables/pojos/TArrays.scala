/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.pojos


import java.io.Serializable
import java.lang.Integer
import java.lang.Long
import java.lang.String
import java.lang.StringBuilder
import java.sql.Date
import java.util.List

import javax.persistence.Column
import javax.persistence.Entity
import javax.persistence.Id
import javax.persistence.Table
import javax.validation.constraints.NotNull


/**
 * This class is generated by jOOQ.
 */
@Entity
@Table(name = "T_ARRAYS", schema = "TEST")
class TArrays(
	  private var id : Integer      
	, private var stringArray : List[String] 
	, private var numberArray : List[Integer]
	, private var numberLongArray : List[Long]   
	, private var dateArray : List[Date]   
) extends Serializable {

	def this() = {
		this(null, null, null, null, null)
	}

	def this (value : TArrays) = {
		this(
			  value.id
			, value.stringArray
			, value.numberArray
			, value.numberLongArray
			, value.dateArray
		)
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	@NotNull
	def getId : Integer = {
		this.id
	}

	def setId(id : Integer) : Unit = {
		this.id = id
	}

	@Column(name = "STRING_ARRAY")
	def getStringArray : List[String] = {
		this.stringArray
	}

	def setStringArray(stringArray : List[String]) : Unit = {
		this.stringArray = stringArray
	}

	@Column(name = "NUMBER_ARRAY")
	def getNumberArray : List[Integer] = {
		this.numberArray
	}

	def setNumberArray(numberArray : List[Integer]) : Unit = {
		this.numberArray = numberArray
	}

	@Column(name = "NUMBER_LONG_ARRAY")
	def getNumberLongArray : List[Long] = {
		this.numberLongArray
	}

	def setNumberLongArray(numberLongArray : List[Long]) : Unit = {
		this.numberLongArray = numberLongArray
	}

	@Column(name = "DATE_ARRAY")
	def getDateArray : List[Date] = {
		this.dateArray
	}

	def setDateArray(dateArray : List[Date]) : Unit = {
		this.dateArray = dateArray
	}

	override def equals(obj : Any) : scala.Boolean = {
		if (this == obj)
			return true
		if (obj == null)
			return false
		if (getClass() != obj.getClass())
			return false
		val other = obj.asInstanceOf[TArrays]
		if (id == null) {
			if (other.id != null)
				return false
		}
		else if (!id.equals(other.id))
			return false
		if (stringArray == null) {
			if (other.stringArray != null)
				return false
		}
		else if (!stringArray.equals(other.stringArray))
			return false
		if (numberArray == null) {
			if (other.numberArray != null)
				return false
		}
		else if (!numberArray.equals(other.numberArray))
			return false
		if (numberLongArray == null) {
			if (other.numberLongArray != null)
				return false
		}
		else if (!numberLongArray.equals(other.numberLongArray))
			return false
		if (dateArray == null) {
			if (other.dateArray != null)
				return false
		}
		else if (!dateArray.equals(other.dateArray))
			return false
		return true
	}

	override def hashCode : Int = {
		val prime = 31
		var result = 1
		result = prime * result + (if (id == null) 0 else id.hashCode())
		result = prime * result + (if (stringArray == null) 0 else stringArray.hashCode())
		result = prime * result + (if (numberArray == null) 0 else numberArray.hashCode())
		result = prime * result + (if (numberLongArray == null) 0 else numberLongArray.hashCode())
		result = prime * result + (if (dateArray == null) 0 else dateArray.hashCode())
		return result
	}

	override def toString : String = {
		val sb = new StringBuilder("TArrays (")

		sb.append(id)
		sb.append(", ").append(stringArray)
		sb.append(", ").append(numberArray)
		sb.append(", ").append(numberLongArray)
		sb.append(", ").append(dateArray)

		sb.append(")");
		return sb.toString
	}
}
