/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables


import java.lang.Boolean
import java.lang.Class
import java.lang.Integer
import java.lang.String
import java.util.Arrays
import java.util.List

import org.jooq.Field
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl
import org.jooq.test.all.converters.Boolean_10
import org.jooq.test.all.converters.Boolean_10_Converter
import org.jooq.test.all.converters.Boolean_TF_LC
import org.jooq.test.all.converters.Boolean_TF_LC_Converter
import org.jooq.test.all.converters.Boolean_TF_UC
import org.jooq.test.all.converters.Boolean_TF_UC_Converter
import org.jooq.test.all.converters.Boolean_YES_NO_LC
import org.jooq.test.all.converters.Boolean_YES_NO_LC_Converter
import org.jooq.test.all.converters.Boolean_YES_NO_UC
import org.jooq.test.all.converters.Boolean_YES_NO_UC_Converter
import org.jooq.test.all.converters.Boolean_YN_LC
import org.jooq.test.all.converters.Boolean_YN_LC_Converter
import org.jooq.test.all.converters.Boolean_YN_UC
import org.jooq.test.all.converters.Boolean_YN_UC_Converter
import org.jooq.test.oraclescala.generatedclasses.test.Keys
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.tables.TBooleans
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.TBooleansRecord


object TBooleans {

	/**
	 * The reference instance of <code>TEST.T_BOOLEANS</code>
	 */
	val T_BOOLEANS = new TBooleans
}

/**
 * This class is generated by jOOQ.
 */
class TBooleans(alias : String, aliased : Table[TBooleansRecord], parameters : Array[ Field[_] ]) extends TableImpl[TBooleansRecord](alias, Test.TEST, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[TBooleansRecord] = {
		classOf[TBooleansRecord]
	}

	/**
	 * The column <code>TEST.T_BOOLEANS.ID</code>.
	 */
	val ID : TableField[TBooleansRecord, Integer] = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), "")

	/**
	 * The column <code>TEST.T_BOOLEANS.ONE_ZERO</code>.
	 */
	val ONE_ZERO : TableField[TBooleansRecord, Boolean_10] = createField("ONE_ZERO", org.jooq.impl.SQLDataType.INTEGER, "", new Boolean_10_Converter())

	/**
	 * The column <code>TEST.T_BOOLEANS.TRUE_FALSE_LC</code>.
	 */
	val TRUE_FALSE_LC : TableField[TBooleansRecord, Boolean_TF_LC] = createField("TRUE_FALSE_LC", org.jooq.impl.SQLDataType.VARCHAR.length(5), "", new Boolean_TF_LC_Converter())

	/**
	 * The column <code>TEST.T_BOOLEANS.TRUE_FALSE_UC</code>.
	 */
	val TRUE_FALSE_UC : TableField[TBooleansRecord, Boolean_TF_UC] = createField("TRUE_FALSE_UC", org.jooq.impl.SQLDataType.VARCHAR.length(5), "", new Boolean_TF_UC_Converter())

	/**
	 * The column <code>TEST.T_BOOLEANS.YES_NO_LC</code>.
	 */
	val YES_NO_LC : TableField[TBooleansRecord, Boolean_YES_NO_LC] = createField("YES_NO_LC", org.jooq.impl.SQLDataType.VARCHAR.length(3), "", new Boolean_YES_NO_LC_Converter())

	/**
	 * The column <code>TEST.T_BOOLEANS.YES_NO_UC</code>.
	 */
	val YES_NO_UC : TableField[TBooleansRecord, Boolean_YES_NO_UC] = createField("YES_NO_UC", org.jooq.impl.SQLDataType.VARCHAR.length(3), "", new Boolean_YES_NO_UC_Converter())

	/**
	 * The column <code>TEST.T_BOOLEANS.Y_N_LC</code>.
	 */
	val Y_N_LC : TableField[TBooleansRecord, Boolean_YN_LC] = createField("Y_N_LC", org.jooq.impl.SQLDataType.CHAR.length(1), "", new Boolean_YN_LC_Converter())

	/**
	 * The column <code>TEST.T_BOOLEANS.Y_N_UC</code>.
	 */
	val Y_N_UC : TableField[TBooleansRecord, Boolean_YN_UC] = createField("Y_N_UC", org.jooq.impl.SQLDataType.CHAR.length(1), "", new Boolean_YN_UC_Converter())

	/**
	 * The column <code>TEST.T_BOOLEANS.VC_BOOLEAN</code>.
	 */
	val VC_BOOLEAN : TableField[TBooleansRecord, Boolean] = createField("VC_BOOLEAN", org.jooq.impl.SQLDataType.BOOLEAN, "")

	/**
	 * The column <code>TEST.T_BOOLEANS.C_BOOLEAN</code>.
	 */
	val C_BOOLEAN : TableField[TBooleansRecord, Boolean] = createField("C_BOOLEAN", org.jooq.impl.SQLDataType.BOOLEAN, "")

	/**
	 * The column <code>TEST.T_BOOLEANS.N_BOOLEAN</code>.
	 */
	val N_BOOLEAN : TableField[TBooleansRecord, Boolean] = createField("N_BOOLEAN", org.jooq.impl.SQLDataType.BOOLEAN, "")

	/**
	 * Create a <code>TEST.T_BOOLEANS</code> table reference
	 */
	def this() = {
		this("T_BOOLEANS", null, null)
	}

	/**
	 * Create an aliased <code>TEST.T_BOOLEANS</code> table reference
	 */
	def this(alias : String) = {
		this(alias, TBooleans.T_BOOLEANS, null)
	}

	private def this(alias : String, aliased : Table[TBooleansRecord]) = {
		this(alias, aliased, null)
	}

	override def getPrimaryKey : UniqueKey[TBooleansRecord] = {
		Keys.PK_T_BOOLEANS
	}

	override def getKeys : List[ UniqueKey[TBooleansRecord] ] = {
		return Arrays.asList[ UniqueKey[TBooleansRecord] ](Keys.PK_T_BOOLEANS)
	}

	override def as(alias : String) : TBooleans = {
		new TBooleans(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : TBooleans = {
		new TBooleans(name, null)
	}
}
