/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.udt


import java.lang.Class
import java.lang.Integer
import java.lang.String
import java.sql.Date

import org.jooq.UDTField
import org.jooq.impl.UDTImpl
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UAddressTypeRecord
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UStreetTypeRecord

import scala.Array
import scala.Byte


object UAddressType {

	/**
	 * The reference instance of <code>TEST.U_ADDRESS_TYPE</code>
	 */
	val U_ADDRESS_TYPE = new UAddressType

	/**
	 * The attribute <code>TEST.U_ADDRESS_TYPE.STREET</code>.
	 */
	val STREET = U_ADDRESS_TYPE.STREET

	/**
	 * The attribute <code>TEST.U_ADDRESS_TYPE.ZIP</code>.
	 */
	val ZIP = U_ADDRESS_TYPE.ZIP

	/**
	 * The attribute <code>TEST.U_ADDRESS_TYPE.CITY</code>.
	 */
	val CITY = U_ADDRESS_TYPE.CITY

	/**
	 * The attribute <code>TEST.U_ADDRESS_TYPE.COUNTRY</code>.
	 */
	val COUNTRY = U_ADDRESS_TYPE.COUNTRY

	/**
	 * The attribute <code>TEST.U_ADDRESS_TYPE.SINCE</code>.
	 */
	val SINCE = U_ADDRESS_TYPE.SINCE

	/**
	 * The attribute <code>TEST.U_ADDRESS_TYPE.CODE</code>.
	 */
	val CODE = U_ADDRESS_TYPE.CODE

	/**
	 * The attribute <code>TEST.U_ADDRESS_TYPE.F_1323</code>.
	 */
	val F_1323 = U_ADDRESS_TYPE.F_1323

	/**
	 * The attribute <code>TEST.U_ADDRESS_TYPE.F_1326</code>.
	 */
	val F_1326 = U_ADDRESS_TYPE.F_1326
}

/**
 * This class is generated by jOOQ.
 */
class UAddressType extends UDTImpl[UAddressTypeRecord]("U_ADDRESS_TYPE", Test.TEST) {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[UAddressTypeRecord] = {
		classOf[UAddressTypeRecord]
	}
	private val STREET : UDTField[UAddressTypeRecord, UStreetTypeRecord] = UDTImpl.createField("STREET", org.jooq.test.oraclescala.generatedclasses.test.udt.UStreetType.U_STREET_TYPE.getDataType(), this, "")
	private val ZIP : UDTField[UAddressTypeRecord, String] = UDTImpl.createField("ZIP", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "")
	private val CITY : UDTField[UAddressTypeRecord, String] = UDTImpl.createField("CITY", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "")
	private val COUNTRY : UDTField[UAddressTypeRecord, String] = UDTImpl.createField("COUNTRY", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "")
	private val SINCE : UDTField[UAddressTypeRecord, Date] = UDTImpl.createField("SINCE", org.jooq.impl.SQLDataType.DATE, this, "")
	private val CODE : UDTField[UAddressTypeRecord, Integer] = UDTImpl.createField("CODE", org.jooq.impl.SQLDataType.INTEGER, this, "")
	private val F_1323 : UDTField[UAddressTypeRecord, Array[Byte]] = UDTImpl.createField("F_1323", org.jooq.impl.SQLDataType.BLOB, this, "")
	private val F_1326 : UDTField[UAddressTypeRecord, String] = UDTImpl.createField("F_1326", org.jooq.impl.SQLDataType.CLOB, this, "")

	{
		// Initialise data type
		getDataType
	}
}
