/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.udt.records


import java.time.LocalDate

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Row2
import org.jooq.impl.UDTRecordImpl
import org.jooq.test.oraclescala.generatedclasses.test.udt.U_2155Object
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.U_2155ArrayRecord


/**
 * This class is generated by jOOQ.
 */
class U_2155ObjectRecord extends UDTRecordImpl[U_2155ObjectRecord](U_2155Object.U_2155_OBJECT) with Record2[LocalDate, U_2155ArrayRecord] {

	/**
	 * Setter for <code>TEST.U_2155_OBJECT.D</code>.
	 */
	def setD(value : LocalDate) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>TEST.U_2155_OBJECT.D</code>.
	 */
	def getD : LocalDate = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[LocalDate]
	}

	/**
	 * Setter for <code>TEST.U_2155_OBJECT.A</code>.
	 */
	def setA(value : U_2155ArrayRecord) : Unit = {
		setValue(1, value)
	}

	/**
	 * Getter for <code>TEST.U_2155_OBJECT.A</code>.
	 */
	def getA : U_2155ArrayRecord = {
		val r = getValue(1)
		if (r == null) null else r.asInstanceOf[U_2155ArrayRecord]
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	override def fieldsRow : Row2[LocalDate, U_2155ArrayRecord] = {
		super.fieldsRow.asInstanceOf[ Row2[LocalDate, U_2155ArrayRecord] ]
	}

	override def valuesRow : Row2[LocalDate, U_2155ArrayRecord] = {
		super.valuesRow.asInstanceOf[ Row2[LocalDate, U_2155ArrayRecord] ]
	}
	override def field1 : Field[LocalDate] = U_2155Object.D
	override def field2 : Field[U_2155ArrayRecord] = U_2155Object.A
	override def value1 : LocalDate = getD
	override def value2 : U_2155ArrayRecord = getA

	override def value1(value : LocalDate) : U_2155ObjectRecord = {
		setD(value)
		this
	}

	override def value2(value : U_2155ArrayRecord) : U_2155ObjectRecord = {
		setA(value)
		this
	}

	override def values(value1 : LocalDate, value2 : U_2155ArrayRecord) : U_2155ObjectRecord = {
		this
	}

	/**
	 * Create a detached, initialised U_2155ObjectRecord
	 */
	def this(d : LocalDate, a : U_2155ArrayRecord) = {
		this()

		setValue(0, d)
		setValue(1, a)
	}
}
