/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.udt.u_author_type


import java.lang.Number
import java.lang.String
import java.math.BigDecimal

import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.udt.UAuthorType
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UAuthorTypeRecord


object NewAuthor {

	/**
	 * The parameter <code>TEST.U_AUTHOR_TYPE.NEW_AUTHOR.P_ID</code>.
	 */
	val P_ID : Parameter[BigDecimal] = AbstractRoutine.createParameter("P_ID", org.jooq.impl.SQLDataType.NUMERIC, false)

	/**
	 * The parameter <code>TEST.U_AUTHOR_TYPE.NEW_AUTHOR.P_FIRST_NAME</code>.
	 */
	val P_FIRST_NAME : Parameter[String] = AbstractRoutine.createParameter("P_FIRST_NAME", org.jooq.impl.SQLDataType.VARCHAR, false)

	/**
	 * The parameter <code>TEST.U_AUTHOR_TYPE.NEW_AUTHOR.P_LAST_NAME</code>.
	 */
	val P_LAST_NAME : Parameter[String] = AbstractRoutine.createParameter("P_LAST_NAME", org.jooq.impl.SQLDataType.VARCHAR, false)

	/**
	 * The parameter <code>TEST.U_AUTHOR_TYPE.NEW_AUTHOR.P_AUTHOR</code>.
	 */
	val P_AUTHOR : Parameter[UAuthorTypeRecord] = AbstractRoutine.createParameter("P_AUTHOR", org.jooq.test.oraclescala.generatedclasses.test.udt.UAuthorType.U_AUTHOR_TYPE.getDataType(), false)
}

/**
 * This class is generated by jOOQ.
 */
class NewAuthor extends AbstractRoutine[java.lang.Void]("NEW_AUTHOR", Test.TEST, UAuthorType.U_AUTHOR_TYPE) {
	{
		addInParameter(NewAuthor.P_ID)
		addInParameter(NewAuthor.P_FIRST_NAME)
		addInParameter(NewAuthor.P_LAST_NAME)
		addOutParameter(NewAuthor.P_AUTHOR)
	}

	/**
	 * Set the <code>P_ID</code> parameter IN value to the routine
	 */
	def setPId(value : Number) : Unit = {
		setNumber(NewAuthor.P_ID, value)
	}

	/**
	 * Set the <code>P_FIRST_NAME</code> parameter IN value to the routine
	 */
	def setPFirstName(value : String) : Unit = {
		setValue(NewAuthor.P_FIRST_NAME, value)
	}

	/**
	 * Set the <code>P_LAST_NAME</code> parameter IN value to the routine
	 */
	def setPLastName(value : String) : Unit = {
		setValue(NewAuthor.P_LAST_NAME, value)
	}

	/**
	 * Get the <code>P_AUTHOR</code> parameter OUT value from the routine
	 */
	def getPAuthor : UAuthorTypeRecord = {
		getValue(NewAuthor.P_AUTHOR)
	}
}
