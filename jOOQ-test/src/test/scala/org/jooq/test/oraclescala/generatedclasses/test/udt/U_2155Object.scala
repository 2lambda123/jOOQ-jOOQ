/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.udt


import java.lang.Class
import java.time.LocalDateTime

import org.jooq.UDTField
import org.jooq.impl.UDTImpl
import org.jooq.test.all.converters.LocalDateTimeConverter
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.U_2155ArrayRecord
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.U_2155ObjectRecord


object U_2155Object {

	/**
	 * The reference instance of <code>TEST.U_2155_OBJECT</code>
	 */
	val U_2155_OBJECT = new U_2155Object

	/**
	 * The attribute <code>TEST.U_2155_OBJECT.D</code>.
	 */
	val D = U_2155_OBJECT.D

	/**
	 * The attribute <code>TEST.U_2155_OBJECT.A</code>.
	 */
	val A = U_2155_OBJECT.A
}

/**
 * This class is generated by jOOQ.
 */
class U_2155Object extends UDTImpl[U_2155ObjectRecord]("U_2155_OBJECT", Test.TEST) {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[U_2155ObjectRecord] = {
		classOf[U_2155ObjectRecord]
	}
	private val D : UDTField[U_2155ObjectRecord, LocalDateTime] = UDTImpl.createField("D", org.jooq.impl.SQLDataType.DATE, this, "", new LocalDateTimeConverter)
	private val A : UDTField[U_2155ObjectRecord, U_2155ArrayRecord] = UDTImpl.createField("A", org.jooq.impl.SQLDataType.DATE.asArrayDataType(classOf[org.jooq.test.oraclescala.generatedclasses.test.udt.records.U_2155ArrayRecord]), this, "")

	{
		// Initialise data type
		getDataType
	}
}
