/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.packages


import java.lang.Number
import java.lang.String
import java.math.BigDecimal

import org.jooq.Configuration
import org.jooq.Field
import org.jooq.impl.PackageImpl
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.packages.library.PkgF378
import org.jooq.test.oraclescala.generatedclasses.test.packages.library.PkgFAuthorExists1
import org.jooq.test.oraclescala.generatedclasses.test.packages.library.PkgFAuthorExists2
import org.jooq.test.oraclescala.generatedclasses.test.packages.library.PkgFUnused
import org.jooq.test.oraclescala.generatedclasses.test.packages.library.PkgPAuthorExists1
import org.jooq.test.oraclescala.generatedclasses.test.packages.library.PkgPAuthorExists2


/**
 * Convenience access to all stored procedures and functions in LIBRARY
 */
object Library extends PackageImpl("LIBRARY", Test.TEST) {

	/**
	 * The reference instance of <code>TEST.LIBRARY</code>
	 */
	val LIBRARY = Library

	/**
	 * Call <code>TEST.LIBRARY.PKG_F_AUTHOR_EXISTS</code>
	 */
	def pkgFAuthorExists1(configuration : Configuration, authorName : String) : BigDecimal = {
		val f = new PkgFAuthorExists1()
		f.setAuthorName(authorName)

		f.execute(configuration)
		f.getReturnValue
	}

	/**
	 * Get <code>TEST.LIBRARY.PKG_F_AUTHOR_EXISTS</code> as a field
	 */
	def pkgFAuthorExists1(authorName : String) : Field[BigDecimal] = {
		val f = new PkgFAuthorExists1
		f.setAuthorName(authorName)

		return f.asField
	}

	/**
	 * Get <code>TEST.LIBRARY.PKG_F_AUTHOR_EXISTS</code> as a field
	 */
	def pkgFAuthorExists1(authorName : Field[String]) : Field[BigDecimal] = {
		val f = new PkgFAuthorExists1
		f.setAuthorName(authorName)

		return f.asField
	}

	/**
	 * Call <code>TEST.LIBRARY.PKG_F_AUTHOR_EXISTS</code>
	 */
	def pkgFAuthorExists2(configuration : Configuration, authorName : String, unused : Number) : BigDecimal = {
		val f = new PkgFAuthorExists2()
		f.setAuthorName(authorName)
		f.setUnused(unused)

		f.execute(configuration)
		f.getReturnValue
	}

	/**
	 * Get <code>TEST.LIBRARY.PKG_F_AUTHOR_EXISTS</code> as a field
	 */
	def pkgFAuthorExists2(authorName : String, unused : Number) : Field[BigDecimal] = {
		val f = new PkgFAuthorExists2
		f.setAuthorName(authorName)
		f.setUnused(unused)

		return f.asField
	}

	/**
	 * Get <code>TEST.LIBRARY.PKG_F_AUTHOR_EXISTS</code> as a field
	 */
	def pkgFAuthorExists2(authorName : Field[String], unused : Field[_ <: Number]) : Field[BigDecimal] = {
		val f = new PkgFAuthorExists2
		f.setAuthorName(authorName)
		f.setUnused(unused)

		return f.asField
	}

	/**
	 * Call <code>TEST.LIBRARY.PKG_F_UNUSED</code>
	 */
	def pkgFUnused(configuration : Configuration) : BigDecimal = {
		val f = new PkgFUnused()

		f.execute(configuration)
		f.getReturnValue
	}

	/**
	 * Get <code>TEST.LIBRARY.PKG_F_UNUSED</code> as a field
	 */
	def pkgFUnused() : Field[BigDecimal] = {
		val f = new PkgFUnused

		return f.asField
	}

	/**
	 * Call <code>TEST.LIBRARY.PKG_F378</code>
	 */
	def pkgF378(configuration : Configuration, i : Number, io : Number) : PkgF378 = {
		val p = new PkgF378
		p.setI(i)
		p.setIo(io)

		p.execute(configuration)
		return p
	}

	/**
	 * Call <code>TEST.LIBRARY.PKG_P_AUTHOR_EXISTS</code>
	 */
	def pkgPAuthorExists1(configuration : Configuration, authorName : String) : BigDecimal = {
		val p = new PkgPAuthorExists1
		p.setAuthorName(authorName)

		p.execute(configuration)
		return p.getResult
	}

	/**
	 * Call <code>TEST.LIBRARY.PKG_P_AUTHOR_EXISTS</code>
	 */
	def pkgPAuthorExists2(configuration : Configuration, authorName : String, unused : Number) : PkgPAuthorExists2 = {
		val p = new PkgPAuthorExists2
		p.setAuthorName(authorName)
		p.setUnused(unused)

		p.execute(configuration)
		return p
	}
}
