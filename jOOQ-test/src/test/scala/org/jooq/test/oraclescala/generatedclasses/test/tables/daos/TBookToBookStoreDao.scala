/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.daos


import java.lang.Integer
import java.lang.String
import java.util.List

import org.jooq.Configuration
import org.jooq.Record2
import org.jooq.impl.DAOImpl
import org.jooq.test.all.scala.Test
import org.jooq.test.oraclescala.generatedclasses.test.tables.TBookToBookStore
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.TBookToBookStoreRecord


/**
 * An m:n relation between books and book stores
 */
class TBookToBookStoreDao(configuration : Configuration) extends DAOImpl[TBookToBookStoreRecord, org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBookToBookStore, Record2[String, Integer]](TBookToBookStore.T_BOOK_TO_BOOK_STORE, classOf[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBookToBookStore], configuration) with Test {

	/**
	 * Create a new TBookToBookStoreDao without any configuration
	 */
	def this() = {
		this(null)
	}

	override protected def getId(o : org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBookToBookStore) : Record2[String, Integer] = {
		compositeKeyRecord(o.getBookStoreName, o.getBookId)
	}

	/**
	 * Fetch records that have <code>BOOK_STORE_NAME IN (values)</code>
	 */
	def fetchByBookStoreName(values : String*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBookToBookStore] = {
		fetch(TBookToBookStore.T_BOOK_TO_BOOK_STORE.BOOK_STORE_NAME, values:_*)
	}

	/**
	 * Fetch records that have <code>BOOK_ID IN (values)</code>
	 */
	def fetchByBookId(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBookToBookStore] = {
		fetch(TBookToBookStore.T_BOOK_TO_BOOK_STORE.BOOK_ID, values:_*)
	}

	/**
	 * Fetch records that have <code>STOCK IN (values)</code>
	 */
	def fetchByStock(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TBookToBookStore] = {
		fetch(TBookToBookStore.T_BOOK_TO_BOOK_STORE.STOCK, values:_*)
	}
}
