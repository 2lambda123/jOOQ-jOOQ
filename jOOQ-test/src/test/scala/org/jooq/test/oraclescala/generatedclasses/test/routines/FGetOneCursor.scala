/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.routines


import org.jooq.Field
import org.jooq.Parameter
import org.jooq.Record
import org.jooq.Result
import org.jooq.impl.AbstractRoutine
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UNumberArrayRecord


object FGetOneCursor {

	/**
	 * The parameter <code>TEST.F_GET_ONE_CURSOR.RETURN_VALUE</code>.
	 */
	val RETURN_VALUE : Parameter[Result[Record]] = AbstractRoutine.createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.RESULT, false)

	/**
	 * The parameter <code>TEST.F_GET_ONE_CURSOR.BOOK_IDS</code>.
	 */
	val BOOK_IDS : Parameter[UNumberArrayRecord] = AbstractRoutine.createParameter("BOOK_IDS", org.jooq.impl.SQLDataType.INTEGER.asArrayDataType(classOf[org.jooq.test.oraclescala.generatedclasses.test.udt.records.UNumberArrayRecord]), false)
}

/**
 * This class is generated by jOOQ.
 */
class FGetOneCursor extends AbstractRoutine[Result[Record]]("F_GET_ONE_CURSOR", Test.TEST, org.jooq.impl.SQLDataType.RESULT) {
	{
		setReturnParameter(FGetOneCursor.RETURN_VALUE)
		addInParameter(FGetOneCursor.BOOK_IDS)
	}

	/**
	 * Set the <code>BOOK_IDS</code> parameter IN value to the routine
	 */
	def setBookIds(value : UNumberArrayRecord) : Unit = {
		setValue(FGetOneCursor.BOOK_IDS, value)
	}

	/**
	 * Set the <code>BOOK_IDS</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	def setBookIds(field : Field[UNumberArrayRecord]) : Unit = {
		setField(FGetOneCursor.BOOK_IDS, field)
	}
}
