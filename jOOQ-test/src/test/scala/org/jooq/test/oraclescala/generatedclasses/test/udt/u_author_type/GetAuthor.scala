/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.udt.u_author_type


import java.lang.Number
import java.math.BigDecimal

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.udt.UAuthorType
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UAuthorTypeRecord


object GetAuthor {

	/**
	 * The parameter <code>TEST.U_AUTHOR_TYPE.GET_AUTHOR.RETURN_VALUE</code>.
	 */
	val RETURN_VALUE : Parameter[UAuthorTypeRecord] = AbstractRoutine.createParameter("RETURN_VALUE", org.jooq.test.oraclescala.generatedclasses.test.udt.UAuthorType.U_AUTHOR_TYPE.getDataType(), false)

	/**
	 * The parameter <code>TEST.U_AUTHOR_TYPE.GET_AUTHOR.P_ID</code>.
	 */
	val P_ID : Parameter[BigDecimal] = AbstractRoutine.createParameter("P_ID", org.jooq.impl.SQLDataType.NUMERIC, false)
}

/**
 * This class is generated by jOOQ.
 */
class GetAuthor extends AbstractRoutine[UAuthorTypeRecord]("GET_AUTHOR", Test.TEST, UAuthorType.U_AUTHOR_TYPE, org.jooq.test.oraclescala.generatedclasses.test.udt.UAuthorType.U_AUTHOR_TYPE.getDataType()) {
	{
		setReturnParameter(GetAuthor.RETURN_VALUE)
		addInParameter(GetAuthor.P_ID)
	}

	/**
	 * Set the <code>P_ID</code> parameter IN value to the routine
	 */
	def setPId(value : Number) : Unit = {
		setNumber(GetAuthor.P_ID, value)
	}

	/**
	 * Set the <code>P_ID</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	def setPId(field : Field[_ <: Number]) : Unit = {
		setNumber(GetAuthor.P_ID, field)
	}
}
