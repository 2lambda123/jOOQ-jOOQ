/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.udt


import java.lang.Class
import java.lang.Integer
import java.lang.String

import org.jooq.UDTField
import org.jooq.impl.UDTImpl
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UBookTypeRecord


object UBookType {

	/**
	 * The reference instance of <code>TEST.U_BOOK_TYPE</code>
	 */
	val U_BOOK_TYPE = new UBookType

	/**
	 * The attribute <code>TEST.U_BOOK_TYPE.ID</code>.
	 */
	val ID = U_BOOK_TYPE.ID

	/**
	 * The attribute <code>TEST.U_BOOK_TYPE.TITLE</code>.
	 */
	val TITLE = U_BOOK_TYPE.TITLE
}

/**
 * This class is generated by jOOQ.
 */
class UBookType extends UDTImpl[UBookTypeRecord]("U_BOOK_TYPE", Test.TEST) {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[UBookTypeRecord] = {
		classOf[UBookTypeRecord]
	}
	private val ID : UDTField[UBookTypeRecord, Integer] = UDTImpl.createField("ID", org.jooq.impl.SQLDataType.INTEGER, this, "")
	private val TITLE : UDTField[UBookTypeRecord, String] = UDTImpl.createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(400), this, "")

	{
		// Initialise data type
		getDataType
	}
}
