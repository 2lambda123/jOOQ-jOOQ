/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.udt


import java.lang.Class

import org.jooq.UDTField
import org.jooq.impl.UDTImpl
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UNumberTableRecord
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.U_3082_1Record
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.U_3082_2Record
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.U_3082_3Record


object U_3082_3 {

	/**
	 * The reference instance of <code>TEST.U_3082_3</code>
	 */
	val U_3082_3 = new U_3082_3

	/**
	 * The attribute <code>TEST.U_3082_3.O</code>.
	 */
	val O = U_3082_3.O

	/**
	 * The attribute <code>TEST.U_3082_3.T</code>.
	 */
	val T = U_3082_3.T

	/**
	 * The attribute <code>TEST.U_3082_3.NUMBERS</code>.
	 */
	val NUMBERS = U_3082_3.NUMBERS
}

/**
 * This class is generated by jOOQ.
 */
class U_3082_3 extends UDTImpl[U_3082_3Record]("U_3082_3", Test.TEST) {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[U_3082_3Record] = {
		classOf[U_3082_3Record]
	}
	private val O : UDTField[U_3082_3Record, U_3082_1Record] = UDTImpl.createField("O", org.jooq.test.oraclescala.generatedclasses.test.udt.U_3082_1.U_3082_1.getDataType(), this, "")
	private val T : UDTField[U_3082_3Record, U_3082_2Record] = UDTImpl.createField("T", org.jooq.test.oraclescala.generatedclasses.test.udt.U_3082_1.U_3082_1.getDataType().asArrayDataType(classOf[org.jooq.test.oraclescala.generatedclasses.test.udt.records.U_3082_2Record]), this, "")
	private val NUMBERS : UDTField[U_3082_3Record, UNumberTableRecord] = UDTImpl.createField("NUMBERS", org.jooq.impl.SQLDataType.INTEGER.asArrayDataType(classOf[org.jooq.test.oraclescala.generatedclasses.test.udt.records.UNumberTableRecord]), this, "")

	{
		// Initialise data type
		getDataType
	}
}
