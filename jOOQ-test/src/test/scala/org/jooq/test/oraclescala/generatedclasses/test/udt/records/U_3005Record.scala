/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.udt.records


import java.lang.Integer

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Row1
import org.jooq.impl.UDTRecordImpl
import org.jooq.test.oraclescala.generatedclasses.test.udt.U_3005


/**
 * This class is generated by jOOQ.
 */
class U_3005Record extends UDTRecordImpl[U_3005Record](U_3005.U_3005) with Record1[Integer] {

	/**
	 * Setter for <code>TEST.U_3005.ID</code>.
	 */
	def setId(value : Integer) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>TEST.U_3005.ID</code>.
	 */
	def getId : Integer = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[Integer]
	}

	// -------------------------------------------------------------------------
	// Record1 type implementation
	// -------------------------------------------------------------------------

	override def fieldsRow : Row1[Integer] = {
		super.fieldsRow.asInstanceOf[ Row1[Integer] ]
	}

	override def valuesRow : Row1[Integer] = {
		super.valuesRow.asInstanceOf[ Row1[Integer] ]
	}
	override def field1 : Field[Integer] = U_3005.ID
	override def value1 : Integer = getId

	override def value1(value : Integer) : U_3005Record = {
		setId(value)
		this
	}

	override def values(value1 : Integer) : U_3005Record = {
		this
	}

	/**
	 * Create a detached, initialised U_3005Record
	 */
	def this(id : Integer) = {
		this()

		setValue(0, id)
	}
}
