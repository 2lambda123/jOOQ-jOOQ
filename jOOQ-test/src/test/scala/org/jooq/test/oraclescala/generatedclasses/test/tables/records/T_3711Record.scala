/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.records


import javax.persistence.Column
import javax.persistence.Entity
import javax.persistence.Table

import org.jooq.Field
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.TableRecordImpl
import org.jooq.test.oraclescala.generatedclasses.multi_schema.udt.records.NumberObjectRecord
import org.jooq.test.oraclescala.generatedclasses.multi_schema.udt.records.NumberTableRecord
import org.jooq.test.oraclescala.generatedclasses.test.tables.T_3711


/**
 * This class is generated by jOOQ.
 */
@Entity
@Table(name = "T_3711", schema = "TEST")
class T_3711Record extends TableRecordImpl[T_3711Record](T_3711.T_3711) with Record6[NumberTableRecord, NumberObjectRecord, NumberTableRecord, NumberObjectRecord, NumberTableRecord, NumberObjectRecord] {

	/**
	 * Setter for <code>TEST.T_3711.V1</code>.
	 */
	def setV1(value : NumberTableRecord) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>TEST.T_3711.V1</code>.
	 */
	@Column(name = "V1")
	def getV1 : NumberTableRecord = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[NumberTableRecord]
	}

	/**
	 * Setter for <code>TEST.T_3711.V2</code>.
	 */
	def setV2(value : NumberObjectRecord) : Unit = {
		setValue(1, value)
	}

	/**
	 * Getter for <code>TEST.T_3711.V2</code>.
	 */
	@Column(name = "V2")
	def getV2 : NumberObjectRecord = {
		val r = getValue(1)
		if (r == null) null else r.asInstanceOf[NumberObjectRecord]
	}

	/**
	 * Setter for <code>TEST.T_3711.V3</code>.
	 */
	def setV3(value : NumberTableRecord) : Unit = {
		setValue(2, value)
	}

	/**
	 * Getter for <code>TEST.T_3711.V3</code>.
	 */
	@Column(name = "V3")
	def getV3 : NumberTableRecord = {
		val r = getValue(2)
		if (r == null) null else r.asInstanceOf[NumberTableRecord]
	}

	/**
	 * Setter for <code>TEST.T_3711.V4</code>.
	 */
	def setV4(value : NumberObjectRecord) : Unit = {
		setValue(3, value)
	}

	/**
	 * Getter for <code>TEST.T_3711.V4</code>.
	 */
	@Column(name = "V4")
	def getV4 : NumberObjectRecord = {
		val r = getValue(3)
		if (r == null) null else r.asInstanceOf[NumberObjectRecord]
	}

	/**
	 * Setter for <code>TEST.T_3711.V7</code>.
	 */
	def setV7(value : NumberTableRecord) : Unit = {
		setValue(4, value)
	}

	/**
	 * Getter for <code>TEST.T_3711.V7</code>.
	 */
	@Column(name = "V7")
	def getV7 : NumberTableRecord = {
		val r = getValue(4)
		if (r == null) null else r.asInstanceOf[NumberTableRecord]
	}

	/**
	 * Setter for <code>TEST.T_3711.V8</code>.
	 */
	def setV8(value : NumberObjectRecord) : Unit = {
		setValue(5, value)
	}

	/**
	 * Getter for <code>TEST.T_3711.V8</code>.
	 */
	@Column(name = "V8")
	def getV8 : NumberObjectRecord = {
		val r = getValue(5)
		if (r == null) null else r.asInstanceOf[NumberObjectRecord]
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	override def fieldsRow : Row6[NumberTableRecord, NumberObjectRecord, NumberTableRecord, NumberObjectRecord, NumberTableRecord, NumberObjectRecord] = {
		super.fieldsRow.asInstanceOf[ Row6[NumberTableRecord, NumberObjectRecord, NumberTableRecord, NumberObjectRecord, NumberTableRecord, NumberObjectRecord] ]
	}

	override def valuesRow : Row6[NumberTableRecord, NumberObjectRecord, NumberTableRecord, NumberObjectRecord, NumberTableRecord, NumberObjectRecord] = {
		super.valuesRow.asInstanceOf[ Row6[NumberTableRecord, NumberObjectRecord, NumberTableRecord, NumberObjectRecord, NumberTableRecord, NumberObjectRecord] ]
	}
	override def field1 : Field[NumberTableRecord] = T_3711.T_3711.V1
	override def field2 : Field[NumberObjectRecord] = T_3711.T_3711.V2
	override def field3 : Field[NumberTableRecord] = T_3711.T_3711.V3
	override def field4 : Field[NumberObjectRecord] = T_3711.T_3711.V4
	override def field5 : Field[NumberTableRecord] = T_3711.T_3711.V7
	override def field6 : Field[NumberObjectRecord] = T_3711.T_3711.V8
	override def value1 : NumberTableRecord = getV1
	override def value2 : NumberObjectRecord = getV2
	override def value3 : NumberTableRecord = getV3
	override def value4 : NumberObjectRecord = getV4
	override def value5 : NumberTableRecord = getV7
	override def value6 : NumberObjectRecord = getV8

	override def value1(value : NumberTableRecord) : T_3711Record = {
		setV1(value)
		this
	}

	override def value2(value : NumberObjectRecord) : T_3711Record = {
		setV2(value)
		this
	}

	override def value3(value : NumberTableRecord) : T_3711Record = {
		setV3(value)
		this
	}

	override def value4(value : NumberObjectRecord) : T_3711Record = {
		setV4(value)
		this
	}

	override def value5(value : NumberTableRecord) : T_3711Record = {
		setV7(value)
		this
	}

	override def value6(value : NumberObjectRecord) : T_3711Record = {
		setV8(value)
		this
	}

	override def values(value1 : NumberTableRecord, value2 : NumberObjectRecord, value3 : NumberTableRecord, value4 : NumberObjectRecord, value5 : NumberTableRecord, value6 : NumberObjectRecord) : T_3711Record = {
		this.value1(value1)
		this.value2(value2)
		this.value3(value3)
		this.value4(value4)
		this.value5(value5)
		this.value6(value6)
		this
	}

	/**
	 * Create a detached, initialised T_3711Record
	 */
	def this(v1 : NumberTableRecord, v2 : NumberObjectRecord, v3 : NumberTableRecord, v4 : NumberObjectRecord, v7 : NumberTableRecord, v8 : NumberObjectRecord) = {
		this()

		setValue(0, v1)
		setValue(1, v2)
		setValue(2, v3)
		setValue(3, v4)
		setValue(4, v7)
		setValue(5, v8)
	}
}
