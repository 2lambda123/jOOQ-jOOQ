/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.packages.library


import java.lang.String
import java.math.BigDecimal

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.packages.Library


object PkgFAuthorExists1 {

	/**
	 * The parameter <code>TEST.LIBRARY.PKG_F_AUTHOR_EXISTS.RETURN_VALUE</code>.
	 */
	val RETURN_VALUE : Parameter[BigDecimal] = AbstractRoutine.createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.NUMERIC, false)

	/**
	 * The parameter <code>TEST.LIBRARY.PKG_F_AUTHOR_EXISTS.AUTHOR_NAME</code>.
	 */
	val AUTHOR_NAME : Parameter[String] = AbstractRoutine.createParameter("AUTHOR_NAME", org.jooq.impl.SQLDataType.VARCHAR, false)
}

/**
 * This class is generated by jOOQ.
 */
class PkgFAuthorExists1 extends AbstractRoutine[BigDecimal]("PKG_F_AUTHOR_EXISTS", Test.TEST, Library.LIBRARY, org.jooq.impl.SQLDataType.NUMERIC) {
	{
		setReturnParameter(PkgFAuthorExists1.RETURN_VALUE)
		addInParameter(PkgFAuthorExists1.AUTHOR_NAME)
		setOverloaded(true)
	}

	/**
	 * Set the <code>AUTHOR_NAME</code> parameter IN value to the routine
	 */
	def setAuthorName(value : String) : Unit = {
		setValue(PkgFAuthorExists1.AUTHOR_NAME, value)
	}

	/**
	 * Set the <code>AUTHOR_NAME</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	def setAuthorName(field : Field[String]) : Unit = {
		setField(PkgFAuthorExists1.AUTHOR_NAME, field)
	}
}
