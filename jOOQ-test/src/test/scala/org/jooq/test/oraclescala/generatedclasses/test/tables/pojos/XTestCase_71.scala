/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.pojos


import java.io.Serializable
import java.lang.Integer
import java.lang.Short

import javax.persistence.Column
import javax.persistence.Entity
import javax.persistence.Id
import javax.persistence.Table
import javax.validation.constraints.NotNull


/**
 * This class is generated by jOOQ.
 */
@Entity
@Table(name = "X_TEST_CASE_71", schema = "TEST")
class XTestCase_71(
	  private var id : Integer
	, private var testCase_64_69Id : Short  
) extends Serializable {

	def this() = {
		this(null, null)
	}

	def this (value : XTestCase_71) = {
		this(
			  value.id
			, value.testCase_64_69Id
		)
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	@NotNull
	def getId : Integer = {
		this.id
	}

	def setId(id : Integer) : Unit = {
		this.id = id
	}

	@Column(name = "TEST_CASE_64_69_ID", precision = 4)
	def getTestCase_64_69Id : Short = {
		this.testCase_64_69Id
	}

	def setTestCase_64_69Id(testCase_64_69Id : Short) : Unit = {
		this.testCase_64_69Id = testCase_64_69Id
	}

	override def equals(obj : Any) : scala.Boolean = {
		if (this == obj)
			return true
		if (obj == null)
			return false
		if (getClass() != obj.getClass())
			return false
		val other = obj.asInstanceOf[XTestCase_71]
		if (id == null) {
			if (other.id != null)
				return false
		}
		else if (!id.equals(other.id))
			return false
		if (testCase_64_69Id == null) {
			if (other.testCase_64_69Id != null)
				return false
		}
		else if (!testCase_64_69Id.equals(other.testCase_64_69Id))
			return false
		return true
	}

	override def hashCode : Int = {
		val prime = 31
		var result = 1
		result = prime * result + (if (id == null) 0 else id.hashCode())
		result = prime * result + (if (testCase_64_69Id == null) 0 else testCase_64_69Id.hashCode())
		return result
	}
}
