/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.daos


import java.lang.Integer
import java.lang.String
import java.util.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl
import org.jooq.test.oraclescala.generatedclasses.test.tables.XTestCase_85
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.XTestCase_85Record


/**
 * This class is generated by jOOQ.
 */
class XTestCase_85Dao(configuration : Configuration) extends DAOImpl[XTestCase_85Record, org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XTestCase_85, Integer](XTestCase_85.X_TEST_CASE_85, classOf[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XTestCase_85], configuration) {

	/**
	 * Create a new XTestCase_85Dao without any configuration
	 */
	def this() = {
		this(null)
	}

	override protected def getId(o : org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XTestCase_85) : Integer = {
		o.getId
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	def fetchById(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XTestCase_85] = {
		fetch(XTestCase_85.X_TEST_CASE_85.ID, values:_*)
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	def fetchOneById(value : Integer) : org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XTestCase_85 = {
		fetchOne(XTestCase_85.X_TEST_CASE_85.ID, value)
	}

	/**
	 * Fetch records that have <code>X_UNUSED_ID IN (values)</code>
	 */
	def fetchByXUnusedId(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XTestCase_85] = {
		fetch(XTestCase_85.X_TEST_CASE_85.X_UNUSED_ID, values:_*)
	}

	/**
	 * Fetch records that have <code>X_UNUSED_NAME IN (values)</code>
	 */
	def fetchByXUnusedName(values : String*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XTestCase_85] = {
		fetch(XTestCase_85.X_TEST_CASE_85.X_UNUSED_NAME, values:_*)
	}
}
