/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.udt.records


import org.jooq.Field
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.UDTRecordImpl
import org.jooq.test.oraclescala.generatedclasses.test.udt.U_3082_3


/**
 * This class is generated by jOOQ.
 */
class U_3082_3Record extends UDTRecordImpl[U_3082_3Record](U_3082_3.U_3082_3) with Record3[U_3082_1Record, U_3082_2Record, UNumberTableRecord] {

	/**
	 * Setter for <code>TEST.U_3082_3.O</code>.
	 */
	def setO(value : U_3082_1Record) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>TEST.U_3082_3.O</code>.
	 */
	def getO : U_3082_1Record = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[U_3082_1Record]
	}

	/**
	 * Setter for <code>TEST.U_3082_3.T</code>.
	 */
	def setT(value : U_3082_2Record) : Unit = {
		setValue(1, value)
	}

	/**
	 * Getter for <code>TEST.U_3082_3.T</code>.
	 */
	def getT : U_3082_2Record = {
		val r = getValue(1)
		if (r == null) null else r.asInstanceOf[U_3082_2Record]
	}

	/**
	 * Setter for <code>TEST.U_3082_3.NUMBERS</code>.
	 */
	def setNumbers(value : UNumberTableRecord) : Unit = {
		setValue(2, value)
	}

	/**
	 * Getter for <code>TEST.U_3082_3.NUMBERS</code>.
	 */
	def getNumbers : UNumberTableRecord = {
		val r = getValue(2)
		if (r == null) null else r.asInstanceOf[UNumberTableRecord]
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	override def fieldsRow : Row3[U_3082_1Record, U_3082_2Record, UNumberTableRecord] = {
		super.fieldsRow.asInstanceOf[ Row3[U_3082_1Record, U_3082_2Record, UNumberTableRecord] ]
	}

	override def valuesRow : Row3[U_3082_1Record, U_3082_2Record, UNumberTableRecord] = {
		super.valuesRow.asInstanceOf[ Row3[U_3082_1Record, U_3082_2Record, UNumberTableRecord] ]
	}
	override def field1 : Field[U_3082_1Record] = U_3082_3.O
	override def field2 : Field[U_3082_2Record] = U_3082_3.T
	override def field3 : Field[UNumberTableRecord] = U_3082_3.NUMBERS
	override def value1 : U_3082_1Record = getO
	override def value2 : U_3082_2Record = getT
	override def value3 : UNumberTableRecord = getNumbers

	override def value1(value : U_3082_1Record) : U_3082_3Record = {
		setO(value)
		this
	}

	override def value2(value : U_3082_2Record) : U_3082_3Record = {
		setT(value)
		this
	}

	override def value3(value : UNumberTableRecord) : U_3082_3Record = {
		setNumbers(value)
		this
	}

	override def values(value1 : U_3082_1Record, value2 : U_3082_2Record, value3 : UNumberTableRecord) : U_3082_3Record = {
		this.value1(value1)
		this.value2(value2)
		this.value3(value3)
		this
	}

	/**
	 * Create a detached, initialised U_3082_3Record
	 */
	def this(o : U_3082_1Record, t : U_3082_2Record, numbers : UNumberTableRecord) = {
		this()

		setValue(0, o)
		setValue(1, t)
		setValue(2, numbers)
	}
}
