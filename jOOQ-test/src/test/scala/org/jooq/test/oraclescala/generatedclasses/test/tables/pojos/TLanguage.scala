/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.pojos


import java.io.Serializable
import java.lang.Integer
import java.lang.String
import java.lang.StringBuilder

import javax.persistence.Column
import javax.persistence.Entity
import javax.persistence.Id
import javax.persistence.Table
import javax.validation.constraints.NotNull
import javax.validation.constraints.Size


/**
 * An entity holding language master data
 * 
 * Oh oh. Newline character.
 * 
 * "Quotes". And \Escaping\That\Shouldn't\Be\Escaping
 * 
 * Oh, and beware of end-of-javadoc * /
 */
@Entity
@Table(name = "T_LANGUAGE", schema = "TEST")
class TLanguage(
	  private var cd : String 
	, private var description : String 
	, private var descriptionEnglish : String 
	, private var id : Integer
) extends Serializable {

	def this() = {
		this(null, null, null, null)
	}

	def this (value : TLanguage) = {
		this(
			  value.cd
			, value.description
			, value.descriptionEnglish
			, value.id
		)
	}

	@Column(name = "CD", nullable = false, length = 2)
	@NotNull
	@Size(max = 2)
	def getCd : String = {
		this.cd
	}

	def setCd(cd : String) : Unit = {
		this.cd = cd
	}

	@Column(name = "DESCRIPTION", length = 50)
	@Size(max = 50)
	def getDescription : String = {
		this.description
	}

	def setDescription(description : String) : Unit = {
		this.description = description
	}

	@Column(name = "DESCRIPTION_ENGLISH", length = 50)
	@Size(max = 50)
	def getDescriptionEnglish : String = {
		this.descriptionEnglish
	}

	def setDescriptionEnglish(descriptionEnglish : String) : Unit = {
		this.descriptionEnglish = descriptionEnglish
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	@NotNull
	def getId : Integer = {
		this.id
	}

	def setId(id : Integer) : Unit = {
		this.id = id
	}

	override def equals(obj : Any) : scala.Boolean = {
		if (this == obj)
			return true
		if (obj == null)
			return false
		if (getClass() != obj.getClass())
			return false
		val other = obj.asInstanceOf[TLanguage]
		if (cd == null) {
			if (other.cd != null)
				return false
		}
		else if (!cd.equals(other.cd))
			return false
		if (description == null) {
			if (other.description != null)
				return false
		}
		else if (!description.equals(other.description))
			return false
		if (descriptionEnglish == null) {
			if (other.descriptionEnglish != null)
				return false
		}
		else if (!descriptionEnglish.equals(other.descriptionEnglish))
			return false
		if (id == null) {
			if (other.id != null)
				return false
		}
		else if (!id.equals(other.id))
			return false
		return true
	}

	override def hashCode : Int = {
		val prime = 31
		var result = 1
		result = prime * result + (if (cd == null) 0 else cd.hashCode())
		result = prime * result + (if (description == null) 0 else description.hashCode())
		result = prime * result + (if (descriptionEnglish == null) 0 else descriptionEnglish.hashCode())
		result = prime * result + (if (id == null) 0 else id.hashCode())
		return result
	}

	override def toString : String = {
		val sb = new StringBuilder("TLanguage (")

		sb.append(cd)
		sb.append(", ").append(description)
		sb.append(", ").append(descriptionEnglish)
		sb.append(", ").append(id)

		sb.append(")");
		return sb.toString
	}
}
