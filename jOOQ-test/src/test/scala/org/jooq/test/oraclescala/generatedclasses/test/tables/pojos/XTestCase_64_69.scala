/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.pojos


import java.io.Serializable
import java.lang.Integer

import javax.persistence.Column
import javax.persistence.Entity
import javax.persistence.Id
import javax.persistence.Table
import javax.validation.constraints.NotNull


/**
 * This class is generated by jOOQ.
 */
@Entity
@Table(name = "X_TEST_CASE_64_69", schema = "TEST")
class XTestCase_64_69(
	  private var id : Integer
	, private var unusedId : Integer
) extends Serializable {

	def this() = {
		this(null, null)
	}

	def this (value : XTestCase_64_69) = {
		this(
			  value.id
			, value.unusedId
		)
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	@NotNull
	def getId : Integer = {
		this.id
	}

	def setId(id : Integer) : Unit = {
		this.id = id
	}

	@Column(name = "UNUSED_ID", precision = 7)
	def getUnusedId : Integer = {
		this.unusedId
	}

	def setUnusedId(unusedId : Integer) : Unit = {
		this.unusedId = unusedId
	}

	override def equals(obj : Any) : scala.Boolean = {
		if (this == obj)
			return true
		if (obj == null)
			return false
		if (getClass() != obj.getClass())
			return false
		val other = obj.asInstanceOf[XTestCase_64_69]
		if (id == null) {
			if (other.id != null)
				return false
		}
		else if (!id.equals(other.id))
			return false
		if (unusedId == null) {
			if (other.unusedId != null)
				return false
		}
		else if (!unusedId.equals(other.unusedId))
			return false
		return true
	}

	override def hashCode : Int = {
		val prime = 31
		var result = 1
		result = prime * result + (if (id == null) 0 else id.hashCode())
		result = prime * result + (if (unusedId == null) 0 else unusedId.hashCode())
		return result
	}
}
