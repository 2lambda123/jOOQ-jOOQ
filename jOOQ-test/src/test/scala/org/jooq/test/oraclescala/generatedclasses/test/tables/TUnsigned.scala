/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables


import java.lang.Class
import java.lang.String

import org.jooq.Field
import org.jooq.Table
import org.jooq.TableField
import org.jooq.impl.TableImpl
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.TUnsignedRecord
import org.jooq.types.UByte
import org.jooq.types.UInteger
import org.jooq.types.ULong
import org.jooq.types.UShort


object TUnsigned {

	/**
	 * The reference instance of <code>TEST.T_UNSIGNED</code>
	 */
	val T_UNSIGNED = new TUnsigned
}

/**
 * This class is generated by jOOQ.
 */
class TUnsigned(alias : String, aliased : Table[TUnsignedRecord], parameters : Array[ Field[_] ]) extends TableImpl[TUnsignedRecord](alias, Test.TEST, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[TUnsignedRecord] = {
		classOf[TUnsignedRecord]
	}

	/**
	 * The column <code>TEST.T_UNSIGNED.U_BYTE</code>.
	 */
	val U_BYTE : TableField[TUnsignedRecord, UByte] = createField("U_BYTE", org.jooq.impl.SQLDataType.TINYINTUNSIGNED, "")

	/**
	 * The column <code>TEST.T_UNSIGNED.U_SHORT</code>.
	 */
	val U_SHORT : TableField[TUnsignedRecord, UShort] = createField("U_SHORT", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED, "")

	/**
	 * The column <code>TEST.T_UNSIGNED.U_INT</code>.
	 */
	val U_INT : TableField[TUnsignedRecord, UInteger] = createField("U_INT", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, "")

	/**
	 * The column <code>TEST.T_UNSIGNED.U_LONG</code>.
	 */
	val U_LONG : TableField[TUnsignedRecord, ULong] = createField("U_LONG", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, "")

	/**
	 * Create a <code>TEST.T_UNSIGNED</code> table reference
	 */
	def this() = {
		this("T_UNSIGNED", null, null)
	}

	/**
	 * Create an aliased <code>TEST.T_UNSIGNED</code> table reference
	 */
	def this(alias : String) = {
		this(alias, org.jooq.test.oraclescala.generatedclasses.test.tables.TUnsigned.T_UNSIGNED, null)
	}

	private def this(alias : String, aliased : Table[TUnsignedRecord]) = {
		this(alias, aliased, null)
	}

	override def as(alias : String) : TUnsigned = {
		new TUnsigned(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : TUnsigned = {
		new TUnsigned(name, null)
	}
}
