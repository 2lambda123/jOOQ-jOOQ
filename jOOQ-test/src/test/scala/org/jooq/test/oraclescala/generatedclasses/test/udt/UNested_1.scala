/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.udt


import java.lang.Class
import java.lang.Integer

import org.jooq.UDTField
import org.jooq.impl.UDTImpl
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UNested_1Record
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UNumberTableRecord


object UNested_1 {

	/**
	 * The reference instance of <code>TEST.U_NESTED_1</code>
	 */
	val U_NESTED_1 = new UNested_1

	/**
	 * The attribute <code>TEST.U_NESTED_1.ID</code>.
	 */
	val ID = U_NESTED_1.ID

	/**
	 * The attribute <code>TEST.U_NESTED_1.NESTED</code>.
	 */
	val NESTED = U_NESTED_1.NESTED
}

/**
 * This class is generated by jOOQ.
 */
class UNested_1 extends UDTImpl[UNested_1Record]("U_NESTED_1", Test.TEST) {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[UNested_1Record] = {
		classOf[UNested_1Record]
	}
	private val ID : UDTField[UNested_1Record, Integer] = UDTImpl.createField("ID", org.jooq.impl.SQLDataType.INTEGER, this, "")
	private val NESTED : UDTField[UNested_1Record, UNumberTableRecord] = UDTImpl.createField("NESTED", org.jooq.impl.SQLDataType.INTEGER.asArrayDataType(classOf[org.jooq.test.oraclescala.generatedclasses.test.udt.records.UNumberTableRecord]), this, "")

	{
		// Initialise data type
		getDataType
	}
}
