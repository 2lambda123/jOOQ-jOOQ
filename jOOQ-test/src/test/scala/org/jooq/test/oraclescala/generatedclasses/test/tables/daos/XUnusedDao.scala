/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.daos


import java.lang.Integer
import java.lang.String
import java.math.BigDecimal
import java.math.BigInteger
import java.util.List

import org.jooq.Configuration
import org.jooq.Record2
import org.jooq.impl.DAOImpl
import org.jooq.test.oraclescala.generatedclasses.test.tables.XUnused
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.XUnusedRecord


/**
 * An unused table in the same schema.
 * 
 * "Its comments contain special characters"
 */
class XUnusedDao(configuration : Configuration) extends DAOImpl[XUnusedRecord, org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused, Record2[Integer, String]](XUnused.X_UNUSED, classOf[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused], configuration) {

	/**
	 * Create a new XUnusedDao without any configuration
	 */
	def this() = {
		this(null)
	}

	override protected def getId(o : org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused) : Record2[Integer, String] = {
		compositeKeyRecord(o.getId, o.getName)
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	def fetchById(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.ID, values:_*)
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	def fetchOneById(value : Integer) : org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused = {
		fetchOne(XUnused.X_UNUSED.ID, value)
	}

	/**
	 * Fetch records that have <code>NAME IN (values)</code>
	 */
	def fetchByName(values : String*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.NAME, values:_*)
	}

	/**
	 * Fetch records that have <code>BIG_INTEGER IN (values)</code>
	 */
	def fetchByBigInteger(values : BigInteger*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.BIG_INTEGER, values:_*)
	}

	/**
	 * Fetch records that have <code>ID_REF IN (values)</code>
	 */
	def fetchByIdRef(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.ID_REF, values:_*)
	}

	/**
	 * Fetch records that have <code>CLASS IN (values)</code>
	 */
	def fetchByClass(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.CLASS, values:_*)
	}

	/**
	 * Fetch records that have <code>FIELDS IN (values)</code>
	 */
	def fetchByFields(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.FIELDS, values:_*)
	}

	/**
	 * Fetch records that have <code>CONFIGURATION IN (values)</code>
	 */
	def fetchByConfiguration(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.CONFIGURATION, values:_*)
	}

	/**
	 * Fetch records that have <code>U_D_T IN (values)</code>
	 */
	def fetchByUDT(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.U_D_T, values:_*)
	}

	/**
	 * Fetch records that have <code>META_DATA IN (values)</code>
	 */
	def fetchByMetaData(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.META_DATA, values:_*)
	}

	/**
	 * Fetch records that have <code>TYPE0 IN (values)</code>
	 */
	def fetchByType0(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.TYPE0, values:_*)
	}

	/**
	 * Fetch records that have <code>PRIMARY_KEY IN (values)</code>
	 */
	def fetchByPrimaryKey(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.PRIMARY_KEY, values:_*)
	}

	/**
	 * Fetch records that have <code>PRIMARYKEY IN (values)</code>
	 */
	def fetchByPrimarykey(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.PRIMARYKEY, values:_*)
	}

	/**
	 * Fetch records that have <code>NAME_REF IN (values)</code>
	 */
	def fetchByNameRef(values : String*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.NAME_REF, values:_*)
	}

	/**
	 * Fetch records that have <code>FIELD 737 IN (values)</code>
	 */
	def fetchByField_737(values : BigDecimal*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.FIELD_737, values:_*)
	}

	/**
	 * Fetch records that have <code>MS_UNUSED_ID_REF IN (values)</code>
	 */
	def fetchByMsUnusedIdRef(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.MS_UNUSED_ID_REF, values:_*)
	}

	/**
	 * Fetch records that have <code>MS_UNUSED_NAME_REF IN (values)</code>
	 */
	def fetchByMsUnusedNameRef(values : String*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.XUnused] = {
		fetch(XUnused.X_UNUSED.MS_UNUSED_NAME_REF, values:_*)
	}
}
