/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables


import java.lang.Class
import java.lang.String

import org.jooq.Field
import org.jooq.Table
import org.jooq.TableField
import org.jooq.impl.TableImpl
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.VLibraryRecord


object VLibrary {

	/**
	 * The reference instance of <code>TEST.V_LIBRARY</code>
	 */
	val V_LIBRARY = new VLibrary
}

/**
 * This class is generated by jOOQ.
 */
class VLibrary(alias : String, aliased : Table[VLibraryRecord], parameters : Array[ Field[_] ]) extends TableImpl[VLibraryRecord](alias, Test.TEST, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[VLibraryRecord] = {
		classOf[VLibraryRecord]
	}

	/**
	 * The column <code>TEST.V_LIBRARY.AUTHOR</code>.
	 */
	val AUTHOR : TableField[VLibraryRecord, String] = createField("AUTHOR", org.jooq.impl.SQLDataType.VARCHAR.length(101), "")

	/**
	 * The column <code>TEST.V_LIBRARY.TITLE</code>.
	 */
	val TITLE : TableField[VLibraryRecord, String] = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(400).nullable(false), "")

	/**
	 * Create a <code>TEST.V_LIBRARY</code> table reference
	 */
	def this() = {
		this("V_LIBRARY", null, null)
	}

	/**
	 * Create an aliased <code>TEST.V_LIBRARY</code> table reference
	 */
	def this(alias : String) = {
		this(alias, org.jooq.test.oraclescala.generatedclasses.test.tables.VLibrary.V_LIBRARY, null)
	}

	private def this(alias : String, aliased : Table[VLibraryRecord]) = {
		this(alias, aliased, null)
	}

	override def as(alias : String) : VLibrary = {
		new VLibrary(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : VLibrary = {
		new VLibrary(name, null)
	}
}
