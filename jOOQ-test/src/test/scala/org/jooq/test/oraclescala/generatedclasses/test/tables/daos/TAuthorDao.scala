/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.daos


import java.lang.Integer
import java.lang.String
import java.sql.Date
import java.util.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl
import org.jooq.test.oraclescala.generatedclasses.test.tables.TAuthor
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.TAuthorRecord
import org.jooq.test.oraclescala.generatedclasses.test.udt.records.UAddressTypeRecord


/**
 * An entity holding authors of books
 */
class TAuthorDao(configuration : Configuration) extends DAOImpl[TAuthorRecord, org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TAuthor, Integer](TAuthor.T_AUTHOR, classOf[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TAuthor], configuration) {

	/**
	 * Create a new TAuthorDao without any configuration
	 */
	def this() = {
		this(null)
	}

	override protected def getId(o : org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TAuthor) : Integer = {
		o.getId
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	def fetchById(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TAuthor] = {
		fetch(TAuthor.T_AUTHOR.ID, values:_*)
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	def fetchOneById(value : Integer) : org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TAuthor = {
		fetchOne(TAuthor.T_AUTHOR.ID, value)
	}

	/**
	 * Fetch records that have <code>FIRST_NAME IN (values)</code>
	 */
	def fetchByFirstName(values : String*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TAuthor] = {
		fetch(TAuthor.T_AUTHOR.FIRST_NAME, values:_*)
	}

	/**
	 * Fetch records that have <code>LAST_NAME IN (values)</code>
	 */
	def fetchByLastName(values : String*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TAuthor] = {
		fetch(TAuthor.T_AUTHOR.LAST_NAME, values:_*)
	}

	/**
	 * Fetch records that have <code>DATE_OF_BIRTH IN (values)</code>
	 */
	def fetchByDateOfBirth(values : Date*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TAuthor] = {
		fetch(TAuthor.T_AUTHOR.DATE_OF_BIRTH, values:_*)
	}

	/**
	 * Fetch records that have <code>YEAR_OF_BIRTH IN (values)</code>
	 */
	def fetchByYearOfBirth(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TAuthor] = {
		fetch(TAuthor.T_AUTHOR.YEAR_OF_BIRTH, values:_*)
	}

	/**
	 * Fetch records that have <code>ADDRESS IN (values)</code>
	 */
	def fetchByAddress(values : UAddressTypeRecord*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TAuthor] = {
		fetch(TAuthor.T_AUTHOR.ADDRESS, values:_*)
	}
}
