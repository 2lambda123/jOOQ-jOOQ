/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables


import java.lang.Class
import java.lang.Integer
import java.lang.String

import org.jooq.Field
import org.jooq.Table
import org.jooq.TableField
import org.jooq.impl.TableImpl
import org.jooq.test.oraclescala.generatedclasses.test.Test
import org.jooq.test.oraclescala.generatedclasses.test.tables.T_785
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.T_785Record


object T_785 {

	/**
	 * The reference instance of <code>TEST.T_785</code>
	 */
	val T_785 = new T_785
}

/**
 * This class is generated by jOOQ.
 */
class T_785(alias : String, aliased : Table[T_785Record], parameters : Array[ Field[_] ]) extends TableImpl[T_785Record](alias, Test.TEST, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[T_785Record] = {
		classOf[T_785Record]
	}

	/**
	 * The column <code>TEST.T_785.ID</code>.
	 */
	val ID : TableField[T_785Record, Integer] = createField("ID", org.jooq.impl.SQLDataType.INTEGER, "")

	/**
	 * The column <code>TEST.T_785.NAME</code>.
	 */
	val NAME : TableField[T_785Record, String] = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(50), "")

	/**
	 * The column <code>TEST.T_785.VALUE</code>.
	 */
	val VALUE : TableField[T_785Record, String] = createField("VALUE", org.jooq.impl.SQLDataType.VARCHAR.length(50), "")

	/**
	 * Create a <code>TEST.T_785</code> table reference
	 */
	def this() = {
		this("T_785", null, null)
	}

	/**
	 * Create an aliased <code>TEST.T_785</code> table reference
	 */
	def this(alias : String) = {
		this(alias, T_785.T_785, null)
	}

	private def this(alias : String, aliased : Table[T_785Record]) = {
		this(alias, aliased, null)
	}

	override def as(alias : String) : T_785 = {
		new T_785(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : T_785 = {
		new T_785(name, null)
	}
}
