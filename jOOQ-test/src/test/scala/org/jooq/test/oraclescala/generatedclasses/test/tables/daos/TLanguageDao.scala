/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oraclescala.generatedclasses.test.tables.daos


import java.lang.Integer
import java.lang.String
import java.util.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl
import org.jooq.test.oraclescala.generatedclasses.test.tables.TLanguage
import org.jooq.test.oraclescala.generatedclasses.test.tables.records.TLanguageRecord


/**
 * An entity holding language master data
 * 
 * Oh oh. Newline character.
 * 
 * "Quotes". And \Escaping\That\Shouldn't\Be\Escaping
 * 
 * Oh, and beware of end-of-javadoc * /
 */
class TLanguageDao(configuration : Configuration) extends DAOImpl[TLanguageRecord, org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TLanguage, Integer](TLanguage.T_LANGUAGE, classOf[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TLanguage], configuration) {

	/**
	 * Create a new TLanguageDao without any configuration
	 */
	def this() = {
		this(null)
	}

	override protected def getId(o : org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TLanguage) : Integer = {
		o.getId
	}

	/**
	 * Fetch records that have <code>CD IN (values)</code>
	 */
	def fetchByCd(values : String*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TLanguage] = {
		fetch(TLanguage.T_LANGUAGE.CD, values:_*)
	}

	/**
	 * Fetch records that have <code>DESCRIPTION IN (values)</code>
	 */
	def fetchByDescription(values : String*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TLanguage] = {
		fetch(TLanguage.T_LANGUAGE.DESCRIPTION, values:_*)
	}

	/**
	 * Fetch records that have <code>DESCRIPTION_ENGLISH IN (values)</code>
	 */
	def fetchByDescriptionEnglish(values : String*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TLanguage] = {
		fetch(TLanguage.T_LANGUAGE.DESCRIPTION_ENGLISH, values:_*)
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	def fetchById(values : Integer*) : List[org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TLanguage] = {
		fetch(TLanguage.T_LANGUAGE.ID, values:_*)
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	def fetchOneById(value : Integer) : org.jooq.test.oraclescala.generatedclasses.test.tables.pojos.TLanguage = {
		fetchOne(TLanguage.T_LANGUAGE.ID, value)
	}
}
