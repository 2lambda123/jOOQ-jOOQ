/**
 * This class is generated by jOOQ
 */
package org.jooq.test.cubrid.generatedclasses.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.cubrid.generatedclasses.DefaultSchema;
import org.jooq.test.cubrid.generatedclasses.Keys;
import org.jooq.test.cubrid.generatedclasses.enums.TBookStatus;
import org.jooq.test.cubrid.generatedclasses.tables.records.TBookRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TBook extends TableImpl<TBookRecord> {

	private static final long serialVersionUID = -55667429;

	/**
	 * The reference instance of <code>t_book</code>
	 */
	public static final TBook T_BOOK = new TBook();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TBookRecord> getRecordType() {
		return TBookRecord.class;
	}

	/**
	 * The column <code>t_book.id</code>.
	 */
	public static final TableField<TBookRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), T_BOOK, "");

	/**
	 * The column <code>t_book.author_id</code>.
	 */
	public static final TableField<TBookRecord, Integer> AUTHOR_ID = createField("author_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), T_BOOK, "");

	/**
	 * The column <code>t_book.co_author_id</code>.
	 */
	public static final TableField<TBookRecord, Integer> CO_AUTHOR_ID = createField("co_author_id", org.jooq.impl.SQLDataType.INTEGER, T_BOOK, "");

	/**
	 * The column <code>t_book.details_id</code>.
	 */
	public static final TableField<TBookRecord, Integer> DETAILS_ID = createField("details_id", org.jooq.impl.SQLDataType.INTEGER, T_BOOK, "");

	/**
	 * The column <code>t_book.title</code>.
	 */
	public static final TableField<TBookRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(400).nullable(false), T_BOOK, "");

	/**
	 * The column <code>t_book.published_in</code>.
	 */
	public static final TableField<TBookRecord, Integer> PUBLISHED_IN = createField("published_in", org.jooq.impl.SQLDataType.INTEGER.nullable(false), T_BOOK, "");

	/**
	 * The column <code>t_book.language_id</code>.
	 */
	public static final TableField<TBookRecord, Integer> LANGUAGE_ID = createField("language_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), T_BOOK, "");

	/**
	 * The column <code>t_book.content_text</code>.
	 */
	public static final TableField<TBookRecord, String> CONTENT_TEXT = createField("content_text", org.jooq.impl.SQLDataType.CLOB, T_BOOK, "");

	/**
	 * The column <code>t_book.content_pdf</code>.
	 */
	public static final TableField<TBookRecord, byte[]> CONTENT_PDF = createField("content_pdf", org.jooq.impl.SQLDataType.BLOB, T_BOOK, "");

	/**
	 * The column <code>t_book.status</code>.
	 */
	public static final TableField<TBookRecord, TBookStatus> STATUS = createField("status", org.jooq.util.cubrid.CUBRIDDataType.VARCHAR.asEnumDataType(org.jooq.test.cubrid.generatedclasses.enums.TBookStatus.class), T_BOOK, "");

	/**
	 * No further instances allowed
	 */
	private TBook() {
		this("t_book", null);
	}

	private TBook(String alias, Table<TBookRecord> aliased) {
		this(alias, aliased, null);
	}

	private TBook(String alias, Table<TBookRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TBookRecord> getPrimaryKey() {
		return Keys.T_BOOK__PK_T_BOOK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TBookRecord>> getKeys() {
		return Arrays.<UniqueKey<TBookRecord>>asList(Keys.T_BOOK__PK_T_BOOK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<TBookRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<TBookRecord, ?>>asList(Keys.T_BOOK__FK_T_BOOK_AUTHOR_ID, Keys.T_BOOK__FK_T_BOOK_CO_AUTHOR_ID, Keys.T_BOOK__FK_T_BOOK_LANGUAGE_ID);
	}
}
