/**
 * This class is generated by jOOQ
 */
package org.jooq.test.cubrid.generatedclasses.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.cubrid.generatedclasses.DefaultSchema;
import org.jooq.test.cubrid.generatedclasses.Keys;
import org.jooq.test.cubrid.generatedclasses.tables.records.XTestCase_64_69Record;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XTestCase_64_69 extends TableImpl<XTestCase_64_69Record> {

	private static final long serialVersionUID = 651032537;

	/**
	 * The reference instance of <code>x_test_case_64_69</code>
	 */
	public static final XTestCase_64_69 X_TEST_CASE_64_69 = new XTestCase_64_69();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<XTestCase_64_69Record> getRecordType() {
		return XTestCase_64_69Record.class;
	}

	/**
	 * The column <code>x_test_case_64_69.id</code>.
	 */
	public static final TableField<XTestCase_64_69Record, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), X_TEST_CASE_64_69, "");

	/**
	 * The column <code>x_test_case_64_69.unused_id</code>.
	 */
	public static final TableField<XTestCase_64_69Record, Integer> UNUSED_ID = createField("unused_id", org.jooq.impl.SQLDataType.INTEGER, X_TEST_CASE_64_69, "");

	/**
	 * No further instances allowed
	 */
	private XTestCase_64_69() {
		this("x_test_case_64_69", null);
	}

	private XTestCase_64_69(String alias, Table<XTestCase_64_69Record> aliased) {
		this(alias, aliased, null);
	}

	private XTestCase_64_69(String alias, Table<XTestCase_64_69Record> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<XTestCase_64_69Record> getPrimaryKey() {
		return Keys.X_TEST_CASE_64_69__PK_X_TEST_CASE_64_69;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<XTestCase_64_69Record>> getKeys() {
		return Arrays.<UniqueKey<XTestCase_64_69Record>>asList(Keys.X_TEST_CASE_64_69__PK_X_TEST_CASE_64_69);
	}
}
