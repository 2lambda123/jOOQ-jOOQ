/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle4.generatedclasses.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.oracle4.generatedclasses.Keys;
import org.jooq.test.oracle4.generatedclasses.Test;
import org.jooq.test.oracle4.generatedclasses.tables.records.TBookRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TBook extends TableImpl<TBookRecord> {

	private static final long serialVersionUID = -1413166388;

	/**
	 * The reference instance of <code>TEST.T_BOOK</code>
	 */
	public static final TBook T_BOOK = new TBook();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TBookRecord> getRecordType() {
		return TBookRecord.class;
	}

	/**
	 * The column <code>TEST.T_BOOK.ID</code>.
	 */
	public final TableField<TBookRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>TEST.T_BOOK.AUTHOR_ID</code>.
	 */
	public final TableField<TBookRecord, Integer> AUTHOR_ID = createField("AUTHOR_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>TEST.T_BOOK</code> table reference
	 */
	public TBook() {
		this("T_BOOK", null);
	}

	/**
	 * Create an aliased <code>TEST.T_BOOK</code> table reference
	 */
	public TBook(String alias) {
		this(alias, T_BOOK);
	}

	private TBook(String alias, Table<TBookRecord> aliased) {
		this(alias, aliased, null);
	}

	private TBook(String alias, Table<TBookRecord> aliased, Field<?>[] parameters) {
		super(alias, Test.TEST, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TBookRecord> getPrimaryKey() {
		return Keys.PK_T_BOOK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TBookRecord>> getKeys() {
		return Arrays.<UniqueKey<TBookRecord>>asList(Keys.PK_T_BOOK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<TBookRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<TBookRecord, ?>>asList(Keys.FK_T_BOOK_AUTHOR_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TBook as(String alias) {
		return new TBook(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TBook rename(String name) {
		return new TBook(name, null);
	}
}
