/**
 * This class is generated by jOOQ
 */
package org.jooq.test.h2.generatedclasses.public_.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.test.h2.generatedclasses.public_.tables.XTestCase_64_69;
import org.jooq.test.h2.generatedclasses.public_.tables.records.XTestCase_64_69Record;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XTestCase_64_69Dao extends DAOImpl<XTestCase_64_69Record, org.jooq.test.h2.generatedclasses.public_.tables.pojos.XTestCase_64_69, Integer> {

	/**
	 * Create a new XTestCase_64_69Dao without any configuration
	 */
	public XTestCase_64_69Dao() {
		super(XTestCase_64_69.X_TEST_CASE_64_69, org.jooq.test.h2.generatedclasses.public_.tables.pojos.XTestCase_64_69.class);
	}

	/**
	 * Create a new XTestCase_64_69Dao with an attached configuration
	 */
	public XTestCase_64_69Dao(Configuration configuration) {
		super(XTestCase_64_69.X_TEST_CASE_64_69, org.jooq.test.h2.generatedclasses.public_.tables.pojos.XTestCase_64_69.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(org.jooq.test.h2.generatedclasses.public_.tables.pojos.XTestCase_64_69 object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	public List<org.jooq.test.h2.generatedclasses.public_.tables.pojos.XTestCase_64_69> fetchById(Integer... values) {
		return fetch(XTestCase_64_69.X_TEST_CASE_64_69.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	public org.jooq.test.h2.generatedclasses.public_.tables.pojos.XTestCase_64_69 fetchOneById(Integer value) {
		return fetchOne(XTestCase_64_69.X_TEST_CASE_64_69.ID, value);
	}

	/**
	 * Fetch records that have <code>UNUSED_ID IN (values)</code>
	 */
	public List<org.jooq.test.h2.generatedclasses.public_.tables.pojos.XTestCase_64_69> fetchByUnusedId(Integer... values) {
		return fetch(XTestCase_64_69.X_TEST_CASE_64_69.UNUSED_ID, values);
	}
}
