/**
 * This class is generated by jOOQ
 */
package org.jooq.test.h2.generatedclasses;


import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;
import org.jooq.test.h2.generatedclasses.routines.F1256;
import org.jooq.test.h2.generatedclasses.routines.F317;
import org.jooq.test.h2.generatedclasses.routines.FArrays1;
import org.jooq.test.h2.generatedclasses.routines.FArrays2;
import org.jooq.test.h2.generatedclasses.routines.FArrays3;
import org.jooq.test.h2.generatedclasses.routines.FAuthorExists;
import org.jooq.test.h2.generatedclasses.routines.FGetOneCursor;
import org.jooq.test.h2.generatedclasses.routines.FNumber;
import org.jooq.test.h2.generatedclasses.routines.FOne;
import org.jooq.test.h2.generatedclasses.routines.PCreateAuthor;
import org.jooq.test.h2.generatedclasses.routines.PCreateAuthorByName;


/**
 * Convenience access to all stored procedures and functions in PUBLIC
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

	/**
	 * Call <code>PUBLIC.F1256</code>
	 */
	public static String f1256(Configuration configuration, String p0, String p1) {
		F1256 f = new F1256();
		f.setP0(p0);
		f.setP1(p1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>PUBLIC.F1256</code> as a field
	 */
	public static Field<String> f1256(String p0, String p1) {
		F1256 f = new F1256();
		f.setP0(p0);
		f.setP1(p1);

		return f.asField();
	}

	/**
	 * Get <code>PUBLIC.F1256</code> as a field
	 */
	public static Field<String> f1256(Field<String> p0, Field<String> p1) {
		F1256 f = new F1256();
		f.setP0(p0);
		f.setP1(p1);

		return f.asField();
	}

	/**
	 * Call <code>PUBLIC.F317</code>
	 */
	public static Integer f317(Configuration configuration, Integer p0, Integer p1, Integer p2, Integer p3, Integer p4) {
		F317 f = new F317();
		f.setP0(p0);
		f.setP1(p1);
		f.setP2(p2);
		f.setP3(p3);
		f.setP4(p4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>PUBLIC.F317</code> as a field
	 */
	public static Field<Integer> f317(Integer p0, Integer p1, Integer p2, Integer p3, Integer p4) {
		F317 f = new F317();
		f.setP0(p0);
		f.setP1(p1);
		f.setP2(p2);
		f.setP3(p3);
		f.setP4(p4);

		return f.asField();
	}

	/**
	 * Get <code>PUBLIC.F317</code> as a field
	 */
	public static Field<Integer> f317(Field<Integer> p0, Field<Integer> p1, Field<Integer> p2, Field<Integer> p3, Field<Integer> p4) {
		F317 f = new F317();
		f.setP0(p0);
		f.setP1(p1);
		f.setP2(p2);
		f.setP3(p3);
		f.setP4(p4);

		return f.asField();
	}

	/**
	 * Call <code>PUBLIC.F_ARRAYS1</code>
	 */
	public static Object[] fArrays1(Configuration configuration, Object[] p0, Object[] p1) {
		FArrays1 f = new FArrays1();
		f.setP0(p0);
		f.setP1(p1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>PUBLIC.F_ARRAYS1</code> as a field
	 */
	public static Field<Object[]> fArrays1(Object[] p0, Object[] p1) {
		FArrays1 f = new FArrays1();
		f.setP0(p0);
		f.setP1(p1);

		return f.asField();
	}

	/**
	 * Get <code>PUBLIC.F_ARRAYS1</code> as a field
	 */
	public static Field<Object[]> fArrays1(Field<Object[]> p0, Field<Object[]> p1) {
		FArrays1 f = new FArrays1();
		f.setP0(p0);
		f.setP1(p1);

		return f.asField();
	}

	/**
	 * Call <code>PUBLIC.F_ARRAYS2</code>
	 */
	public static Object[] fArrays2(Configuration configuration, Object[] p0, Object[] p1) {
		FArrays2 f = new FArrays2();
		f.setP0(p0);
		f.setP1(p1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>PUBLIC.F_ARRAYS2</code> as a field
	 */
	public static Field<Object[]> fArrays2(Object[] p0, Object[] p1) {
		FArrays2 f = new FArrays2();
		f.setP0(p0);
		f.setP1(p1);

		return f.asField();
	}

	/**
	 * Get <code>PUBLIC.F_ARRAYS2</code> as a field
	 */
	public static Field<Object[]> fArrays2(Field<Object[]> p0, Field<Object[]> p1) {
		FArrays2 f = new FArrays2();
		f.setP0(p0);
		f.setP1(p1);

		return f.asField();
	}

	/**
	 * Call <code>PUBLIC.F_ARRAYS3</code>
	 */
	public static Object[] fArrays3(Configuration configuration, Object[] p0, Object[] p1) {
		FArrays3 f = new FArrays3();
		f.setP0(p0);
		f.setP1(p1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>PUBLIC.F_ARRAYS3</code> as a field
	 */
	public static Field<Object[]> fArrays3(Object[] p0, Object[] p1) {
		FArrays3 f = new FArrays3();
		f.setP0(p0);
		f.setP1(p1);

		return f.asField();
	}

	/**
	 * Get <code>PUBLIC.F_ARRAYS3</code> as a field
	 */
	public static Field<Object[]> fArrays3(Field<Object[]> p0, Field<Object[]> p1) {
		FArrays3 f = new FArrays3();
		f.setP0(p0);
		f.setP1(p1);

		return f.asField();
	}

	/**
	 * Call <code>PUBLIC.F_AUTHOR_EXISTS</code>
	 */
	public static Integer fAuthorExists(Configuration configuration, Integer p0, String p2) {
		FAuthorExists f = new FAuthorExists();
		f.setP0(p0);
		f.setP2(p2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>PUBLIC.F_AUTHOR_EXISTS</code> as a field
	 */
	public static Field<Integer> fAuthorExists(Integer p0, String p2) {
		FAuthorExists f = new FAuthorExists();
		f.setP0(p0);
		f.setP2(p2);

		return f.asField();
	}

	/**
	 * Get <code>PUBLIC.F_AUTHOR_EXISTS</code> as a field
	 */
	public static Field<Integer> fAuthorExists(Field<Integer> p0, Field<String> p2) {
		FAuthorExists f = new FAuthorExists();
		f.setP0(p0);
		f.setP2(p2);

		return f.asField();
	}

	/**
	 * Call <code>PUBLIC.F_GET_ONE_CURSOR</code>
	 */
	public static Result<org.jooq.Record> fGetOneCursor(Configuration configuration, Result<org.jooq.Record> p0, Object[] p2) {
		FGetOneCursor f = new FGetOneCursor();
		f.setP0(p0);
		f.setP2(p2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>PUBLIC.F_GET_ONE_CURSOR</code> as a field
	 */
	public static Field<Result<org.jooq.Record>> fGetOneCursor(Result<org.jooq.Record> p0, Object[] p2) {
		FGetOneCursor f = new FGetOneCursor();
		f.setP0(p0);
		f.setP2(p2);

		return f.asField();
	}

	/**
	 * Get <code>PUBLIC.F_GET_ONE_CURSOR</code> as a field
	 */
	public static Field<Result<org.jooq.Record>> fGetOneCursor(Field<Result<org.jooq.Record>> p0, Field<Object[]> p2) {
		FGetOneCursor f = new FGetOneCursor();
		f.setP0(p0);
		f.setP2(p2);

		return f.asField();
	}

	/**
	 * Call <code>PUBLIC.F_NUMBER</code>
	 */
	public static Integer fNumber(Configuration configuration, Integer p0, Integer p1) {
		FNumber f = new FNumber();
		f.setP0(p0);
		f.setP1(p1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>PUBLIC.F_NUMBER</code> as a field
	 */
	public static Field<Integer> fNumber(Integer p0, Integer p1) {
		FNumber f = new FNumber();
		f.setP0(p0);
		f.setP1(p1);

		return f.asField();
	}

	/**
	 * Get <code>PUBLIC.F_NUMBER</code> as a field
	 */
	public static Field<Integer> fNumber(Field<Integer> p0, Field<Integer> p1) {
		FNumber f = new FNumber();
		f.setP0(p0);
		f.setP1(p1);

		return f.asField();
	}

	/**
	 * Call <code>PUBLIC.F_ONE</code>
	 */
	public static Integer fOne(Configuration configuration, Integer p0) {
		FOne f = new FOne();
		f.setP0(p0);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>PUBLIC.F_ONE</code> as a field
	 */
	public static Field<Integer> fOne(Integer p0) {
		FOne f = new FOne();
		f.setP0(p0);

		return f.asField();
	}

	/**
	 * Get <code>PUBLIC.F_ONE</code> as a field
	 */
	public static Field<Integer> fOne(Field<Integer> p0) {
		FOne f = new FOne();
		f.setP0(p0);

		return f.asField();
	}

	/**
	 * Call <code>PUBLIC.P_CREATE_AUTHOR</code>
	 */
	public static void pCreateAuthor(Configuration configuration) {
		PCreateAuthor p = new PCreateAuthor();

		p.execute(configuration);
	}

	/**
	 * Call <code>PUBLIC.P_CREATE_AUTHOR_BY_NAME</code>
	 */
	public static void pCreateAuthorByName(Configuration configuration, String p2, String p3) {
		PCreateAuthorByName p = new PCreateAuthorByName();
		p.setP2(p2);
		p.setP3(p3);

		p.execute(configuration);
	}
}
