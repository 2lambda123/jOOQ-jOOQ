/**
 * This class is generated by jOOQ
 */
package org.jooq.test.h2.generatedclasses.public_.tables;


import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.test.h2.generatedclasses.public_.Public;
import org.jooq.test.h2.generatedclasses.public_.tables.records.VWithDotsRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VWithDots extends TableImpl<VWithDotsRecord> {

	private static final long serialVersionUID = 672174219;

	/**
	 * The reference instance of <code>PUBLIC.v.with.dots</code>
	 */
	public static final VWithDots V_WITH_DOTS = new VWithDots();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<VWithDotsRecord> getRecordType() {
		return VWithDotsRecord.class;
	}

	/**
	 * The column <code>PUBLIC.v.with.dots.id.with.dots</code>.
	 */
	public final TableField<VWithDotsRecord, Integer> ID_WITH_DOTS = createField("id.with.dots", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>PUBLIC.v.with.dots</code> table reference
	 */
	public VWithDots() {
		this("v.with.dots", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.v.with.dots</code> table reference
	 */
	public VWithDots(String alias) {
		this(alias, V_WITH_DOTS);
	}

	private VWithDots(String alias, Table<VWithDotsRecord> aliased) {
		this(alias, aliased, null);
	}

	private VWithDots(String alias, Table<VWithDotsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public VWithDots as(String alias) {
		return new VWithDots(alias, this);
	}

	/**
	 * Rename this table
	 */
	public VWithDots rename(String name) {
		return new VWithDots(name, null);
	}
}
