/**
 * This class is generated by jOOQ
 */
package org.jooq.test.h2.generatedclasses.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.h2.generatedclasses.Keys;
import org.jooq.test.h2.generatedclasses.Public;
import org.jooq.test.h2.generatedclasses.tables.records.AccountsRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Accounts extends TableImpl<AccountsRecord> {

	private static final long serialVersionUID = 511829159;

	/**
	 * The reference instance of <code>PUBLIC.ACCOUNTS</code>
	 */
	public static final Accounts ACCOUNTS = new Accounts();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AccountsRecord> getRecordType() {
		return AccountsRecord.class;
	}

	/**
	 * The column <code>PUBLIC.ACCOUNTS.ID</code>.
	 */
	public final TableField<AccountsRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.ACCOUNTS.ACCOUNT_OWNER</code>.
	 */
	public final TableField<AccountsRecord, String> ACCOUNT_OWNER = createField("ACCOUNT_OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.ACCOUNTS.ACCOUNT_NAME</code>.
	 */
	public final TableField<AccountsRecord, String> ACCOUNT_NAME = createField("ACCOUNT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.ACCOUNTS.AMOUNT</code>.
	 */
	public final TableField<AccountsRecord, BigDecimal> AMOUNT = createField("AMOUNT", org.jooq.impl.SQLDataType.DECIMAL.precision(18, 2).nullable(false), this, "");

	/**
	 * Create a <code>PUBLIC.ACCOUNTS</code> table reference
	 */
	public Accounts() {
		this("ACCOUNTS", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.ACCOUNTS</code> table reference
	 */
	public Accounts(String alias) {
		this(alias, ACCOUNTS);
	}

	private Accounts(String alias, Table<AccountsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Accounts(String alias, Table<AccountsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AccountsRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_A;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AccountsRecord>> getKeys() {
		return Arrays.<UniqueKey<AccountsRecord>>asList(Keys.CONSTRAINT_A);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Accounts as(String alias) {
		return new Accounts(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Accounts rename(String name) {
		return new Accounts(name, null);
	}
}
