/**
 * This class is generated by jOOQ
 */
package org.jooq.test.h2.generatedclasses.public_.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.h2.generatedclasses.public_.Keys;
import org.jooq.test.h2.generatedclasses.public_.Public;
import org.jooq.test.h2.generatedclasses.public_.tables.records.TPerformanceJooqRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPerformanceJooq extends TableImpl<TPerformanceJooqRecord> {

	private static final long serialVersionUID = 951492960;

	/**
	 * The reference instance of <code>PUBLIC.T_PERFORMANCE_JOOQ</code>
	 */
	public static final TPerformanceJooq T_PERFORMANCE_JOOQ = new TPerformanceJooq();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TPerformanceJooqRecord> getRecordType() {
		return TPerformanceJooqRecord.class;
	}

	/**
	 * The column <code>PUBLIC.T_PERFORMANCE_JOOQ.ID</code>.
	 */
	public final TableField<TPerformanceJooqRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>PUBLIC.T_PERFORMANCE_JOOQ.VALUE_INT</code>.
	 */
	public final TableField<TPerformanceJooqRecord, Integer> VALUE_INT = createField("VALUE_INT", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>PUBLIC.T_PERFORMANCE_JOOQ.VALUE_STRING</code>.
	 */
	public final TableField<TPerformanceJooqRecord, String> VALUE_STRING = createField("VALUE_STRING", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * Create a <code>PUBLIC.T_PERFORMANCE_JOOQ</code> table reference
	 */
	public TPerformanceJooq() {
		this("T_PERFORMANCE_JOOQ", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.T_PERFORMANCE_JOOQ</code> table reference
	 */
	public TPerformanceJooq(String alias) {
		this(alias, T_PERFORMANCE_JOOQ);
	}

	private TPerformanceJooq(String alias, Table<TPerformanceJooqRecord> aliased) {
		this(alias, aliased, null);
	}

	private TPerformanceJooq(String alias, Table<TPerformanceJooqRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TPerformanceJooqRecord, Integer> getIdentity() {
		return Keys.IDENTITY_T_PERFORMANCE_JOOQ;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TPerformanceJooqRecord> getPrimaryKey() {
		return Keys.PK_T_PERFORMANCE_JOOQ_PK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TPerformanceJooqRecord>> getKeys() {
		return Arrays.<UniqueKey<TPerformanceJooqRecord>>asList(Keys.PK_T_PERFORMANCE_JOOQ_PK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TPerformanceJooq as(String alias) {
		return new TPerformanceJooq(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TPerformanceJooq rename(String name) {
		return new TPerformanceJooq(name, null);
	}
}
