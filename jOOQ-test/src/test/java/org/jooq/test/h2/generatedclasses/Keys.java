/**
 * This class is generated by jOOQ
 */
package org.jooq.test.h2.generatedclasses;


import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.jooq.test.h2.generatedclasses.tables.Accounts;
import org.jooq.test.h2.generatedclasses.tables.TArrays;
import org.jooq.test.h2.generatedclasses.tables.TAuthor;
import org.jooq.test.h2.generatedclasses.tables.TBook;
import org.jooq.test.h2.generatedclasses.tables.TBookStore;
import org.jooq.test.h2.generatedclasses.tables.TBookToBookStore;
import org.jooq.test.h2.generatedclasses.tables.TBooleans;
import org.jooq.test.h2.generatedclasses.tables.TDates;
import org.jooq.test.h2.generatedclasses.tables.TExoticTypes;
import org.jooq.test.h2.generatedclasses.tables.TIdentity;
import org.jooq.test.h2.generatedclasses.tables.TIdentityPk;
import org.jooq.test.h2.generatedclasses.tables.TLanguage;
import org.jooq.test.h2.generatedclasses.tables.TTriggers;
import org.jooq.test.h2.generatedclasses.tables.T_2327UkOnly;
import org.jooq.test.h2.generatedclasses.tables.T_2698;
import org.jooq.test.h2.generatedclasses.tables.T_2718;
import org.jooq.test.h2.generatedclasses.tables.T_3485;
import org.jooq.test.h2.generatedclasses.tables.T_3488AbcXyzEee;
import org.jooq.test.h2.generatedclasses.tables.T_639NumbersTable;
import org.jooq.test.h2.generatedclasses.tables.T_725LobTest;
import org.jooq.test.h2.generatedclasses.tables.T_877;
import org.jooq.test.h2.generatedclasses.tables.Transactions;
import org.jooq.test.h2.generatedclasses.tables.VAuthor;
import org.jooq.test.h2.generatedclasses.tables.VBook;
import org.jooq.test.h2.generatedclasses.tables.XTestCase_2025;
import org.jooq.test.h2.generatedclasses.tables.XTestCase_64_69;
import org.jooq.test.h2.generatedclasses.tables.XTestCase_71;
import org.jooq.test.h2.generatedclasses.tables.XTestCase_85;
import org.jooq.test.h2.generatedclasses.tables.XUnused;
import org.jooq.test.h2.generatedclasses.tables.records.AccountsRecord;
import org.jooq.test.h2.generatedclasses.tables.records.TArraysRecord;
import org.jooq.test.h2.generatedclasses.tables.records.TAuthorRecord;
import org.jooq.test.h2.generatedclasses.tables.records.TBookRecord;
import org.jooq.test.h2.generatedclasses.tables.records.TBookStoreRecord;
import org.jooq.test.h2.generatedclasses.tables.records.TBookToBookStoreRecord;
import org.jooq.test.h2.generatedclasses.tables.records.TBooleansRecord;
import org.jooq.test.h2.generatedclasses.tables.records.TDatesRecord;
import org.jooq.test.h2.generatedclasses.tables.records.TExoticTypesRecord;
import org.jooq.test.h2.generatedclasses.tables.records.TIdentityPkRecord;
import org.jooq.test.h2.generatedclasses.tables.records.TIdentityRecord;
import org.jooq.test.h2.generatedclasses.tables.records.TLanguageRecord;
import org.jooq.test.h2.generatedclasses.tables.records.TTriggersRecord;
import org.jooq.test.h2.generatedclasses.tables.records.T_2327UkOnlyRecord;
import org.jooq.test.h2.generatedclasses.tables.records.T_2698Record;
import org.jooq.test.h2.generatedclasses.tables.records.T_2718Record;
import org.jooq.test.h2.generatedclasses.tables.records.T_3485Record;
import org.jooq.test.h2.generatedclasses.tables.records.T_3488AbcXyzEeeRecord;
import org.jooq.test.h2.generatedclasses.tables.records.T_639NumbersTableRecord;
import org.jooq.test.h2.generatedclasses.tables.records.T_725LobTestRecord;
import org.jooq.test.h2.generatedclasses.tables.records.T_877Record;
import org.jooq.test.h2.generatedclasses.tables.records.TransactionsRecord;
import org.jooq.test.h2.generatedclasses.tables.records.VAuthorRecord;
import org.jooq.test.h2.generatedclasses.tables.records.VBookRecord;
import org.jooq.test.h2.generatedclasses.tables.records.XTestCase_2025Record;
import org.jooq.test.h2.generatedclasses.tables.records.XTestCase_64_69Record;
import org.jooq.test.h2.generatedclasses.tables.records.XTestCase_71Record;
import org.jooq.test.h2.generatedclasses.tables.records.XTestCase_85Record;
import org.jooq.test.h2.generatedclasses.tables.records.XUnusedRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>PUBLIC</code> 
 * schema
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<TIdentityPkRecord, Integer> IDENTITY_T_IDENTITY_PK = Identities0.IDENTITY_T_IDENTITY_PK;
	public static final Identity<TIdentityRecord, Integer> IDENTITY_T_IDENTITY = Identities0.IDENTITY_T_IDENTITY;
	public static final Identity<TTriggersRecord, Integer> IDENTITY_T_TRIGGERS = Identities0.IDENTITY_T_TRIGGERS;
	public static final Identity<T_877Record, Integer> IDENTITY_T_877 = Identities0.IDENTITY_T_877;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<T_3485Record> PK_T_3485 = UniqueKeys0.PK_T_3485;
	public static final UniqueKey<T_2327UkOnlyRecord> UK_T_2327_UK_ONLY = UniqueKeys0.UK_T_2327_UK_ONLY;
	public static final UniqueKey<TIdentityPkRecord> PK_T_IDENTITY_PK = UniqueKeys0.PK_T_IDENTITY_PK;
	public static final UniqueKey<TDatesRecord> PK_T_DATES = UniqueKeys0.PK_T_DATES;
	public static final UniqueKey<TBooleansRecord> PK_T_BOOLEANS = UniqueKeys0.PK_T_BOOLEANS;
	public static final UniqueKey<TTriggersRecord> PK_T_TRIGGERS = UniqueKeys0.PK_T_TRIGGERS;
	public static final UniqueKey<TLanguageRecord> PK_T_LANGUAGE = UniqueKeys0.PK_T_LANGUAGE;
	public static final UniqueKey<T_725LobTestRecord> PK_T_725_LOB_TEST = UniqueKeys0.PK_T_725_LOB_TEST;
	public static final UniqueKey<T_2698Record> PK_T_2698 = UniqueKeys0.PK_T_2698;
	public static final UniqueKey<T_2718Record> PK_T_2718 = UniqueKeys0.PK_T_2718;
	public static final UniqueKey<T_3488AbcXyzEeeRecord> PK_T_3488_1 = UniqueKeys0.PK_T_3488_1;
	public static final UniqueKey<TAuthorRecord> PK_T_AUTHOR = UniqueKeys0.PK_T_AUTHOR;
	public static final UniqueKey<TBookRecord> PK_T_BOOK = UniqueKeys0.PK_T_BOOK;
	public static final UniqueKey<TBookStoreRecord> UK_T_BOOK_STORE_NAME = UniqueKeys0.UK_T_BOOK_STORE_NAME;
	public static final UniqueKey<TBookToBookStoreRecord> PK_B2BS = UniqueKeys0.PK_B2BS;
	public static final UniqueKey<TArraysRecord> PK_T_ARRAYS = UniqueKeys0.PK_T_ARRAYS;
	public static final UniqueKey<XUnusedRecord> PK_X_UNUSED = UniqueKeys0.PK_X_UNUSED;
	public static final UniqueKey<XUnusedRecord> UK_X_UNUSED_ID = UniqueKeys0.UK_X_UNUSED_ID;
	public static final UniqueKey<TExoticTypesRecord> PK_T_EXOTIC_TYPES = UniqueKeys0.PK_T_EXOTIC_TYPES;
	public static final UniqueKey<T_639NumbersTableRecord> PK_T_639_NUMBERS_TABLE = UniqueKeys0.PK_T_639_NUMBERS_TABLE;
	public static final UniqueKey<XTestCase_64_69Record> PK_X_TEST_CASE_64_69 = UniqueKeys0.PK_X_TEST_CASE_64_69;
	public static final UniqueKey<XTestCase_71Record> PK_X_TEST_CASE_71 = UniqueKeys0.PK_X_TEST_CASE_71;
	public static final UniqueKey<XTestCase_85Record> PK_X_TEST_CASE_85 = UniqueKeys0.PK_X_TEST_CASE_85;
	public static final UniqueKey<VAuthorRecord> SYNTHETIC_PK_V_AUTHOR = UniqueKeys0.SYNTHETIC_PK_V_AUTHOR;
	public static final UniqueKey<VBookRecord> SYNTHETIC_PK_V_BOOK = UniqueKeys0.SYNTHETIC_PK_V_BOOK;
	public static final UniqueKey<AccountsRecord> CONSTRAINT_A = UniqueKeys0.CONSTRAINT_A;
	public static final UniqueKey<TransactionsRecord> CONSTRAINT_F = UniqueKeys0.CONSTRAINT_F;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<TBookRecord, TAuthorRecord> FK_T_BOOK_AUTHOR_ID = ForeignKeys0.FK_T_BOOK_AUTHOR_ID;
	public static final ForeignKey<TBookRecord, TAuthorRecord> FK_T_BOOK_CO_AUTHOR_ID = ForeignKeys0.FK_T_BOOK_CO_AUTHOR_ID;
	public static final ForeignKey<TBookRecord, TLanguageRecord> FK_T_BOOK_LANGUAGE_ID = ForeignKeys0.FK_T_BOOK_LANGUAGE_ID;
	public static final ForeignKey<TBookToBookStoreRecord, TBookStoreRecord> FK_B2BS_BS_NAME = ForeignKeys0.FK_B2BS_BS_NAME;
	public static final ForeignKey<TBookToBookStoreRecord, TBookRecord> FK_B2BS_B_ID = ForeignKeys0.FK_B2BS_B_ID;
	public static final ForeignKey<XUnusedRecord, XUnusedRecord> FK_X_UNUSED_SELF = ForeignKeys0.FK_X_UNUSED_SELF;
	public static final ForeignKey<XTestCase_64_69Record, XUnusedRecord> FK_X_TEST_CASE_64_69A = ForeignKeys0.FK_X_TEST_CASE_64_69A;
	public static final ForeignKey<XTestCase_64_69Record, XUnusedRecord> FK_X_TEST_CASE_64_69B = ForeignKeys0.FK_X_TEST_CASE_64_69B;
	public static final ForeignKey<XTestCase_71Record, XTestCase_64_69Record> FK_X_TEST_CASE_71 = ForeignKeys0.FK_X_TEST_CASE_71;
	public static final ForeignKey<XTestCase_85Record, XUnusedRecord> FK_X_TEST_CASE_85 = ForeignKeys0.FK_X_TEST_CASE_85;
	public static final ForeignKey<XTestCase_2025Record, XTestCase_85Record> FK_X_TEST_CASE_2025_1 = ForeignKeys0.FK_X_TEST_CASE_2025_1;
	public static final ForeignKey<XTestCase_2025Record, XTestCase_71Record> FK_X_TEST_CASE_2025_2 = ForeignKeys0.FK_X_TEST_CASE_2025_2;
	public static final ForeignKey<XTestCase_2025Record, XUnusedRecord> FK_X_TEST_CASE_2025_3 = ForeignKeys0.FK_X_TEST_CASE_2025_3;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<TIdentityPkRecord, Integer> IDENTITY_T_IDENTITY_PK = createIdentity(TIdentityPk.T_IDENTITY_PK, TIdentityPk.T_IDENTITY_PK.ID);
		public static Identity<TIdentityRecord, Integer> IDENTITY_T_IDENTITY = createIdentity(TIdentity.T_IDENTITY, TIdentity.T_IDENTITY.ID);
		public static Identity<TTriggersRecord, Integer> IDENTITY_T_TRIGGERS = createIdentity(TTriggers.T_TRIGGERS, TTriggers.T_TRIGGERS.ID_GENERATED);
		public static Identity<T_877Record, Integer> IDENTITY_T_877 = createIdentity(T_877.T_877, T_877.T_877.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<T_3485Record> PK_T_3485 = createUniqueKey(T_3485.T_3485, T_3485.T_3485.ID);
		public static final UniqueKey<T_2327UkOnlyRecord> UK_T_2327_UK_ONLY = createUniqueKey(T_2327UkOnly.T_2327_UK_ONLY, T_2327UkOnly.T_2327_UK_ONLY.ID);
		public static final UniqueKey<TIdentityPkRecord> PK_T_IDENTITY_PK = createUniqueKey(TIdentityPk.T_IDENTITY_PK, TIdentityPk.T_IDENTITY_PK.ID);
		public static final UniqueKey<TDatesRecord> PK_T_DATES = createUniqueKey(TDates.T_DATES, TDates.T_DATES.ID);
		public static final UniqueKey<TBooleansRecord> PK_T_BOOLEANS = createUniqueKey(TBooleans.T_BOOLEANS, TBooleans.T_BOOLEANS.ID);
		public static final UniqueKey<TTriggersRecord> PK_T_TRIGGERS = createUniqueKey(TTriggers.T_TRIGGERS, TTriggers.T_TRIGGERS.ID_GENERATED);
		public static final UniqueKey<TLanguageRecord> PK_T_LANGUAGE = createUniqueKey(TLanguage.T_LANGUAGE, TLanguage.T_LANGUAGE.ID);
		public static final UniqueKey<T_725LobTestRecord> PK_T_725_LOB_TEST = createUniqueKey(T_725LobTest.T_725_LOB_TEST, T_725LobTest.T_725_LOB_TEST.ID);
		public static final UniqueKey<T_2698Record> PK_T_2698 = createUniqueKey(T_2698.T_2698, T_2698.T_2698.ID);
		public static final UniqueKey<T_2718Record> PK_T_2718 = createUniqueKey(T_2718.T_2718, T_2718.T_2718.EXCLUDE_ME);
		public static final UniqueKey<T_3488AbcXyzEeeRecord> PK_T_3488_1 = createUniqueKey(T_3488AbcXyzEee.T_3488_ABC_XYZ_EEE, T_3488AbcXyzEee.T_3488_ABC_XYZ_EEE.ID);
		public static final UniqueKey<TAuthorRecord> PK_T_AUTHOR = createUniqueKey(TAuthor.T_AUTHOR, TAuthor.T_AUTHOR.ID);
		public static final UniqueKey<TBookRecord> PK_T_BOOK = createUniqueKey(TBook.T_BOOK, TBook.T_BOOK.ID);
		public static final UniqueKey<TBookStoreRecord> UK_T_BOOK_STORE_NAME = createUniqueKey(TBookStore.T_BOOK_STORE, TBookStore.T_BOOK_STORE.NAME);
		public static final UniqueKey<TBookToBookStoreRecord> PK_B2BS = createUniqueKey(TBookToBookStore.T_BOOK_TO_BOOK_STORE, TBookToBookStore.T_BOOK_TO_BOOK_STORE.BOOK_STORE_NAME, TBookToBookStore.T_BOOK_TO_BOOK_STORE.BOOK_ID);
		public static final UniqueKey<TArraysRecord> PK_T_ARRAYS = createUniqueKey(TArrays.T_ARRAYS, TArrays.T_ARRAYS.ID);
		public static final UniqueKey<XUnusedRecord> PK_X_UNUSED = createUniqueKey(XUnused.X_UNUSED, XUnused.X_UNUSED.ID, XUnused.X_UNUSED.NAME);
		public static final UniqueKey<XUnusedRecord> UK_X_UNUSED_ID = createUniqueKey(XUnused.X_UNUSED, XUnused.X_UNUSED.ID);
		public static final UniqueKey<TExoticTypesRecord> PK_T_EXOTIC_TYPES = createUniqueKey(TExoticTypes.T_EXOTIC_TYPES, TExoticTypes.T_EXOTIC_TYPES.ID);
		public static final UniqueKey<T_639NumbersTableRecord> PK_T_639_NUMBERS_TABLE = createUniqueKey(T_639NumbersTable.T_639_NUMBERS_TABLE, T_639NumbersTable.T_639_NUMBERS_TABLE.ID);
		public static final UniqueKey<XTestCase_64_69Record> PK_X_TEST_CASE_64_69 = createUniqueKey(XTestCase_64_69.X_TEST_CASE_64_69, XTestCase_64_69.X_TEST_CASE_64_69.ID);
		public static final UniqueKey<XTestCase_71Record> PK_X_TEST_CASE_71 = createUniqueKey(XTestCase_71.X_TEST_CASE_71, XTestCase_71.X_TEST_CASE_71.ID);
		public static final UniqueKey<XTestCase_85Record> PK_X_TEST_CASE_85 = createUniqueKey(XTestCase_85.X_TEST_CASE_85, XTestCase_85.X_TEST_CASE_85.ID);
		public static final UniqueKey<VAuthorRecord> SYNTHETIC_PK_V_AUTHOR = createUniqueKey(VAuthor.V_AUTHOR, VAuthor.V_AUTHOR.ID);
		public static final UniqueKey<VBookRecord> SYNTHETIC_PK_V_BOOK = createUniqueKey(VBook.V_BOOK, VBook.V_BOOK.ID);
		public static final UniqueKey<AccountsRecord> CONSTRAINT_A = createUniqueKey(Accounts.ACCOUNTS, Accounts.ACCOUNTS.ID);
		public static final UniqueKey<TransactionsRecord> CONSTRAINT_F = createUniqueKey(Transactions.TRANSACTIONS, Transactions.TRANSACTIONS.ID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<TBookRecord, TAuthorRecord> FK_T_BOOK_AUTHOR_ID = createForeignKey(org.jooq.test.h2.generatedclasses.Keys.PK_T_AUTHOR, TBook.T_BOOK, TBook.T_BOOK.AUTHOR_ID);
		public static final ForeignKey<TBookRecord, TAuthorRecord> FK_T_BOOK_CO_AUTHOR_ID = createForeignKey(org.jooq.test.h2.generatedclasses.Keys.PK_T_AUTHOR, TBook.T_BOOK, TBook.T_BOOK.CO_AUTHOR_ID);
		public static final ForeignKey<TBookRecord, TLanguageRecord> FK_T_BOOK_LANGUAGE_ID = createForeignKey(org.jooq.test.h2.generatedclasses.Keys.PK_T_LANGUAGE, TBook.T_BOOK, TBook.T_BOOK.LANGUAGE_ID);
		public static final ForeignKey<TBookToBookStoreRecord, TBookStoreRecord> FK_B2BS_BS_NAME = createForeignKey(org.jooq.test.h2.generatedclasses.Keys.UK_T_BOOK_STORE_NAME, TBookToBookStore.T_BOOK_TO_BOOK_STORE, TBookToBookStore.T_BOOK_TO_BOOK_STORE.BOOK_STORE_NAME);
		public static final ForeignKey<TBookToBookStoreRecord, TBookRecord> FK_B2BS_B_ID = createForeignKey(org.jooq.test.h2.generatedclasses.Keys.PK_T_BOOK, TBookToBookStore.T_BOOK_TO_BOOK_STORE, TBookToBookStore.T_BOOK_TO_BOOK_STORE.BOOK_ID);
		public static final ForeignKey<XUnusedRecord, XUnusedRecord> FK_X_UNUSED_SELF = createForeignKey(org.jooq.test.h2.generatedclasses.Keys.PK_X_UNUSED, XUnused.X_UNUSED, XUnused.X_UNUSED.ID_REF, XUnused.X_UNUSED.NAME_REF);
		public static final ForeignKey<XTestCase_64_69Record, XUnusedRecord> FK_X_TEST_CASE_64_69A = createForeignKey(org.jooq.test.h2.generatedclasses.Keys.UK_X_UNUSED_ID, XTestCase_64_69.X_TEST_CASE_64_69, XTestCase_64_69.X_TEST_CASE_64_69.UNUSED_ID);
		public static final ForeignKey<XTestCase_64_69Record, XUnusedRecord> FK_X_TEST_CASE_64_69B = createForeignKey(org.jooq.test.h2.generatedclasses.Keys.UK_X_UNUSED_ID, XTestCase_64_69.X_TEST_CASE_64_69, XTestCase_64_69.X_TEST_CASE_64_69.UNUSED_ID);
		public static final ForeignKey<XTestCase_71Record, XTestCase_64_69Record> FK_X_TEST_CASE_71 = createForeignKey(org.jooq.test.h2.generatedclasses.Keys.PK_X_TEST_CASE_64_69, XTestCase_71.X_TEST_CASE_71, XTestCase_71.X_TEST_CASE_71.TEST_CASE_64_69_ID);
		public static final ForeignKey<XTestCase_85Record, XUnusedRecord> FK_X_TEST_CASE_85 = createForeignKey(org.jooq.test.h2.generatedclasses.Keys.PK_X_UNUSED, XTestCase_85.X_TEST_CASE_85, XTestCase_85.X_TEST_CASE_85.X_UNUSED_ID, XTestCase_85.X_TEST_CASE_85.X_UNUSED_NAME);
		public static final ForeignKey<XTestCase_2025Record, XTestCase_85Record> FK_X_TEST_CASE_2025_1 = createForeignKey(org.jooq.test.h2.generatedclasses.Keys.PK_X_TEST_CASE_85, XTestCase_2025.X_TEST_CASE_2025, XTestCase_2025.X_TEST_CASE_2025.REF_ID);
		public static final ForeignKey<XTestCase_2025Record, XTestCase_71Record> FK_X_TEST_CASE_2025_2 = createForeignKey(org.jooq.test.h2.generatedclasses.Keys.PK_X_TEST_CASE_71, XTestCase_2025.X_TEST_CASE_2025, XTestCase_2025.X_TEST_CASE_2025.REF_ID);
		public static final ForeignKey<XTestCase_2025Record, XUnusedRecord> FK_X_TEST_CASE_2025_3 = createForeignKey(org.jooq.test.h2.generatedclasses.Keys.PK_X_UNUSED, XTestCase_2025.X_TEST_CASE_2025, XTestCase_2025.X_TEST_CASE_2025.REF_ID, XTestCase_2025.X_TEST_CASE_2025.REF_NAME);
	}
}
