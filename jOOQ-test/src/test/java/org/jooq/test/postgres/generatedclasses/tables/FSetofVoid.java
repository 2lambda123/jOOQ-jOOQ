/**
 * This class is generated by jOOQ
 */
package org.jooq.test.postgres.generatedclasses.tables;


import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.test.postgres.generatedclasses.Public;
import org.jooq.test.postgres.generatedclasses.tables.records.FSetofVoidRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FSetofVoid extends TableImpl<FSetofVoidRecord> {

	private static final long serialVersionUID = -285802868;

	/**
	 * The reference instance of <code>public.f_setof_void</code>
	 */
	public static final FSetofVoid F_SETOF_VOID = new FSetofVoid();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FSetofVoidRecord> getRecordType() {
		return FSetofVoidRecord.class;
	}

	/**
	 * The column <code>public.f_setof_void.f_setof_void</code>.
	 */
	public final TableField<FSetofVoidRecord, Object> F_SETOF_VOID_ = createField("f_setof_void", org.jooq.impl.SQLDataType.OTHER, this, "");

	/**
	 * Create a <code>public.f_setof_void</code> table reference
	 */
	public FSetofVoid() {
		this("f_setof_void", null);
	}

	/**
	 * Create an aliased <code>public.f_setof_void</code> table reference
	 */
	public FSetofVoid(String alias) {
		this(alias, F_SETOF_VOID);
	}

	private FSetofVoid(String alias, Table<FSetofVoidRecord> aliased) {
		this(alias, aliased, new Field[1]);
	}

	private FSetofVoid(String alias, Table<FSetofVoidRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FSetofVoid as(String alias) {
		return new FSetofVoid(alias, this, parameters);
	}

	/**
	 * Rename this table
	 */
	public FSetofVoid rename(String name) {
		return new FSetofVoid(name, null, parameters);
	}

	/**
	 * Call this table-valued function
	 */
	public FSetofVoid call(Long arg) {
		return new FSetofVoid(getName(), null, new Field[] { DSL.val(arg) });
	}

	/**
	 * Call this table-valued function
	 */
	public FSetofVoid call(Field<Long> arg) {
		return new FSetofVoid(getName(), null, new Field[] { arg });
	}
}
