/**
 * This class is generated by jOOQ
 */
package org.jooq.test.postgres.generatedclasses.tables;


import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.test.postgres.generatedclasses.Public;
import org.jooq.test.postgres.generatedclasses.tables.records.FArrayTablesRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FArrayTables extends TableImpl<FArrayTablesRecord> {

	private static final long serialVersionUID = 2052805467;

	/**
	 * The reference instance of <code>public.f_array_tables</code>
	 */
	public static final FArrayTables F_ARRAY_TABLES = new FArrayTables();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FArrayTablesRecord> getRecordType() {
		return FArrayTablesRecord.class;
	}

	/**
	 * The column <code>public.f_array_tables.out_text</code>.
	 */
	public final TableField<FArrayTablesRecord, String[]> OUT_TEXT = createField("out_text", org.jooq.impl.SQLDataType.CLOB.getArrayDataType(), this, "");

	/**
	 * The column <code>public.f_array_tables.out_integer</code>.
	 */
	public final TableField<FArrayTablesRecord, Integer[]> OUT_INTEGER = createField("out_integer", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "");

	/**
	 * Create a <code>public.f_array_tables</code> table reference
	 */
	public FArrayTables() {
		this("f_array_tables", null);
	}

	/**
	 * Create an aliased <code>public.f_array_tables</code> table reference
	 */
	public FArrayTables(String alias) {
		this(alias, F_ARRAY_TABLES);
	}

	private FArrayTables(String alias, Table<FArrayTablesRecord> aliased) {
		this(alias, aliased, new Field[2]);
	}

	private FArrayTables(String alias, Table<FArrayTablesRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FArrayTables as(String alias) {
		return new FArrayTables(alias, this, parameters);
	}

	/**
	 * Rename this table
	 */
	public FArrayTables rename(String name) {
		return new FArrayTables(name, null, parameters);
	}

	/**
	 * Call this table-valued function
	 */
	public FArrayTables call(String[] inText, Integer[] inInteger) {
		return new FArrayTables(getName(), null, new Field[] { DSL.val(inText), DSL.val(inInteger) });
	}

	/**
	 * Call this table-valued function
	 */
	public FArrayTables call(Field<String[]> inText, Field<Integer[]> inInteger) {
		return new FArrayTables(getName(), null, new Field[] { inText, inInteger });
	}
}
