/**
 * This class is generated by jOOQ
 */
package org.jooq.test.postgres.generatedclasses.tables;


import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.test.postgres.generatedclasses.Public;
import org.jooq.test.postgres.generatedclasses.tables.records.TInheritanceAllRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TInheritanceAll extends TableImpl<TInheritanceAllRecord> {

	private static final long serialVersionUID = 707780714;

	/**
	 * The reference instance of <code>public.t_inheritance_all</code>
	 */
	public static final TInheritanceAll T_INHERITANCE_ALL = new TInheritanceAll();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TInheritanceAllRecord> getRecordType() {
		return TInheritanceAllRecord.class;
	}

	/**
	 * The column <code>public.t_inheritance_all.text_1</code>.
	 */
	public final TableField<TInheritanceAllRecord, String> TEXT_1 = createField("text_1", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.t_inheritance_all.text_1_1</code>.
	 */
	public final TableField<TInheritanceAllRecord, String> TEXT_1_1 = createField("text_1_1", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.t_inheritance_all.text_1_2</code>.
	 */
	public final TableField<TInheritanceAllRecord, String> TEXT_1_2 = createField("text_1_2", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.t_inheritance_all.text_1_all</code>.
	 */
	public final TableField<TInheritanceAllRecord, String> TEXT_1_ALL = createField("text_1_all", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>public.t_inheritance_all</code> table reference
	 */
	public TInheritanceAll() {
		this("t_inheritance_all", null);
	}

	/**
	 * Create an aliased <code>public.t_inheritance_all</code> table reference
	 */
	public TInheritanceAll(String alias) {
		this(alias, T_INHERITANCE_ALL);
	}

	private TInheritanceAll(String alias, Table<TInheritanceAllRecord> aliased) {
		this(alias, aliased, null);
	}

	private TInheritanceAll(String alias, Table<TInheritanceAllRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TInheritanceAll as(String alias) {
		return new TInheritanceAll(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TInheritanceAll rename(String name) {
		return new TInheritanceAll(name, null);
	}
}
