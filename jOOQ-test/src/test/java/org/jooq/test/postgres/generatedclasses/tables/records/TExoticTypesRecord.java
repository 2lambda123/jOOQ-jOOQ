/**
 * This class is generated by jOOQ
 */
package org.jooq.test.postgres.generatedclasses.tables.records;


import com.google.gson.JsonElement;

import java.util.Map;
import java.util.UUID;

import org.codehaus.jackson.JsonNode;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.lambda.tuple.Range;
import org.jooq.test.all.types.JSONJacksonHelloWorld;
import org.jooq.test.postgres.generatedclasses.tables.TExoticTypes;
import org.jooq.test.postgres.generatedclasses.tables.interfaces.ITExoticTypes;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TExoticTypesRecord extends UpdatableRecordImpl<TExoticTypesRecord> implements Record13<Integer, UUID, Object, JsonElement, Object, JSONJacksonHelloWorld, JsonNode, Object, Map<String, String>, Range<Integer>, Object, Object, Object>, ITExoticTypes {

	private static final long serialVersionUID = 1714331434;

	/**
	 * Setter for <code>public.t_exotic_types.id</code>.
	 */
	public TExoticTypesRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.t_exotic_types.id</code>.
	 */
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.t_exotic_types.uu</code>.
	 */
	public TExoticTypesRecord setUu(UUID value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.t_exotic_types.uu</code>.
	 */
	@Override
	public UUID getUu() {
		return (UUID) getValue(1);
	}

	/**
	 * Setter for <code>public.t_exotic_types.js</code>.
	 */
	public TExoticTypesRecord setJs(Object value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.t_exotic_types.js</code>.
	 */
	@Override
	public Object getJs() {
		return (Object) getValue(2);
	}

	/**
	 * Setter for <code>public.t_exotic_types.js_gson</code>.
	 */
	public TExoticTypesRecord setJsGson(JsonElement value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>public.t_exotic_types.js_gson</code>.
	 */
	@Override
	public JsonElement getJsGson() {
		return (JsonElement) getValue(3);
	}

	/**
	 * Setter for <code>public.t_exotic_types.js_javax</code>.
	 */
	public TExoticTypesRecord setJsJavax(Object value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>public.t_exotic_types.js_javax</code>.
	 */
	@Override
	public Object getJsJavax() {
		return (Object) getValue(4);
	}

	/**
	 * Setter for <code>public.t_exotic_types.js_jackson</code>.
	 */
	public TExoticTypesRecord setJsJackson(JSONJacksonHelloWorld value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>public.t_exotic_types.js_jackson</code>.
	 */
	@Override
	public JSONJacksonHelloWorld getJsJackson() {
		return (JSONJacksonHelloWorld) getValue(5);
	}

	/**
	 * Setter for <code>public.t_exotic_types.js_jackson_json_node</code>.
	 */
	public TExoticTypesRecord setJsJacksonJsonNode(JsonNode value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>public.t_exotic_types.js_jackson_json_node</code>.
	 */
	@Override
	public JsonNode getJsJacksonJsonNode() {
		return (JsonNode) getValue(6);
	}

	/**
	 * Setter for <code>public.t_exotic_types.hstore</code>.
	 */
	public TExoticTypesRecord setHstore(Object value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>public.t_exotic_types.hstore</code>.
	 */
	@Override
	public Object getHstore() {
		return (Object) getValue(7);
	}

	/**
	 * Setter for <code>public.t_exotic_types.hstore_map</code>.
	 */
	public TExoticTypesRecord setHstoreMap(Map<String, String> value) {
		setValue(8, value);
		return this;
	}

	/**
	 * Getter for <code>public.t_exotic_types.hstore_map</code>.
	 */
	@Override
	public Map<String, String> getHstoreMap() {
		return (Map<String, String>) getValue(8);
	}

	/**
	 * Setter for <code>public.t_exotic_types.range_int4</code>.
	 */
	public TExoticTypesRecord setRangeInt4(Range<Integer> value) {
		setValue(9, value);
		return this;
	}

	/**
	 * Getter for <code>public.t_exotic_types.range_int4</code>.
	 */
	@Override
	public Range<Integer> getRangeInt4() {
		return (Range<Integer>) getValue(9);
	}

	/**
	 * Setter for <code>public.t_exotic_types.range_int8</code>.
	 */
	public TExoticTypesRecord setRangeInt8(Object value) {
		setValue(10, value);
		return this;
	}

	/**
	 * Getter for <code>public.t_exotic_types.range_int8</code>.
	 */
	@Override
	public Object getRangeInt8() {
		return (Object) getValue(10);
	}

	/**
	 * Setter for <code>public.t_exotic_types.pg_xml_as_is</code>.
	 */
	public TExoticTypesRecord setPgXmlAsIs(Object value) {
		setValue(11, value);
		return this;
	}

	/**
	 * Getter for <code>public.t_exotic_types.pg_xml_as_is</code>.
	 */
	@Override
	public Object getPgXmlAsIs() {
		return (Object) getValue(11);
	}

	/**
	 * Setter for <code>public.t_exotic_types.pg_xml_as_document</code>.
	 */
	public TExoticTypesRecord setPgXmlAsDocument(Object value) {
		setValue(12, value);
		return this;
	}

	/**
	 * Getter for <code>public.t_exotic_types.pg_xml_as_document</code>.
	 */
	@Override
	public Object getPgXmlAsDocument() {
		return (Object) getValue(12);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record13 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row13<Integer, UUID, Object, JsonElement, Object, JSONJacksonHelloWorld, JsonNode, Object, Map<String, String>, Range<Integer>, Object, Object, Object> fieldsRow() {
		return (Row13) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row13<Integer, UUID, Object, JsonElement, Object, JSONJacksonHelloWorld, JsonNode, Object, Map<String, String>, Range<Integer>, Object, Object, Object> valuesRow() {
		return (Row13) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return TExoticTypes.T_EXOTIC_TYPES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field2() {
		return TExoticTypes.T_EXOTIC_TYPES.UU;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Object> field3() {
		return TExoticTypes.T_EXOTIC_TYPES.JS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<JsonElement> field4() {
		return TExoticTypes.T_EXOTIC_TYPES.JS_GSON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Object> field5() {
		return TExoticTypes.T_EXOTIC_TYPES.JS_JAVAX;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<JSONJacksonHelloWorld> field6() {
		return TExoticTypes.T_EXOTIC_TYPES.JS_JACKSON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<JsonNode> field7() {
		return TExoticTypes.T_EXOTIC_TYPES.JS_JACKSON_JSON_NODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Object> field8() {
		return TExoticTypes.T_EXOTIC_TYPES.HSTORE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Map<String, String>> field9() {
		return TExoticTypes.T_EXOTIC_TYPES.HSTORE_MAP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Range<Integer>> field10() {
		return TExoticTypes.T_EXOTIC_TYPES.RANGE_INT4;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Object> field11() {
		return TExoticTypes.T_EXOTIC_TYPES.RANGE_INT8;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Object> field12() {
		return TExoticTypes.T_EXOTIC_TYPES.PG_XML_AS_IS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Object> field13() {
		return TExoticTypes.T_EXOTIC_TYPES.PG_XML_AS_DOCUMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value2() {
		return getUu();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object value3() {
		return getJs();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JsonElement value4() {
		return getJsGson();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object value5() {
		return getJsJavax();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JSONJacksonHelloWorld value6() {
		return getJsJackson();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JsonNode value7() {
		return getJsJacksonJsonNode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object value8() {
		return getHstore();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Map<String, String> value9() {
		return getHstoreMap();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Range<Integer> value10() {
		return getRangeInt4();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object value11() {
		return getRangeInt8();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object value12() {
		return getPgXmlAsIs();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object value13() {
		return getPgXmlAsDocument();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord value2(UUID value) {
		setUu(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord value3(Object value) {
		setJs(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord value4(JsonElement value) {
		setJsGson(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord value5(Object value) {
		setJsJavax(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord value6(JSONJacksonHelloWorld value) {
		setJsJackson(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord value7(JsonNode value) {
		setJsJacksonJsonNode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord value8(Object value) {
		setHstore(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord value9(Map<String, String> value) {
		setHstoreMap(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord value10(Range<Integer> value) {
		setRangeInt4(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord value11(Object value) {
		setRangeInt8(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord value12(Object value) {
		setPgXmlAsIs(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord value13(Object value) {
		setPgXmlAsDocument(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TExoticTypesRecord values(Integer value1, UUID value2, Object value3, JsonElement value4, Object value5, JSONJacksonHelloWorld value6, JsonNode value7, Object value8, Map<String, String> value9, Range<Integer> value10, Object value11, Object value12, Object value13) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TExoticTypesRecord
	 */
	public TExoticTypesRecord() {
		super(TExoticTypes.T_EXOTIC_TYPES);
	}

	/**
	 * Create a detached, initialised TExoticTypesRecord
	 */
	public TExoticTypesRecord(Integer id, UUID uu, Object js, JsonElement jsGson, Object jsJavax, JSONJacksonHelloWorld jsJackson, JsonNode jsJacksonJsonNode, Object hstore, Map<String, String> hstoreMap, Range<Integer> rangeInt4, Object rangeInt8, Object pgXmlAsIs, Object pgXmlAsDocument) {
		super(TExoticTypes.T_EXOTIC_TYPES);

		setValue(0, id);
		setValue(1, uu);
		setValue(2, js);
		setValue(3, jsGson);
		setValue(4, jsJavax);
		setValue(5, jsJackson);
		setValue(6, jsJacksonJsonNode);
		setValue(7, hstore);
		setValue(8, hstoreMap);
		setValue(9, rangeInt4);
		setValue(10, rangeInt8);
		setValue(11, pgXmlAsIs);
		setValue(12, pgXmlAsDocument);
	}
}
