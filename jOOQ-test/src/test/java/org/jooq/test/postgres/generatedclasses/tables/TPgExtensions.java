/**
 * This class is generated by jOOQ
 */
package org.jooq.test.postgres.generatedclasses.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.all.bindings.PostgresPositionBinding;
import org.jooq.test.all.types.Position;
import org.jooq.test.postgres.generatedclasses.Keys;
import org.jooq.test.postgres.generatedclasses.Public;
import org.jooq.test.postgres.generatedclasses.tables.records.TPgExtensionsRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPgExtensions extends TableImpl<TPgExtensionsRecord> {

	private static final long serialVersionUID = 1973526083;

	/**
	 * The reference instance of <code>public.t_pg_extensions</code>
	 */
	public static final TPgExtensions T_PG_EXTENSIONS = new TPgExtensions();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TPgExtensionsRecord> getRecordType() {
		return TPgExtensionsRecord.class;
	}

	/**
	 * The column <code>public.t_pg_extensions.id</code>.
	 */
	public final TableField<TPgExtensionsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.t_pg_extensions.pg_interval</code>.
	 */
	public final TableField<TPgExtensionsRecord, Object> PG_INTERVAL = createField("pg_interval", org.jooq.impl.DefaultDataType.getDefaultDataType("interval"), this, "");

	/**
	 * The column <code>public.t_pg_extensions.pg_box</code>.
	 */
	public final TableField<TPgExtensionsRecord, Object> PG_BOX = createField("pg_box", org.jooq.impl.DefaultDataType.getDefaultDataType("box"), this, "");

	/**
	 * The column <code>public.t_pg_extensions.pg_hstore</code>.
	 */
	public final TableField<TPgExtensionsRecord, Object> PG_HSTORE = createField("pg_hstore", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "");

	/**
	 * The column <code>public.t_pg_extensions.pg_geometry</code>.
	 */
	public final TableField<TPgExtensionsRecord, Object> PG_GEOMETRY = createField("pg_geometry", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "");

	/**
	 * The column <code>public.t_pg_extensions.pg_position</code>.
	 */
	public final TableField<TPgExtensionsRecord, Position> PG_POSITION = createField("pg_position", org.jooq.impl.DefaultDataType.getDefaultDataType("USER-DEFINED"), this, "", new PostgresPositionBinding());

	/**
	 * Create a <code>public.t_pg_extensions</code> table reference
	 */
	public TPgExtensions() {
		this("t_pg_extensions", null);
	}

	/**
	 * Create an aliased <code>public.t_pg_extensions</code> table reference
	 */
	public TPgExtensions(String alias) {
		this(alias, T_PG_EXTENSIONS);
	}

	private TPgExtensions(String alias, Table<TPgExtensionsRecord> aliased) {
		this(alias, aliased, null);
	}

	private TPgExtensions(String alias, Table<TPgExtensionsRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TPgExtensionsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_T_PG_EXTENSIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TPgExtensionsRecord> getPrimaryKey() {
		return Keys.PK_T_PG_EXTENSIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TPgExtensionsRecord>> getKeys() {
		return Arrays.<UniqueKey<TPgExtensionsRecord>>asList(Keys.PK_T_PG_EXTENSIONS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TPgExtensions as(String alias) {
		return new TPgExtensions(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TPgExtensions rename(String name) {
		return new TPgExtensions(name, null);
	}
}
