/**
 * This class is generated by jOOQ
 */
package org.jooq.test.postgres.generatedclasses.tables;


import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.test.postgres.generatedclasses.Public;
import org.jooq.test.postgres.generatedclasses.tables.records.FTables3Record;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FTables3 extends TableImpl<FTables3Record> {

	private static final long serialVersionUID = -821845453;

	/**
	 * The reference instance of <code>public.f_tables3</code>
	 */
	public static final FTables3 F_TABLES3 = new FTables3();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FTables3Record> getRecordType() {
		return FTables3Record.class;
	}

	/**
	 * The column <code>public.f_tables3.column_value</code>.
	 */
	public final TableField<FTables3Record, String> COLUMN_VALUE = createField("column_value", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * Create a <code>public.f_tables3</code> table reference
	 */
	public FTables3() {
		this("f_tables3", null);
	}

	/**
	 * Create an aliased <code>public.f_tables3</code> table reference
	 */
	public FTables3(String alias) {
		this(alias, F_TABLES3);
	}

	private FTables3(String alias, Table<FTables3Record> aliased) {
		this(alias, aliased, new Field[0]);
	}

	private FTables3(String alias, Table<FTables3Record> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FTables3 as(String alias) {
		return new FTables3(alias, this, parameters);
	}

	/**
	 * Rename this table
	 */
	public FTables3 rename(String name) {
		return new FTables3(name, null, parameters);
	}

	/**
	 * Call this table-valued function
	 */
	public FTables3 call() {
		return new FTables3(getName(), null, new Field[] {  });
	}
}
