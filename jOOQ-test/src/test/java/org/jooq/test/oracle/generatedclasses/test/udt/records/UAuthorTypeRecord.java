/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.test.udt.records;


import java.math.BigDecimal;

import javax.validation.constraints.Size;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UDTRecordImpl;
import org.jooq.test.oracle.generatedclasses.test.udt.UAuthorType;
import org.jooq.test.oracle.generatedclasses.test.udt.u_author_type.CountBooks;
import org.jooq.test.oracle.generatedclasses.test.udt.u_author_type.GetAuthor;
import org.jooq.test.oracle.generatedclasses.test.udt.u_author_type.GetBooks;
import org.jooq.test.oracle.generatedclasses.test.udt.u_author_type.Load;
import org.jooq.test.oracle.generatedclasses.test.udt.u_author_type.NewAuthor;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UAuthorTypeRecord extends UDTRecordImpl<UAuthorTypeRecord> implements Record3<Integer, String, String> {

	private static final long serialVersionUID = -2093472254;

	/**
	 * Setter for <code>TEST.U_AUTHOR_TYPE.ID</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>TEST.U_AUTHOR_TYPE.ID</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>TEST.U_AUTHOR_TYPE.FIRST_NAME</code>.
	 */
	public void setFirstName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>TEST.U_AUTHOR_TYPE.FIRST_NAME</code>.
	 */
	@Size(max = 50)
	public String getFirstName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>TEST.U_AUTHOR_TYPE.LAST_NAME</code>.
	 */
	public void setLastName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>TEST.U_AUTHOR_TYPE.LAST_NAME</code>.
	 */
	@Size(max = 50)
	public String getLastName() {
		return (String) getValue(2);
	}

	/**
	 * Call <code>TEST.U_AUTHOR_TYPE.COUNT_BOOKS</code>
	 */
	public BigDecimal countBooks() {
		CountBooks f = new CountBooks();
		f.setSelf(this);

		f.execute(configuration());
		return f.getReturnValue();
	}

	/**
	 * Call <code>TEST.U_AUTHOR_TYPE.GET_AUTHOR</code>
	 */
	public static org.jooq.test.oracle.generatedclasses.test.udt.records.UAuthorTypeRecord getAuthor(Configuration configuration, Number pId) {
		GetAuthor f = new GetAuthor();
		f.setPId(pId);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Call <code>TEST.U_AUTHOR_TYPE.GET_BOOKS</code>
	 */
	public GetBooks getBooks() {
		GetBooks p = new GetBooks();
		p.setSelf(this);

		p.execute(configuration());
		from(p.getSelf());
		return p;
	}

	/**
	 * Call <code>TEST.U_AUTHOR_TYPE.LOAD</code>
	 */
	public org.jooq.test.oracle.generatedclasses.test.udt.records.UAuthorTypeRecord load() {
		Load p = new Load();
		p.setSelf(this);

		p.execute(configuration());
		from(p.getSelf());
		return p.getSelf();
	}

	/**
	 * Call <code>TEST.U_AUTHOR_TYPE.NEW_AUTHOR</code>
	 */
	public static org.jooq.test.oracle.generatedclasses.test.udt.records.UAuthorTypeRecord newAuthor(Configuration configuration, Number pId, String pFirstName, String pLastName) {
		NewAuthor p = new NewAuthor();
		p.setPId(pId);
		p.setPFirstName(pFirstName);
		p.setPLastName(pLastName);

		p.execute(configuration);
		return p.getPAuthor();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return UAuthorType.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return UAuthorType.FIRST_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return UAuthorType.LAST_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getFirstName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getLastName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UAuthorTypeRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UAuthorTypeRecord value2(String value) {
		setFirstName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UAuthorTypeRecord value3(String value) {
		setLastName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UAuthorTypeRecord values(Integer value1, String value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UAuthorTypeRecord
	 */
	public UAuthorTypeRecord() {
		super(UAuthorType.U_AUTHOR_TYPE);
	}

	/**
	 * Create a detached, initialised UAuthorTypeRecord
	 */
	public UAuthorTypeRecord(Integer id, String firstName, String lastName) {
		super(UAuthorType.U_AUTHOR_TYPE);

		setValue(0, id);
		setValue(1, firstName);
		setValue(2, lastName);
	}
}
