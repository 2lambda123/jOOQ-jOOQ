/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.test.udt.records;


import java.sql.Date;

import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UDTRecordImpl;
import org.jooq.test.oracle.generatedclasses.test.udt.UAddressType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UAddressTypeRecord extends UDTRecordImpl<UAddressTypeRecord> implements Record8<UStreetTypeRecord, String, String, String, Date, Integer, byte[], String> {

	private static final long serialVersionUID = 70319979;

	/**
	 * Setter for <code>TEST.U_ADDRESS_TYPE.STREET</code>.
	 */
	public void setStreet(UStreetTypeRecord value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>TEST.U_ADDRESS_TYPE.STREET</code>.
	 */
	public UStreetTypeRecord getStreet() {
		return (UStreetTypeRecord) getValue(0);
	}

	/**
	 * Setter for <code>TEST.U_ADDRESS_TYPE.ZIP</code>.
	 */
	public void setZip(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>TEST.U_ADDRESS_TYPE.ZIP</code>.
	 */
	@Size(max = 50)
	public String getZip() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>TEST.U_ADDRESS_TYPE.CITY</code>.
	 */
	public void setCity(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>TEST.U_ADDRESS_TYPE.CITY</code>.
	 */
	@Size(max = 50)
	public String getCity() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>TEST.U_ADDRESS_TYPE.COUNTRY</code>.
	 */
	public void setCountry(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>TEST.U_ADDRESS_TYPE.COUNTRY</code>.
	 */
	@Size(max = 50)
	public String getCountry() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>TEST.U_ADDRESS_TYPE.SINCE</code>.
	 */
	public void setSince(Date value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>TEST.U_ADDRESS_TYPE.SINCE</code>.
	 */
	public Date getSince() {
		return (Date) getValue(4);
	}

	/**
	 * Setter for <code>TEST.U_ADDRESS_TYPE.CODE</code>.
	 */
	public void setCode(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>TEST.U_ADDRESS_TYPE.CODE</code>.
	 */
	public Integer getCode() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>TEST.U_ADDRESS_TYPE.F_1323</code>.
	 */
	public void setF_1323(byte[] value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>TEST.U_ADDRESS_TYPE.F_1323</code>.
	 */
	public byte[] getF_1323() {
		return (byte[]) getValue(6);
	}

	/**
	 * Setter for <code>TEST.U_ADDRESS_TYPE.F_1326</code>.
	 */
	public void setF_1326(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>TEST.U_ADDRESS_TYPE.F_1326</code>.
	 */
	public String getF_1326() {
		return (String) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<UStreetTypeRecord, String, String, String, Date, Integer, byte[], String> fieldsRow() {
		return (Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<UStreetTypeRecord, String, String, String, Date, Integer, byte[], String> valuesRow() {
		return (Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UStreetTypeRecord> field1() {
		return UAddressType.STREET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return UAddressType.ZIP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return UAddressType.CITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return UAddressType.COUNTRY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field5() {
		return UAddressType.SINCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return UAddressType.CODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field7() {
		return UAddressType.F_1323;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return UAddressType.F_1326;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UStreetTypeRecord value1() {
		return getStreet();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getZip();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getCity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getCountry();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value5() {
		return getSince();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getCode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value7() {
		return getF_1323();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getF_1326();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UAddressTypeRecord value1(UStreetTypeRecord value) {
		setStreet(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UAddressTypeRecord value2(String value) {
		setZip(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UAddressTypeRecord value3(String value) {
		setCity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UAddressTypeRecord value4(String value) {
		setCountry(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UAddressTypeRecord value5(Date value) {
		setSince(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UAddressTypeRecord value6(Integer value) {
		setCode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UAddressTypeRecord value7(byte[] value) {
		setF_1323(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UAddressTypeRecord value8(String value) {
		setF_1326(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UAddressTypeRecord values(UStreetTypeRecord value1, String value2, String value3, String value4, Date value5, Integer value6, byte[] value7, String value8) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UAddressTypeRecord
	 */
	public UAddressTypeRecord() {
		super(UAddressType.U_ADDRESS_TYPE);
	}

	/**
	 * Create a detached, initialised UAddressTypeRecord
	 */
	public UAddressTypeRecord(UStreetTypeRecord street, String zip, String city, String country, Date since, Integer code, byte[] f_1323, String f_1326) {
		super(UAddressType.U_ADDRESS_TYPE);

		setValue(0, street);
		setValue(1, zip);
		setValue(2, city);
		setValue(3, country);
		setValue(4, since);
		setValue(5, code);
		setValue(6, f_1323);
		setValue(7, f_1326);
	}
}
