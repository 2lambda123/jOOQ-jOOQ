/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.multi_schema.udt.records;


import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UDTRecordImpl;
import org.jooq.test.oracle.generatedclasses.multi_schema.udt.NumberObject;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NumberObjectRecord extends UDTRecordImpl<NumberObjectRecord> implements Record3<Integer, Integer, Integer> {

	private static final long serialVersionUID = -474326099;

	/**
	 * Setter for <code>MULTI_SCHEMA.NUMBER_OBJECT.A</code>.
	 */
	public void setA(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>MULTI_SCHEMA.NUMBER_OBJECT.A</code>.
	 */
	public Integer getA() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>MULTI_SCHEMA.NUMBER_OBJECT.B</code>.
	 */
	public void setB(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>MULTI_SCHEMA.NUMBER_OBJECT.B</code>.
	 */
	public Integer getB() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>MULTI_SCHEMA.NUMBER_OBJECT.C</code>.
	 */
	public void setC(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>MULTI_SCHEMA.NUMBER_OBJECT.C</code>.
	 */
	public Integer getC() {
		return (Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Integer> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Integer> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return NumberObject.A;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return NumberObject.B;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return NumberObject.C;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getA();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getB();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getC();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NumberObjectRecord value1(Integer value) {
		setA(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NumberObjectRecord value2(Integer value) {
		setB(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NumberObjectRecord value3(Integer value) {
		setC(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NumberObjectRecord values(Integer value1, Integer value2, Integer value3) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached NumberObjectRecord
	 */
	public NumberObjectRecord() {
		super(NumberObject.NUMBER_OBJECT);
	}

	/**
	 * Create a detached, initialised NumberObjectRecord
	 */
	public NumberObjectRecord(Integer a, Integer b, Integer c) {
		super(NumberObject.NUMBER_OBJECT);

		setValue(0, a);
		setValue(1, b);
		setValue(2, c);
	}
}
