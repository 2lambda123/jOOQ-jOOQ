/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.sys.udt.xmltype;


import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.Record;
import org.jooq.Result;
import org.jooq.impl.AbstractRoutine;
import org.jooq.test.oracle.generatedclasses.sys.Sys;
import org.jooq.test.oracle.generatedclasses.sys.udt.Xmltype;
import org.jooq.test.oracle.generatedclasses.sys.udt.records.XmltypeRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Createxml8 extends AbstractRoutine<XmltypeRecord> {

	private static final long serialVersionUID = -1491177733;

	/**
	 * The parameter <code>SYS.XMLTYPE.CREATEXML.RETURN_VALUE</code>.
	 */
	public static final Parameter<XmltypeRecord> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.test.oracle.generatedclasses.sys.udt.Xmltype.XMLTYPE.getDataType(), false);

	/**
	 * The parameter <code>SYS.XMLTYPE.CREATEXML.XMLDATA</code>.
	 */
	public static final Parameter<Result<Record>> XMLDATA = createParameter("XMLDATA", org.jooq.impl.SQLDataType.RESULT, false);

	/**
	 * The parameter <code>SYS.XMLTYPE.CREATEXML.SCHEMA</code>.
	 */
	public static final Parameter<String> SCHEMA = createParameter("SCHEMA", org.jooq.impl.SQLDataType.VARCHAR.defaulted(true), true);

	/**
	 * The parameter <code>SYS.XMLTYPE.CREATEXML.ELEMENT</code>.
	 */
	public static final Parameter<String> ELEMENT = createParameter("ELEMENT", org.jooq.impl.SQLDataType.VARCHAR.defaulted(true), true);

	/**
	 * The parameter <code>SYS.XMLTYPE.CREATEXML.VALIDATED</code>.
	 */
	public static final Parameter<BigDecimal> VALIDATED = createParameter("VALIDATED", org.jooq.impl.SQLDataType.NUMERIC.defaulted(true), true);

	/**
	 * Create a new routine call instance
	 */
	public Createxml8() {
		super("CREATEXML", Sys.SYS, Xmltype.XMLTYPE, org.jooq.test.oracle.generatedclasses.sys.udt.Xmltype.XMLTYPE.getDataType());

		setReturnParameter(RETURN_VALUE);
		addInParameter(XMLDATA);
		addInParameter(SCHEMA);
		addInParameter(ELEMENT);
		addInParameter(VALIDATED);
		setOverloaded(true);
	}

	/**
	 * Set the <code>XMLDATA</code> parameter IN value to the routine
	 */
	public void setXmldata(Result<Record> value) {
		setValue(XMLDATA, value);
	}

	/**
	 * Set the <code>XMLDATA</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setXmldata(Field<Result<Record>> field) {
		setField(XMLDATA, field);
	}

	/**
	 * Set the <code>SCHEMA</code> parameter IN value to the routine
	 */
	public void setSchema_(String value) {
		setValue(SCHEMA, value);
	}

	/**
	 * Set the <code>SCHEMA</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setSchema_(Field<String> field) {
		setField(SCHEMA, field);
	}

	/**
	 * Set the <code>ELEMENT</code> parameter IN value to the routine
	 */
	public void setElement(String value) {
		setValue(ELEMENT, value);
	}

	/**
	 * Set the <code>ELEMENT</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setElement(Field<String> field) {
		setField(ELEMENT, field);
	}

	/**
	 * Set the <code>VALIDATED</code> parameter IN value to the routine
	 */
	public void setValidated(Number value) {
		setNumber(VALIDATED, value);
	}

	/**
	 * Set the <code>VALIDATED</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setValidated(Field<? extends Number> field) {
		setNumber(VALIDATED, field);
	}
}
