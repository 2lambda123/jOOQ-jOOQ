/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.test.tables.pojos;


import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "X_TEST_CASE_2025", schema = "TEST")
public class XTestCase_2025 implements Serializable {

	private static final long serialVersionUID = -874482015;

	private Integer refId;
	private String  refName;

	public XTestCase_2025() {}

	public XTestCase_2025(XTestCase_2025 value) {
		this.refId = value.refId;
		this.refName = value.refName;
	}

	public XTestCase_2025(
		Integer refId,
		String  refName
	) {
		this.refId = refId;
		this.refName = refName;
	}

	@Column(name = "REF_ID", nullable = false, precision = 7)
	@NotNull
	public Integer getRefId() {
		return this.refId;
	}

	public void setRefId(Integer refId) {
		this.refId = refId;
	}

	@Column(name = "REF_NAME", nullable = false, length = 10)
	@NotNull
	@Size(max = 10)
	public String getRefName() {
		return this.refName;
	}

	public void setRefName(String refName) {
		this.refName = refName;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final XTestCase_2025 other = (XTestCase_2025) obj;
		if (refId == null) {
			if (other.refId != null)
				return false;
		}
		else if (!refId.equals(other.refId))
			return false;
		if (refName == null) {
			if (other.refName != null)
				return false;
		}
		else if (!refName.equals(other.refName))
			return false;
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((refId == null) ? 0 : refId.hashCode());
		result = prime * result + ((refName == null) ? 0 : refName.hashCode());
		return result;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("XTestCase_2025 (");

		sb.append(refId);
		sb.append(", ").append(refName);

		sb.append(")");
		return sb.toString();
	}
}
