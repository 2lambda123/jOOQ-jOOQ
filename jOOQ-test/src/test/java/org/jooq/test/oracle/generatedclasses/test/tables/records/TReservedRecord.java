/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.test.tables.records;


import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;

import org.jooq.impl.TableRecordImpl;
import org.jooq.test.oracle.generatedclasses.test.tables.TReserved;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "T_RESERVED", schema = "TEST")
public class TReservedRecord extends TableRecordImpl<TReservedRecord> {

	private static final long serialVersionUID = 1882775292;

	/**
	 * Setter for <code>TEST.T_RESERVED.abstract</code>.
	 */
	public void setAbstract(BigDecimal value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.abstract</code>.
	 */
	@Column(name = "abstract")
	public BigDecimal getAbstract() {
		return (BigDecimal) getValue(0);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.case</code>.
	 */
	public void setCase(BigDecimal value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.case</code>.
	 */
	@Column(name = "case")
	public BigDecimal getCase() {
		return (BigDecimal) getValue(1);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.catch</code>.
	 */
	public void setCatch(BigDecimal value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.catch</code>.
	 */
	@Column(name = "catch")
	public BigDecimal getCatch() {
		return (BigDecimal) getValue(2);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.class</code>.
	 */
	public void setClass_(BigDecimal value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.class</code>.
	 */
	@Column(name = "class")
	public BigDecimal getClass_() {
		return (BigDecimal) getValue(3);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.def</code>.
	 */
	public void setDef(BigDecimal value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.def</code>.
	 */
	@Column(name = "def")
	public BigDecimal getDef() {
		return (BigDecimal) getValue(4);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.do</code>.
	 */
	public void setDo(BigDecimal value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.do</code>.
	 */
	@Column(name = "do")
	public BigDecimal getDo() {
		return (BigDecimal) getValue(5);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.else</code>.
	 */
	public void setElse(BigDecimal value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.else</code>.
	 */
	@Column(name = "else")
	public BigDecimal getElse() {
		return (BigDecimal) getValue(6);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.extends</code>.
	 */
	public void setExtends(BigDecimal value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.extends</code>.
	 */
	@Column(name = "extends")
	public BigDecimal getExtends() {
		return (BigDecimal) getValue(7);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.false</code>.
	 */
	public void setFalse(BigDecimal value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.false</code>.
	 */
	@Column(name = "false")
	public BigDecimal getFalse() {
		return (BigDecimal) getValue(8);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.final</code>.
	 */
	public void setFinal(BigDecimal value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.final</code>.
	 */
	@Column(name = "final")
	public BigDecimal getFinal() {
		return (BigDecimal) getValue(9);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.finally</code>.
	 */
	public void setFinally(BigDecimal value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.finally</code>.
	 */
	@Column(name = "finally")
	public BigDecimal getFinally() {
		return (BigDecimal) getValue(10);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.for</code>.
	 */
	public void setFor(BigDecimal value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.for</code>.
	 */
	@Column(name = "for")
	public BigDecimal getFor() {
		return (BigDecimal) getValue(11);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.forSome</code>.
	 */
	public void setForsome(BigDecimal value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.forSome</code>.
	 */
	@Column(name = "forSome")
	public BigDecimal getForsome() {
		return (BigDecimal) getValue(12);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.if</code>.
	 */
	public void setIf(BigDecimal value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.if</code>.
	 */
	@Column(name = "if")
	public BigDecimal getIf() {
		return (BigDecimal) getValue(13);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.implicit</code>.
	 */
	public void setImplicit(BigDecimal value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.implicit</code>.
	 */
	@Column(name = "implicit")
	public BigDecimal getImplicit() {
		return (BigDecimal) getValue(14);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.import</code>.
	 */
	public void setImport(BigDecimal value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.import</code>.
	 */
	@Column(name = "import")
	public BigDecimal getImport() {
		return (BigDecimal) getValue(15);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.lazy</code>.
	 */
	public void setLazy(BigDecimal value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.lazy</code>.
	 */
	@Column(name = "lazy")
	public BigDecimal getLazy() {
		return (BigDecimal) getValue(16);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.match</code>.
	 */
	public void setMatch(BigDecimal value) {
		setValue(17, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.match</code>.
	 */
	@Column(name = "match")
	public BigDecimal getMatch() {
		return (BigDecimal) getValue(17);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.new</code>.
	 */
	public void setNew(BigDecimal value) {
		setValue(18, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.new</code>.
	 */
	@Column(name = "new")
	public BigDecimal getNew() {
		return (BigDecimal) getValue(18);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.null</code>.
	 */
	public void setNull(BigDecimal value) {
		setValue(19, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.null</code>.
	 */
	@Column(name = "null")
	public BigDecimal getNull() {
		return (BigDecimal) getValue(19);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.object</code>.
	 */
	public void setObject(BigDecimal value) {
		setValue(20, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.object</code>.
	 */
	@Column(name = "object")
	public BigDecimal getObject() {
		return (BigDecimal) getValue(20);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.override</code>.
	 */
	public void setOverride(BigDecimal value) {
		setValue(21, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.override</code>.
	 */
	@Column(name = "override")
	public BigDecimal getOverride() {
		return (BigDecimal) getValue(21);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.package</code>.
	 */
	public void setPackage(BigDecimal value) {
		setValue(22, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.package</code>.
	 */
	@Column(name = "package")
	public BigDecimal getPackage() {
		return (BigDecimal) getValue(22);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.private</code>.
	 */
	public void setPrivate(BigDecimal value) {
		setValue(23, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.private</code>.
	 */
	@Column(name = "private")
	public BigDecimal getPrivate() {
		return (BigDecimal) getValue(23);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.protected</code>.
	 */
	public void setProtected(BigDecimal value) {
		setValue(24, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.protected</code>.
	 */
	@Column(name = "protected")
	public BigDecimal getProtected() {
		return (BigDecimal) getValue(24);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.return</code>.
	 */
	public void setReturn(BigDecimal value) {
		setValue(25, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.return</code>.
	 */
	@Column(name = "return")
	public BigDecimal getReturn() {
		return (BigDecimal) getValue(25);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.sealed</code>.
	 */
	public void setSealed(BigDecimal value) {
		setValue(26, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.sealed</code>.
	 */
	@Column(name = "sealed")
	public BigDecimal getSealed() {
		return (BigDecimal) getValue(26);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.super</code>.
	 */
	public void setSuper(BigDecimal value) {
		setValue(27, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.super</code>.
	 */
	@Column(name = "super")
	public BigDecimal getSuper() {
		return (BigDecimal) getValue(27);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.this</code>.
	 */
	public void setThis(BigDecimal value) {
		setValue(28, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.this</code>.
	 */
	@Column(name = "this")
	public BigDecimal getThis() {
		return (BigDecimal) getValue(28);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.throw</code>.
	 */
	public void setThrow(BigDecimal value) {
		setValue(29, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.throw</code>.
	 */
	@Column(name = "throw")
	public BigDecimal getThrow() {
		return (BigDecimal) getValue(29);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.trait</code>.
	 */
	public void setTrait(BigDecimal value) {
		setValue(30, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.trait</code>.
	 */
	@Column(name = "trait")
	public BigDecimal getTrait() {
		return (BigDecimal) getValue(30);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.try</code>.
	 */
	public void setTry(BigDecimal value) {
		setValue(31, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.try</code>.
	 */
	@Column(name = "try")
	public BigDecimal getTry() {
		return (BigDecimal) getValue(31);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.true</code>.
	 */
	public void setTrue(BigDecimal value) {
		setValue(32, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.true</code>.
	 */
	@Column(name = "true")
	public BigDecimal getTrue() {
		return (BigDecimal) getValue(32);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.type</code>.
	 */
	public void setType(BigDecimal value) {
		setValue(33, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.type</code>.
	 */
	@Column(name = "type")
	public BigDecimal getType() {
		return (BigDecimal) getValue(33);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.val</code>.
	 */
	public void setVal(BigDecimal value) {
		setValue(34, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.val</code>.
	 */
	@Column(name = "val")
	public BigDecimal getVal() {
		return (BigDecimal) getValue(34);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.var</code>.
	 */
	public void setVar(BigDecimal value) {
		setValue(35, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.var</code>.
	 */
	@Column(name = "var")
	public BigDecimal getVar() {
		return (BigDecimal) getValue(35);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.while</code>.
	 */
	public void setWhile(BigDecimal value) {
		setValue(36, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.while</code>.
	 */
	@Column(name = "while")
	public BigDecimal getWhile() {
		return (BigDecimal) getValue(36);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.with</code>.
	 */
	public void setWith(BigDecimal value) {
		setValue(37, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.with</code>.
	 */
	@Column(name = "with")
	public BigDecimal getWith() {
		return (BigDecimal) getValue(37);
	}

	/**
	 * Setter for <code>TEST.T_RESERVED.yield</code>.
	 */
	public void setYield(BigDecimal value) {
		setValue(38, value);
	}

	/**
	 * Getter for <code>TEST.T_RESERVED.yield</code>.
	 */
	@Column(name = "yield")
	public BigDecimal getYield() {
		return (BigDecimal) getValue(38);
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TReservedRecord
	 */
	public TReservedRecord() {
		super(TReserved.T_RESERVED);
	}

	/**
	 * Create a detached, initialised TReservedRecord
	 */
	public TReservedRecord(BigDecimal abstract_, BigDecimal case_, BigDecimal catch_, BigDecimal class_, BigDecimal def, BigDecimal do_, BigDecimal else_, BigDecimal extends_, BigDecimal false_, BigDecimal final_, BigDecimal finally_, BigDecimal for_, BigDecimal forsome, BigDecimal if_, BigDecimal implicit, BigDecimal import_, BigDecimal lazy, BigDecimal match, BigDecimal new_, BigDecimal null_, BigDecimal object, BigDecimal override, BigDecimal package_, BigDecimal private_, BigDecimal protected_, BigDecimal return_, BigDecimal sealed, BigDecimal super_, BigDecimal this_, BigDecimal throw_, BigDecimal trait, BigDecimal try_, BigDecimal true_, BigDecimal type, BigDecimal val, BigDecimal var, BigDecimal while_, BigDecimal with, BigDecimal yield) {
		super(TReserved.T_RESERVED);

		setValue(0, abstract_);
		setValue(1, case_);
		setValue(2, catch_);
		setValue(3, class_);
		setValue(4, def);
		setValue(5, do_);
		setValue(6, else_);
		setValue(7, extends_);
		setValue(8, false_);
		setValue(9, final_);
		setValue(10, finally_);
		setValue(11, for_);
		setValue(12, forsome);
		setValue(13, if_);
		setValue(14, implicit);
		setValue(15, import_);
		setValue(16, lazy);
		setValue(17, match);
		setValue(18, new_);
		setValue(19, null_);
		setValue(20, object);
		setValue(21, override);
		setValue(22, package_);
		setValue(23, private_);
		setValue(24, protected_);
		setValue(25, return_);
		setValue(26, sealed);
		setValue(27, super_);
		setValue(28, this_);
		setValue(29, throw_);
		setValue(30, trait);
		setValue(31, try_);
		setValue(32, true_);
		setValue(33, type);
		setValue(34, val);
		setValue(35, var);
		setValue(36, while_);
		setValue(37, with);
		setValue(38, yield);
	}
}
