/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.test.tables.pojos;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "T_639_NUMBERS_TABLE", schema = "TEST")
public class T_639NumbersTable implements java.io.Serializable {

	private static final long serialVersionUID = -686926892;

	private java.lang.Integer    id;
	private java.lang.Byte       byte_;
	private java.lang.Short      short_;
	private java.lang.Integer    integer;
	private java.lang.Long       long_;
	private java.lang.Byte       byteDecimal;
	private java.lang.Short      shortDecimal;
	private java.lang.Integer    integerDecimal;
	private java.lang.Long       longDecimal;
	private java.math.BigInteger bigInteger;
	private java.math.BigDecimal bigDecimal;

	public T_639NumbersTable() {}

	public T_639NumbersTable(
		java.lang.Integer    id,
		java.lang.Byte       byte_,
		java.lang.Short      short_,
		java.lang.Integer    integer,
		java.lang.Long       long_,
		java.lang.Byte       byteDecimal,
		java.lang.Short      shortDecimal,
		java.lang.Integer    integerDecimal,
		java.lang.Long       longDecimal,
		java.math.BigInteger bigInteger,
		java.math.BigDecimal bigDecimal
	) {
		this.id = id;
		this.byte_ = byte_;
		this.short_ = short_;
		this.integer = integer;
		this.long_ = long_;
		this.byteDecimal = byteDecimal;
		this.shortDecimal = shortDecimal;
		this.integerDecimal = integerDecimal;
		this.longDecimal = longDecimal;
		this.bigInteger = bigInteger;
		this.bigDecimal = bigDecimal;
	}

	@javax.persistence.Id
	@javax.persistence.Column(name = "ID", unique = true, nullable = false, precision = 7)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getId() {
		return this.id;
	}

	public void setId(java.lang.Integer id) {
		this.id = id;
	}

	@javax.persistence.Column(name = "BYTE", precision = 2)
	public java.lang.Byte getByte() {
		return this.byte_;
	}

	public void setByte(java.lang.Byte byte_) {
		this.byte_ = byte_;
	}

	@javax.persistence.Column(name = "SHORT", precision = 4)
	public java.lang.Short getShort() {
		return this.short_;
	}

	public void setShort(java.lang.Short short_) {
		this.short_ = short_;
	}

	@javax.persistence.Column(name = "INTEGER", precision = 7)
	public java.lang.Integer getInteger() {
		return this.integer;
	}

	public void setInteger(java.lang.Integer integer) {
		this.integer = integer;
	}

	@javax.persistence.Column(name = "LONG", precision = 18)
	public java.lang.Long getLong() {
		return this.long_;
	}

	public void setLong(java.lang.Long long_) {
		this.long_ = long_;
	}

	@javax.persistence.Column(name = "BYTE_DECIMAL", precision = 2)
	public java.lang.Byte getByteDecimal() {
		return this.byteDecimal;
	}

	public void setByteDecimal(java.lang.Byte byteDecimal) {
		this.byteDecimal = byteDecimal;
	}

	@javax.persistence.Column(name = "SHORT_DECIMAL", precision = 4)
	public java.lang.Short getShortDecimal() {
		return this.shortDecimal;
	}

	public void setShortDecimal(java.lang.Short shortDecimal) {
		this.shortDecimal = shortDecimal;
	}

	@javax.persistence.Column(name = "INTEGER_DECIMAL", precision = 9)
	public java.lang.Integer getIntegerDecimal() {
		return this.integerDecimal;
	}

	public void setIntegerDecimal(java.lang.Integer integerDecimal) {
		this.integerDecimal = integerDecimal;
	}

	@javax.persistence.Column(name = "LONG_DECIMAL", precision = 18)
	public java.lang.Long getLongDecimal() {
		return this.longDecimal;
	}

	public void setLongDecimal(java.lang.Long longDecimal) {
		this.longDecimal = longDecimal;
	}

	@javax.persistence.Column(name = "BIG_INTEGER", precision = 22)
	public java.math.BigInteger getBigInteger() {
		return this.bigInteger;
	}

	public void setBigInteger(java.math.BigInteger bigInteger) {
		this.bigInteger = bigInteger;
	}

	@javax.persistence.Column(name = "BIG_DECIMAL", precision = 22, scale = 5)
	public java.math.BigDecimal getBigDecimal() {
		return this.bigDecimal;
	}

	public void setBigDecimal(java.math.BigDecimal bigDecimal) {
		this.bigDecimal = bigDecimal;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final T_639NumbersTable other = (T_639NumbersTable) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		}
		else if (!id.equals(other.id))
			return false;
		if (byte_ == null) {
			if (other.byte_ != null)
				return false;
		}
		else if (!byte_.equals(other.byte_))
			return false;
		if (short_ == null) {
			if (other.short_ != null)
				return false;
		}
		else if (!short_.equals(other.short_))
			return false;
		if (integer == null) {
			if (other.integer != null)
				return false;
		}
		else if (!integer.equals(other.integer))
			return false;
		if (long_ == null) {
			if (other.long_ != null)
				return false;
		}
		else if (!long_.equals(other.long_))
			return false;
		if (byteDecimal == null) {
			if (other.byteDecimal != null)
				return false;
		}
		else if (!byteDecimal.equals(other.byteDecimal))
			return false;
		if (shortDecimal == null) {
			if (other.shortDecimal != null)
				return false;
		}
		else if (!shortDecimal.equals(other.shortDecimal))
			return false;
		if (integerDecimal == null) {
			if (other.integerDecimal != null)
				return false;
		}
		else if (!integerDecimal.equals(other.integerDecimal))
			return false;
		if (longDecimal == null) {
			if (other.longDecimal != null)
				return false;
		}
		else if (!longDecimal.equals(other.longDecimal))
			return false;
		if (bigInteger == null) {
			if (other.bigInteger != null)
				return false;
		}
		else if (!bigInteger.equals(other.bigInteger))
			return false;
		if (bigDecimal == null) {
			if (other.bigDecimal != null)
				return false;
		}
		else if (!bigDecimal.equals(other.bigDecimal))
			return false;
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((byte_ == null) ? 0 : byte_.hashCode());
		result = prime * result + ((short_ == null) ? 0 : short_.hashCode());
		result = prime * result + ((integer == null) ? 0 : integer.hashCode());
		result = prime * result + ((long_ == null) ? 0 : long_.hashCode());
		result = prime * result + ((byteDecimal == null) ? 0 : byteDecimal.hashCode());
		result = prime * result + ((shortDecimal == null) ? 0 : shortDecimal.hashCode());
		result = prime * result + ((integerDecimal == null) ? 0 : integerDecimal.hashCode());
		result = prime * result + ((longDecimal == null) ? 0 : longDecimal.hashCode());
		result = prime * result + ((bigInteger == null) ? 0 : bigInteger.hashCode());
		result = prime * result + ((bigDecimal == null) ? 0 : bigDecimal.hashCode());
		return result;
	}
}
