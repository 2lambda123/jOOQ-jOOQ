/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.test.packages;


import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.impl.PackageImpl;
import org.jooq.test.oracle.generatedclasses.multi_schema.udt.records.NumberObjectRecord;
import org.jooq.test.oracle.generatedclasses.multi_schema.udt.records.NumberTableRecord;
import org.jooq.test.oracle.generatedclasses.test.Test;
import org.jooq.test.oracle.generatedclasses.test.packages.test_synonym_package.ActualObject;
import org.jooq.test.oracle.generatedclasses.test.packages.test_synonym_package.ActualTable;
import org.jooq.test.oracle.generatedclasses.test.packages.test_synonym_package.PublicObject;
import org.jooq.test.oracle.generatedclasses.test.packages.test_synonym_package.PublicTable;
import org.jooq.test.oracle.generatedclasses.test.packages.test_synonym_package.TestObject;
import org.jooq.test.oracle.generatedclasses.test.packages.test_synonym_package.TestTable;
import org.jooq.test.oracle.generatedclasses.test.packages.test_synonym_package.TestTransitive;


/**
 * Convenience access to all stored procedures and functions in TEST_SYNONYM_PACKAGE
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestSynonymPackage extends PackageImpl {

	private static final long serialVersionUID = -1672670706;

	/**
	 * The reference instance of <code>TEST.TEST_SYNONYM_PACKAGE</code>
	 */
	public static final TestSynonymPackage TEST_SYNONYM_PACKAGE = new TestSynonymPackage();

	/**
	 * Call <code>TEST.TEST_SYNONYM_PACKAGE.ACTUAL_OBJECT</code>
	 */
	public static NumberObjectRecord actualObject(Configuration configuration) {
		ActualObject f = new ActualObject();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>TEST.TEST_SYNONYM_PACKAGE.ACTUAL_OBJECT</code> as a field
	 */
	public static Field<NumberObjectRecord> actualObject() {
		ActualObject f = new ActualObject();

		return f.asField();
	}

	/**
	 * Call <code>TEST.TEST_SYNONYM_PACKAGE.ACTUAL_TABLE</code>
	 */
	public static NumberTableRecord actualTable(Configuration configuration) {
		ActualTable f = new ActualTable();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>TEST.TEST_SYNONYM_PACKAGE.ACTUAL_TABLE</code> as a field
	 */
	public static Field<NumberTableRecord> actualTable() {
		ActualTable f = new ActualTable();

		return f.asField();
	}

	/**
	 * Call <code>TEST.TEST_SYNONYM_PACKAGE.PUBLIC_OBJECT</code>
	 */
	public static NumberObjectRecord publicObject(Configuration configuration) {
		PublicObject f = new PublicObject();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>TEST.TEST_SYNONYM_PACKAGE.PUBLIC_OBJECT</code> as a field
	 */
	public static Field<NumberObjectRecord> publicObject() {
		PublicObject f = new PublicObject();

		return f.asField();
	}

	/**
	 * Call <code>TEST.TEST_SYNONYM_PACKAGE.PUBLIC_TABLE</code>
	 */
	public static NumberTableRecord publicTable(Configuration configuration) {
		PublicTable f = new PublicTable();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>TEST.TEST_SYNONYM_PACKAGE.PUBLIC_TABLE</code> as a field
	 */
	public static Field<NumberTableRecord> publicTable() {
		PublicTable f = new PublicTable();

		return f.asField();
	}

	/**
	 * Call <code>TEST.TEST_SYNONYM_PACKAGE.TEST_OBJECT</code>
	 */
	public static NumberObjectRecord testObject(Configuration configuration) {
		TestObject f = new TestObject();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>TEST.TEST_SYNONYM_PACKAGE.TEST_OBJECT</code> as a field
	 */
	public static Field<NumberObjectRecord> testObject() {
		TestObject f = new TestObject();

		return f.asField();
	}

	/**
	 * Call <code>TEST.TEST_SYNONYM_PACKAGE.TEST_TABLE</code>
	 */
	public static NumberTableRecord testTable(Configuration configuration) {
		TestTable f = new TestTable();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>TEST.TEST_SYNONYM_PACKAGE.TEST_TABLE</code> as a field
	 */
	public static Field<NumberTableRecord> testTable() {
		TestTable f = new TestTable();

		return f.asField();
	}

	/**
	 * Call <code>TEST.TEST_SYNONYM_PACKAGE.TEST_TRANSITIVE</code>
	 */
	public static NumberObjectRecord testTransitive(Configuration configuration) {
		TestTransitive f = new TestTransitive();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>TEST.TEST_SYNONYM_PACKAGE.TEST_TRANSITIVE</code> as a field
	 */
	public static Field<NumberObjectRecord> testTransitive() {
		TestTransitive f = new TestTransitive();

		return f.asField();
	}

	/**
	 * No further instances allowed
	 */
	private TestSynonymPackage() {
		super("TEST_SYNONYM_PACKAGE", Test.TEST);
	}
}
