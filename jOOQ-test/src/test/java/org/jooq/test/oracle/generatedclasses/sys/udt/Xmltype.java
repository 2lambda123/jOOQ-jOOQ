/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.sys.udt;


import java.math.BigDecimal;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Package;
import org.jooq.Record;
import org.jooq.Result;
import org.jooq.impl.UDTImpl;
import org.jooq.test.oracle.generatedclasses.sys.Sys;
import org.jooq.test.oracle.generatedclasses.sys.udt.records.XmltypeRecord;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Appendchildxml;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Createnonschemabasedxml;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Createschemabasedxml;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Createxml1;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Createxml2;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Createxml3;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Createxml4;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Createxml5;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Createxml6;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Createxml7;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Createxml8;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Createxml9;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Createxmlfrombinary;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Deletexml;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Existsnode1;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Existsnode2;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Extract1;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Extract2;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Getblobval1;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Getblobval2;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Getclobval1;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Getclobval2;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Getnamespace;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Getnumberval;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Getrootelement;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Getschemaid;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Getschemaurl;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Getstringval1;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Getstringval2;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Insertxmlbefore;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Isfragment;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Isschemabased;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Isschemavalid;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Isschemavalidated;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Schemavalidate;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Setschemavalidated;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Toobject;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Transform;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Xmltype1;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Xmltype2;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Xmltype3;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Xmltype4;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Xmltype5;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Xmltype6;
import org.jooq.test.oracle.generatedclasses.sys.udt.xmltype.Xmltype7;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Xmltype extends UDTImpl<XmltypeRecord> implements Package {

	private static final long serialVersionUID = -1824206112;

	/**
	 * The reference instance of <code>SYS.XMLTYPE</code>
	 */
	public static final Xmltype XMLTYPE = new Xmltype();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<XmltypeRecord> getRecordType() {
		return XmltypeRecord.class;
	}

	/**
	 * Call <code>SYS.XMLTYPE.APPENDCHILDXML</code>
	 */
	public static XmltypeRecord appendchildxml(Configuration configuration, XmltypeRecord self, String xpath, XmltypeRecord valueExpr, String namespace) {
		Appendchildxml f = new Appendchildxml();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setValueExpr(valueExpr);
		f.setNamespace(namespace);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.APPENDCHILDXML</code> as a field
	 */
	public static Field<XmltypeRecord> appendchildxml(XmltypeRecord self, String xpath, XmltypeRecord valueExpr, String namespace) {
		Appendchildxml f = new Appendchildxml();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setValueExpr(valueExpr);
		f.setNamespace(namespace);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.APPENDCHILDXML</code> as a field
	 */
	public static Field<XmltypeRecord> appendchildxml(Field<XmltypeRecord> self, Field<String> xpath, Field<XmltypeRecord> valueExpr, Field<String> namespace) {
		Appendchildxml f = new Appendchildxml();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setValueExpr(valueExpr);
		f.setNamespace(namespace);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.CREATENONSCHEMABASEDXML</code>
	 */
	public static XmltypeRecord createnonschemabasedxml(Configuration configuration, XmltypeRecord self) {
		Createnonschemabasedxml f = new Createnonschemabasedxml();
		f.setSelf(self);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATENONSCHEMABASEDXML</code> as a field
	 */
	public static Field<XmltypeRecord> createnonschemabasedxml(XmltypeRecord self) {
		Createnonschemabasedxml f = new Createnonschemabasedxml();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATENONSCHEMABASEDXML</code> as a field
	 */
	public static Field<XmltypeRecord> createnonschemabasedxml(Field<XmltypeRecord> self) {
		Createnonschemabasedxml f = new Createnonschemabasedxml();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.CREATESCHEMABASEDXML</code>
	 */
	public static XmltypeRecord createschemabasedxml(Configuration configuration, XmltypeRecord self, String schema) {
		Createschemabasedxml f = new Createschemabasedxml();
		f.setSelf(self);
		f.setSchema_(schema);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATESCHEMABASEDXML</code> as a field
	 */
	public static Field<XmltypeRecord> createschemabasedxml(XmltypeRecord self, String schema) {
		Createschemabasedxml f = new Createschemabasedxml();
		f.setSelf(self);
		f.setSchema_(schema);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATESCHEMABASEDXML</code> as a field
	 */
	public static Field<XmltypeRecord> createschemabasedxml(Field<XmltypeRecord> self, Field<String> schema) {
		Createschemabasedxml f = new Createschemabasedxml();
		f.setSelf(self);
		f.setSchema_(schema);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.CREATEXML</code>
	 */
	public static XmltypeRecord createxml1(Configuration configuration, String xmldata) {
		Createxml1 f = new Createxml1();
		f.setXmldata(xmldata);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml1(String xmldata) {
		Createxml1 f = new Createxml1();
		f.setXmldata(xmldata);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml1(Field<String> xmldata) {
		Createxml1 f = new Createxml1();
		f.setXmldata(xmldata);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.CREATEXML</code>
	 */
	public static XmltypeRecord createxml2(Configuration configuration, String xmldata) {
		Createxml2 f = new Createxml2();
		f.setXmldata(xmldata);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml2(String xmldata) {
		Createxml2 f = new Createxml2();
		f.setXmldata(xmldata);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml2(Field<String> xmldata) {
		Createxml2 f = new Createxml2();
		f.setXmldata(xmldata);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.CREATEXML</code>
	 */
	public static XmltypeRecord createxml3(Configuration configuration, String xmldata, String schema, Number validated, Number wellformed) {
		Createxml3 f = new Createxml3();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setValidated(validated);
		f.setWellformed(wellformed);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml3(String xmldata, String schema, Number validated, Number wellformed) {
		Createxml3 f = new Createxml3();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setValidated(validated);
		f.setWellformed(wellformed);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml3(Field<String> xmldata, Field<String> schema, Field<? extends Number> validated, Field<? extends Number> wellformed) {
		Createxml3 f = new Createxml3();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setValidated(validated);
		f.setWellformed(wellformed);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.CREATEXML</code>
	 */
	public static XmltypeRecord createxml4(Configuration configuration, byte[] xmldata, Number csid, String schema, Number validated, Number wellformed) {
		Createxml4 f = new Createxml4();
		f.setXmldata(xmldata);
		f.setCsid(csid);
		f.setSchema_(schema);
		f.setValidated(validated);
		f.setWellformed(wellformed);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml4(byte[] xmldata, Number csid, String schema, Number validated, Number wellformed) {
		Createxml4 f = new Createxml4();
		f.setXmldata(xmldata);
		f.setCsid(csid);
		f.setSchema_(schema);
		f.setValidated(validated);
		f.setWellformed(wellformed);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml4(Field<byte[]> xmldata, Field<? extends Number> csid, Field<String> schema, Field<? extends Number> validated, Field<? extends Number> wellformed) {
		Createxml4 f = new Createxml4();
		f.setXmldata(xmldata);
		f.setCsid(csid);
		f.setSchema_(schema);
		f.setValidated(validated);
		f.setWellformed(wellformed);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.CREATEXML</code>
	 */
	public static XmltypeRecord createxml5(Configuration configuration, byte[] xmldata, Number csid, String schema, Number validated, Number wellformed) {
		Createxml5 f = new Createxml5();
		f.setXmldata(xmldata);
		f.setCsid(csid);
		f.setSchema_(schema);
		f.setValidated(validated);
		f.setWellformed(wellformed);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml5(byte[] xmldata, Number csid, String schema, Number validated, Number wellformed) {
		Createxml5 f = new Createxml5();
		f.setXmldata(xmldata);
		f.setCsid(csid);
		f.setSchema_(schema);
		f.setValidated(validated);
		f.setWellformed(wellformed);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml5(Field<byte[]> xmldata, Field<? extends Number> csid, Field<String> schema, Field<? extends Number> validated, Field<? extends Number> wellformed) {
		Createxml5 f = new Createxml5();
		f.setXmldata(xmldata);
		f.setCsid(csid);
		f.setSchema_(schema);
		f.setValidated(validated);
		f.setWellformed(wellformed);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.CREATEXML</code>
	 */
	public static XmltypeRecord createxml6(Configuration configuration, String xmldata, String schema, Number validated, Number wellformed) {
		Createxml6 f = new Createxml6();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setValidated(validated);
		f.setWellformed(wellformed);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml6(String xmldata, String schema, Number validated, Number wellformed) {
		Createxml6 f = new Createxml6();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setValidated(validated);
		f.setWellformed(wellformed);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml6(Field<String> xmldata, Field<String> schema, Field<? extends Number> validated, Field<? extends Number> wellformed) {
		Createxml6 f = new Createxml6();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setValidated(validated);
		f.setWellformed(wellformed);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.CREATEXML</code>
	 */
	public static XmltypeRecord createxml7(Configuration configuration, Object xmldata, String schema, String element, Number validated) {
		Createxml7 f = new Createxml7();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setElement(element);
		f.setValidated(validated);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml7(Object xmldata, String schema, String element, Number validated) {
		Createxml7 f = new Createxml7();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setElement(element);
		f.setValidated(validated);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml7(Field<Object> xmldata, Field<String> schema, Field<String> element, Field<? extends Number> validated) {
		Createxml7 f = new Createxml7();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setElement(element);
		f.setValidated(validated);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.CREATEXML</code>
	 */
	public static XmltypeRecord createxml8(Configuration configuration, Result<Record> xmldata, String schema, String element, Number validated) {
		Createxml8 f = new Createxml8();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setElement(element);
		f.setValidated(validated);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml8(Result<Record> xmldata, String schema, String element, Number validated) {
		Createxml8 f = new Createxml8();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setElement(element);
		f.setValidated(validated);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml8(Field<Result<Record>> xmldata, Field<String> schema, Field<String> element, Field<? extends Number> validated) {
		Createxml8 f = new Createxml8();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setElement(element);
		f.setValidated(validated);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.CREATEXML</code>
	 */
	public static XmltypeRecord createxml9(Configuration configuration, Object xmldata, String schema, String element, Number validated) {
		Createxml9 f = new Createxml9();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setElement(element);
		f.setValidated(validated);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml9(Object xmldata, String schema, String element, Number validated) {
		Createxml9 f = new Createxml9();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setElement(element);
		f.setValidated(validated);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXML</code> as a field
	 */
	public static Field<XmltypeRecord> createxml9(Field<Object> xmldata, Field<String> schema, Field<String> element, Field<? extends Number> validated) {
		Createxml9 f = new Createxml9();
		f.setXmldata(xmldata);
		f.setSchema_(schema);
		f.setElement(element);
		f.setValidated(validated);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.CREATEXMLFROMBINARY</code>
	 */
	public static XmltypeRecord createxmlfrombinary(Configuration configuration, byte[] xmldata) {
		Createxmlfrombinary f = new Createxmlfrombinary();
		f.setXmldata(xmldata);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXMLFROMBINARY</code> as a field
	 */
	public static Field<XmltypeRecord> createxmlfrombinary(byte[] xmldata) {
		Createxmlfrombinary f = new Createxmlfrombinary();
		f.setXmldata(xmldata);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.CREATEXMLFROMBINARY</code> as a field
	 */
	public static Field<XmltypeRecord> createxmlfrombinary(Field<byte[]> xmldata) {
		Createxmlfrombinary f = new Createxmlfrombinary();
		f.setXmldata(xmldata);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.DELETEXML</code>
	 */
	public static XmltypeRecord deletexml(Configuration configuration, XmltypeRecord self, String xpath, String namespace) {
		Deletexml f = new Deletexml();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setNamespace(namespace);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.DELETEXML</code> as a field
	 */
	public static Field<XmltypeRecord> deletexml(XmltypeRecord self, String xpath, String namespace) {
		Deletexml f = new Deletexml();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setNamespace(namespace);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.DELETEXML</code> as a field
	 */
	public static Field<XmltypeRecord> deletexml(Field<XmltypeRecord> self, Field<String> xpath, Field<String> namespace) {
		Deletexml f = new Deletexml();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setNamespace(namespace);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.EXISTSNODE</code>
	 */
	public static BigDecimal existsnode1(Configuration configuration, XmltypeRecord self, String xpath) {
		Existsnode1 f = new Existsnode1();
		f.setSelf(self);
		f.setXpath(xpath);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.EXISTSNODE</code> as a field
	 */
	public static Field<BigDecimal> existsnode1(XmltypeRecord self, String xpath) {
		Existsnode1 f = new Existsnode1();
		f.setSelf(self);
		f.setXpath(xpath);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.EXISTSNODE</code> as a field
	 */
	public static Field<BigDecimal> existsnode1(Field<XmltypeRecord> self, Field<String> xpath) {
		Existsnode1 f = new Existsnode1();
		f.setSelf(self);
		f.setXpath(xpath);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.EXISTSNODE</code>
	 */
	public static BigDecimal existsnode2(Configuration configuration, XmltypeRecord self, String xpath, String nsmap) {
		Existsnode2 f = new Existsnode2();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setNsmap(nsmap);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.EXISTSNODE</code> as a field
	 */
	public static Field<BigDecimal> existsnode2(XmltypeRecord self, String xpath, String nsmap) {
		Existsnode2 f = new Existsnode2();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setNsmap(nsmap);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.EXISTSNODE</code> as a field
	 */
	public static Field<BigDecimal> existsnode2(Field<XmltypeRecord> self, Field<String> xpath, Field<String> nsmap) {
		Existsnode2 f = new Existsnode2();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setNsmap(nsmap);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.EXTRACT</code>
	 */
	public static XmltypeRecord extract1(Configuration configuration, XmltypeRecord self, String xpath) {
		Extract1 f = new Extract1();
		f.setSelf(self);
		f.setXpath(xpath);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.EXTRACT</code> as a field
	 */
	public static Field<XmltypeRecord> extract1(XmltypeRecord self, String xpath) {
		Extract1 f = new Extract1();
		f.setSelf(self);
		f.setXpath(xpath);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.EXTRACT</code> as a field
	 */
	public static Field<XmltypeRecord> extract1(Field<XmltypeRecord> self, Field<String> xpath) {
		Extract1 f = new Extract1();
		f.setSelf(self);
		f.setXpath(xpath);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.EXTRACT</code>
	 */
	public static XmltypeRecord extract2(Configuration configuration, XmltypeRecord self, String xpath, String nsmap) {
		Extract2 f = new Extract2();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setNsmap(nsmap);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.EXTRACT</code> as a field
	 */
	public static Field<XmltypeRecord> extract2(XmltypeRecord self, String xpath, String nsmap) {
		Extract2 f = new Extract2();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setNsmap(nsmap);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.EXTRACT</code> as a field
	 */
	public static Field<XmltypeRecord> extract2(Field<XmltypeRecord> self, Field<String> xpath, Field<String> nsmap) {
		Extract2 f = new Extract2();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setNsmap(nsmap);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.GETBLOBVAL</code>
	 */
	public static byte[] getblobval1(Configuration configuration, XmltypeRecord self, Number csid) {
		Getblobval1 f = new Getblobval1();
		f.setSelf(self);
		f.setCsid(csid);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETBLOBVAL</code> as a field
	 */
	public static Field<byte[]> getblobval1(XmltypeRecord self, Number csid) {
		Getblobval1 f = new Getblobval1();
		f.setSelf(self);
		f.setCsid(csid);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETBLOBVAL</code> as a field
	 */
	public static Field<byte[]> getblobval1(Field<XmltypeRecord> self, Field<? extends Number> csid) {
		Getblobval1 f = new Getblobval1();
		f.setSelf(self);
		f.setCsid(csid);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.GETBLOBVAL</code>
	 */
	public static byte[] getblobval2(Configuration configuration, XmltypeRecord self, Number csid, Number pflag, Number indent) {
		Getblobval2 f = new Getblobval2();
		f.setSelf(self);
		f.setCsid(csid);
		f.setPflag(pflag);
		f.setIndent(indent);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETBLOBVAL</code> as a field
	 */
	public static Field<byte[]> getblobval2(XmltypeRecord self, Number csid, Number pflag, Number indent) {
		Getblobval2 f = new Getblobval2();
		f.setSelf(self);
		f.setCsid(csid);
		f.setPflag(pflag);
		f.setIndent(indent);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETBLOBVAL</code> as a field
	 */
	public static Field<byte[]> getblobval2(Field<XmltypeRecord> self, Field<? extends Number> csid, Field<? extends Number> pflag, Field<? extends Number> indent) {
		Getblobval2 f = new Getblobval2();
		f.setSelf(self);
		f.setCsid(csid);
		f.setPflag(pflag);
		f.setIndent(indent);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.GETCLOBVAL</code>
	 */
	public static String getclobval1(Configuration configuration, XmltypeRecord self) {
		Getclobval1 f = new Getclobval1();
		f.setSelf(self);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETCLOBVAL</code> as a field
	 */
	public static Field<String> getclobval1(XmltypeRecord self) {
		Getclobval1 f = new Getclobval1();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETCLOBVAL</code> as a field
	 */
	public static Field<String> getclobval1(Field<XmltypeRecord> self) {
		Getclobval1 f = new Getclobval1();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.GETCLOBVAL</code>
	 */
	public static String getclobval2(Configuration configuration, XmltypeRecord self, Number pflag, Number indent) {
		Getclobval2 f = new Getclobval2();
		f.setSelf(self);
		f.setPflag(pflag);
		f.setIndent(indent);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETCLOBVAL</code> as a field
	 */
	public static Field<String> getclobval2(XmltypeRecord self, Number pflag, Number indent) {
		Getclobval2 f = new Getclobval2();
		f.setSelf(self);
		f.setPflag(pflag);
		f.setIndent(indent);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETCLOBVAL</code> as a field
	 */
	public static Field<String> getclobval2(Field<XmltypeRecord> self, Field<? extends Number> pflag, Field<? extends Number> indent) {
		Getclobval2 f = new Getclobval2();
		f.setSelf(self);
		f.setPflag(pflag);
		f.setIndent(indent);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.GETNAMESPACE</code>
	 */
	public static String getnamespace(Configuration configuration, XmltypeRecord self) {
		Getnamespace f = new Getnamespace();
		f.setSelf(self);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETNAMESPACE</code> as a field
	 */
	public static Field<String> getnamespace(XmltypeRecord self) {
		Getnamespace f = new Getnamespace();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETNAMESPACE</code> as a field
	 */
	public static Field<String> getnamespace(Field<XmltypeRecord> self) {
		Getnamespace f = new Getnamespace();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.GETNUMBERVAL</code>
	 */
	public static BigDecimal getnumberval(Configuration configuration, XmltypeRecord self) {
		Getnumberval f = new Getnumberval();
		f.setSelf(self);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETNUMBERVAL</code> as a field
	 */
	public static Field<BigDecimal> getnumberval(XmltypeRecord self) {
		Getnumberval f = new Getnumberval();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETNUMBERVAL</code> as a field
	 */
	public static Field<BigDecimal> getnumberval(Field<XmltypeRecord> self) {
		Getnumberval f = new Getnumberval();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.GETROOTELEMENT</code>
	 */
	public static String getrootelement(Configuration configuration, XmltypeRecord self) {
		Getrootelement f = new Getrootelement();
		f.setSelf(self);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETROOTELEMENT</code> as a field
	 */
	public static Field<String> getrootelement(XmltypeRecord self) {
		Getrootelement f = new Getrootelement();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETROOTELEMENT</code> as a field
	 */
	public static Field<String> getrootelement(Field<XmltypeRecord> self) {
		Getrootelement f = new Getrootelement();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.GETSCHEMAID</code>
	 */
	public static byte[] getschemaid(Configuration configuration, XmltypeRecord self) {
		Getschemaid f = new Getschemaid();
		f.setSelf(self);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETSCHEMAID</code> as a field
	 */
	public static Field<byte[]> getschemaid(XmltypeRecord self) {
		Getschemaid f = new Getschemaid();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETSCHEMAID</code> as a field
	 */
	public static Field<byte[]> getschemaid(Field<XmltypeRecord> self) {
		Getschemaid f = new Getschemaid();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.GETSCHEMAURL</code>
	 */
	public static String getschemaurl(Configuration configuration, XmltypeRecord self) {
		Getschemaurl f = new Getschemaurl();
		f.setSelf(self);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETSCHEMAURL</code> as a field
	 */
	public static Field<String> getschemaurl(XmltypeRecord self) {
		Getschemaurl f = new Getschemaurl();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETSCHEMAURL</code> as a field
	 */
	public static Field<String> getschemaurl(Field<XmltypeRecord> self) {
		Getschemaurl f = new Getschemaurl();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.GETSTRINGVAL</code>
	 */
	public static String getstringval1(Configuration configuration, XmltypeRecord self) {
		Getstringval1 f = new Getstringval1();
		f.setSelf(self);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETSTRINGVAL</code> as a field
	 */
	public static Field<String> getstringval1(XmltypeRecord self) {
		Getstringval1 f = new Getstringval1();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETSTRINGVAL</code> as a field
	 */
	public static Field<String> getstringval1(Field<XmltypeRecord> self) {
		Getstringval1 f = new Getstringval1();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.GETSTRINGVAL</code>
	 */
	public static String getstringval2(Configuration configuration, XmltypeRecord self, Number pflag, Number indent) {
		Getstringval2 f = new Getstringval2();
		f.setSelf(self);
		f.setPflag(pflag);
		f.setIndent(indent);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETSTRINGVAL</code> as a field
	 */
	public static Field<String> getstringval2(XmltypeRecord self, Number pflag, Number indent) {
		Getstringval2 f = new Getstringval2();
		f.setSelf(self);
		f.setPflag(pflag);
		f.setIndent(indent);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.GETSTRINGVAL</code> as a field
	 */
	public static Field<String> getstringval2(Field<XmltypeRecord> self, Field<? extends Number> pflag, Field<? extends Number> indent) {
		Getstringval2 f = new Getstringval2();
		f.setSelf(self);
		f.setPflag(pflag);
		f.setIndent(indent);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.INSERTXMLBEFORE</code>
	 */
	public static XmltypeRecord insertxmlbefore(Configuration configuration, XmltypeRecord self, String xpath, XmltypeRecord valueExpr, String namespace) {
		Insertxmlbefore f = new Insertxmlbefore();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setValueExpr(valueExpr);
		f.setNamespace(namespace);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.INSERTXMLBEFORE</code> as a field
	 */
	public static Field<XmltypeRecord> insertxmlbefore(XmltypeRecord self, String xpath, XmltypeRecord valueExpr, String namespace) {
		Insertxmlbefore f = new Insertxmlbefore();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setValueExpr(valueExpr);
		f.setNamespace(namespace);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.INSERTXMLBEFORE</code> as a field
	 */
	public static Field<XmltypeRecord> insertxmlbefore(Field<XmltypeRecord> self, Field<String> xpath, Field<XmltypeRecord> valueExpr, Field<String> namespace) {
		Insertxmlbefore f = new Insertxmlbefore();
		f.setSelf(self);
		f.setXpath(xpath);
		f.setValueExpr(valueExpr);
		f.setNamespace(namespace);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.ISFRAGMENT</code>
	 */
	public static BigDecimal isfragment(Configuration configuration, XmltypeRecord self) {
		Isfragment f = new Isfragment();
		f.setSelf(self);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.ISFRAGMENT</code> as a field
	 */
	public static Field<BigDecimal> isfragment(XmltypeRecord self) {
		Isfragment f = new Isfragment();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.ISFRAGMENT</code> as a field
	 */
	public static Field<BigDecimal> isfragment(Field<XmltypeRecord> self) {
		Isfragment f = new Isfragment();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.ISSCHEMABASED</code>
	 */
	public static BigDecimal isschemabased(Configuration configuration, XmltypeRecord self) {
		Isschemabased f = new Isschemabased();
		f.setSelf(self);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.ISSCHEMABASED</code> as a field
	 */
	public static Field<BigDecimal> isschemabased(XmltypeRecord self) {
		Isschemabased f = new Isschemabased();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.ISSCHEMABASED</code> as a field
	 */
	public static Field<BigDecimal> isschemabased(Field<XmltypeRecord> self) {
		Isschemabased f = new Isschemabased();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.ISSCHEMAVALID</code>
	 */
	public static BigDecimal isschemavalid(Configuration configuration, XmltypeRecord self, String schurl, String elem) {
		Isschemavalid f = new Isschemavalid();
		f.setSelf(self);
		f.setSchurl(schurl);
		f.setElem(elem);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.ISSCHEMAVALID</code> as a field
	 */
	public static Field<BigDecimal> isschemavalid(XmltypeRecord self, String schurl, String elem) {
		Isschemavalid f = new Isschemavalid();
		f.setSelf(self);
		f.setSchurl(schurl);
		f.setElem(elem);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.ISSCHEMAVALID</code> as a field
	 */
	public static Field<BigDecimal> isschemavalid(Field<XmltypeRecord> self, Field<String> schurl, Field<String> elem) {
		Isschemavalid f = new Isschemavalid();
		f.setSelf(self);
		f.setSchurl(schurl);
		f.setElem(elem);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.ISSCHEMAVALIDATED</code>
	 */
	public static BigDecimal isschemavalidated(Configuration configuration, XmltypeRecord self) {
		Isschemavalidated f = new Isschemavalidated();
		f.setSelf(self);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.ISSCHEMAVALIDATED</code> as a field
	 */
	public static Field<BigDecimal> isschemavalidated(XmltypeRecord self) {
		Isschemavalidated f = new Isschemavalidated();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.ISSCHEMAVALIDATED</code> as a field
	 */
	public static Field<BigDecimal> isschemavalidated(Field<XmltypeRecord> self) {
		Isschemavalidated f = new Isschemavalidated();
		f.setSelf(self);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.SCHEMAVALIDATE</code>
	 */
	public static XmltypeRecord schemavalidate(Configuration configuration, XmltypeRecord self) {
		Schemavalidate p = new Schemavalidate();
		p.setSelf(self);

		p.execute(configuration);
		return p.getSelf();
	}

	/**
	 * Call <code>SYS.XMLTYPE.SETSCHEMAVALIDATED</code>
	 */
	public static XmltypeRecord setschemavalidated(Configuration configuration, XmltypeRecord self, Integer flag) {
		Setschemavalidated p = new Setschemavalidated();
		p.setSelf(self);
		p.setFlag(flag);

		p.execute(configuration);
		return p.getSelf();
	}

	/**
	 * Call <code>SYS.XMLTYPE.TOOBJECT</code>
	 */
	public static Object toobject(Configuration configuration, XmltypeRecord self, String schema, String element) {
		Toobject p = new Toobject();
		p.setSelf(self);
		p.setSchema_(schema);
		p.setElement(element);

		p.execute(configuration);
		return p.getObject();
	}

	/**
	 * Call <code>SYS.XMLTYPE.TRANSFORM</code>
	 */
	public static XmltypeRecord transform(Configuration configuration, XmltypeRecord self, XmltypeRecord xsl, String parammap) {
		Transform f = new Transform();
		f.setSelf(self);
		f.setXsl(xsl);
		f.setParammap(parammap);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SYS.XMLTYPE.TRANSFORM</code> as a field
	 */
	public static Field<XmltypeRecord> transform(XmltypeRecord self, XmltypeRecord xsl, String parammap) {
		Transform f = new Transform();
		f.setSelf(self);
		f.setXsl(xsl);
		f.setParammap(parammap);

		return f.asField();
	}

	/**
	 * Get <code>SYS.XMLTYPE.TRANSFORM</code> as a field
	 */
	public static Field<XmltypeRecord> transform(Field<XmltypeRecord> self, Field<XmltypeRecord> xsl, Field<String> parammap) {
		Transform f = new Transform();
		f.setSelf(self);
		f.setXsl(xsl);
		f.setParammap(parammap);

		return f.asField();
	}

	/**
	 * Call <code>SYS.XMLTYPE.XMLTYPE</code>
	 */
	public static Xmltype1 xmltype1(Configuration configuration, XmltypeRecord self, String xmldata, String schema, Number validated, Number wellformed) {
		Xmltype1 p = new Xmltype1();
		p.setSelf(self);
		p.setXmldata(xmldata);
		p.setSchema_(schema);
		p.setValidated(validated);
		p.setWellformed(wellformed);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>SYS.XMLTYPE.XMLTYPE</code>
	 */
	public static Xmltype2 xmltype2(Configuration configuration, XmltypeRecord self, byte[] xmldata, Number csid, String schema, Number validated, Number wellformed) {
		Xmltype2 p = new Xmltype2();
		p.setSelf(self);
		p.setXmldata(xmldata);
		p.setCsid(csid);
		p.setSchema_(schema);
		p.setValidated(validated);
		p.setWellformed(wellformed);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>SYS.XMLTYPE.XMLTYPE</code>
	 */
	public static Xmltype3 xmltype3(Configuration configuration, XmltypeRecord self, byte[] xmldata, Number csid, String schema, Number validated, Number wellformed) {
		Xmltype3 p = new Xmltype3();
		p.setSelf(self);
		p.setXmldata(xmldata);
		p.setCsid(csid);
		p.setSchema_(schema);
		p.setValidated(validated);
		p.setWellformed(wellformed);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>SYS.XMLTYPE.XMLTYPE</code>
	 */
	public static Xmltype4 xmltype4(Configuration configuration, XmltypeRecord self, String xmldata, String schema, Number validated, Number wellformed) {
		Xmltype4 p = new Xmltype4();
		p.setSelf(self);
		p.setXmldata(xmldata);
		p.setSchema_(schema);
		p.setValidated(validated);
		p.setWellformed(wellformed);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>SYS.XMLTYPE.XMLTYPE</code>
	 */
	public static Xmltype5 xmltype5(Configuration configuration, XmltypeRecord self, Object xmldata, String schema, String element, Number validated) {
		Xmltype5 p = new Xmltype5();
		p.setSelf(self);
		p.setXmldata(xmldata);
		p.setSchema_(schema);
		p.setElement(element);
		p.setValidated(validated);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>SYS.XMLTYPE.XMLTYPE</code>
	 */
	public static Xmltype6 xmltype6(Configuration configuration, XmltypeRecord self, Object xmldata, String schema, String element, Number validated) {
		Xmltype6 p = new Xmltype6();
		p.setSelf(self);
		p.setXmldata(xmldata);
		p.setSchema_(schema);
		p.setElement(element);
		p.setValidated(validated);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>SYS.XMLTYPE.XMLTYPE</code>
	 */
	public static Xmltype7 xmltype7(Configuration configuration, XmltypeRecord self, Result<Record> xmldata, String schema, String element, Number validated) {
		Xmltype7 p = new Xmltype7();
		p.setSelf(self);
		p.setXmldata(xmldata);
		p.setSchema_(schema);
		p.setElement(element);
		p.setValidated(validated);

		p.execute(configuration);
		return p;
	}

	/**
	 * No further instances allowed
	 */
	private Xmltype() {
		super("XMLTYPE", Sys.SYS);

		// Initialise data type
		getDataType();
	}
}
