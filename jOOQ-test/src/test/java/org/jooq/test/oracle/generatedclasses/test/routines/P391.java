/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.test.routines;


import java.math.BigDecimal;

import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.test.oracle.generatedclasses.test.Test;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class P391 extends AbstractRoutine<java.lang.Void> {

	private static final long serialVersionUID = -982012066;

	/**
	 * The parameter <code>TEST.P391.I1</code>.
	 */
	public static final Parameter<BigDecimal> I1 = createParameter("I1", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>TEST.P391.IO1</code>.
	 */
	public static final Parameter<BigDecimal> IO1 = createParameter("IO1", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>TEST.P391.O1</code>.
	 */
	public static final Parameter<BigDecimal> O1 = createParameter("O1", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>TEST.P391.O2</code>.
	 */
	public static final Parameter<BigDecimal> O2 = createParameter("O2", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>TEST.P391.IO2</code>.
	 */
	public static final Parameter<BigDecimal> IO2 = createParameter("IO2", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>TEST.P391.I2</code>.
	 */
	public static final Parameter<BigDecimal> I2 = createParameter("I2", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * Create a new routine call instance
	 */
	public P391() {
		super("P391", Test.TEST);

		addInParameter(I1);
		addInOutParameter(IO1);
		addOutParameter(O1);
		addOutParameter(O2);
		addInOutParameter(IO2);
		addInParameter(I2);
	}

	/**
	 * Set the <code>I1</code> parameter IN value to the routine
	 */
	public void setI1(Number value) {
		setNumber(I1, value);
	}

	/**
	 * Set the <code>IO1</code> parameter IN value to the routine
	 */
	public void setIo1(Number value) {
		setNumber(IO1, value);
	}

	/**
	 * Set the <code>IO2</code> parameter IN value to the routine
	 */
	public void setIo2(Number value) {
		setNumber(IO2, value);
	}

	/**
	 * Set the <code>I2</code> parameter IN value to the routine
	 */
	public void setI2(Number value) {
		setNumber(I2, value);
	}

	/**
	 * Get the <code>IO1</code> parameter OUT value from the routine
	 */
	public BigDecimal getIo1() {
		return getValue(IO1);
	}

	/**
	 * Get the <code>O1</code> parameter OUT value from the routine
	 */
	public BigDecimal getO1() {
		return getValue(O1);
	}

	/**
	 * Get the <code>O2</code> parameter OUT value from the routine
	 */
	public BigDecimal getO2() {
		return getValue(O2);
	}

	/**
	 * Get the <code>IO2</code> parameter OUT value from the routine
	 */
	public BigDecimal getIo2() {
		return getValue(IO2);
	}
}
