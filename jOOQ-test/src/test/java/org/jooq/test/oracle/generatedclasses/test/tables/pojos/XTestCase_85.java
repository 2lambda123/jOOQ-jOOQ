/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.test.tables.pojos;


import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "X_TEST_CASE_85", schema = "TEST")
public class XTestCase_85 implements Serializable {

	private static final long serialVersionUID = -701920433;

	private Integer id;
	private Integer xUnusedId;
	private String  xUnusedName;

	public XTestCase_85() {}

	public XTestCase_85(XTestCase_85 value) {
		this.id = value.id;
		this.xUnusedId = value.xUnusedId;
		this.xUnusedName = value.xUnusedName;
	}

	public XTestCase_85(
		Integer id,
		Integer xUnusedId,
		String  xUnusedName
	) {
		this.id = id;
		this.xUnusedId = xUnusedId;
		this.xUnusedName = xUnusedName;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	@NotNull
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "X_UNUSED_ID", precision = 7)
	public Integer getXUnusedId() {
		return this.xUnusedId;
	}

	public void setXUnusedId(Integer xUnusedId) {
		this.xUnusedId = xUnusedId;
	}

	@Column(name = "X_UNUSED_NAME", length = 10)
	@Size(max = 10)
	public String getXUnusedName() {
		return this.xUnusedName;
	}

	public void setXUnusedName(String xUnusedName) {
		this.xUnusedName = xUnusedName;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final XTestCase_85 other = (XTestCase_85) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		}
		else if (!id.equals(other.id))
			return false;
		if (xUnusedId == null) {
			if (other.xUnusedId != null)
				return false;
		}
		else if (!xUnusedId.equals(other.xUnusedId))
			return false;
		if (xUnusedName == null) {
			if (other.xUnusedName != null)
				return false;
		}
		else if (!xUnusedName.equals(other.xUnusedName))
			return false;
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((xUnusedId == null) ? 0 : xUnusedId.hashCode());
		result = prime * result + ((xUnusedName == null) ? 0 : xUnusedName.hashCode());
		return result;
	}
}
