/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.test.tables.pojos;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "X_TEST_CASE_85", schema = "TEST")
public class XTestCase_85 implements java.io.Serializable {

	private static final long serialVersionUID = 1845405945;

	private java.lang.Integer id;
	private java.lang.Integer xUnusedId;
	private java.lang.String  xUnusedName;

	public XTestCase_85() {}

	public XTestCase_85(
		java.lang.Integer id,
		java.lang.Integer xUnusedId,
		java.lang.String  xUnusedName
	) {
		this.id = id;
		this.xUnusedId = xUnusedId;
		this.xUnusedName = xUnusedName;
	}

	@javax.persistence.Id
	@javax.persistence.Column(name = "ID", unique = true, nullable = false, precision = 7)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getId() {
		return this.id;
	}

	public void setId(java.lang.Integer id) {
		this.id = id;
	}

	@javax.persistence.Column(name = "X_UNUSED_ID", precision = 7)
	public java.lang.Integer getXUnusedId() {
		return this.xUnusedId;
	}

	public void setXUnusedId(java.lang.Integer xUnusedId) {
		this.xUnusedId = xUnusedId;
	}

	@javax.persistence.Column(name = "X_UNUSED_NAME", length = 10)
	@javax.validation.constraints.Size(max = 10)
	public java.lang.String getXUnusedName() {
		return this.xUnusedName;
	}

	public void setXUnusedName(java.lang.String xUnusedName) {
		this.xUnusedName = xUnusedName;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final XTestCase_85 other = (XTestCase_85) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		}
		else if (!id.equals(other.id))
			return false;
		if (xUnusedId == null) {
			if (other.xUnusedId != null)
				return false;
		}
		else if (!xUnusedId.equals(other.xUnusedId))
			return false;
		if (xUnusedName == null) {
			if (other.xUnusedName != null)
				return false;
		}
		else if (!xUnusedName.equals(other.xUnusedName))
			return false;
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((xUnusedId == null) ? 0 : xUnusedId.hashCode());
		result = prime * result + ((xUnusedName == null) ? 0 : xUnusedName.hashCode());
		return result;
	}
}
