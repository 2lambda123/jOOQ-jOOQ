/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.test.tables;


import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.test.oracle.generatedclasses.test.Test;
import org.jooq.test.oracle.generatedclasses.test.tables.records.TReservedRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TReserved extends TableImpl<TReservedRecord> {

	private static final long serialVersionUID = 1853065081;

	/**
	 * The reference instance of <code>TEST.T_RESERVED</code>
	 */
	public static final TReserved T_RESERVED = new TReserved();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TReservedRecord> getRecordType() {
		return TReservedRecord.class;
	}

	/**
	 * The column <code>TEST.T_RESERVED.abstract</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> ABSTRACT = createField("abstract", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.case</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> CASE = createField("case", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.catch</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> CATCH = createField("catch", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.class</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> CLASS = createField("class", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.def</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> DEF = createField("def", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.do</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> DO = createField("do", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.else</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> ELSE = createField("else", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.extends</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> EXTENDS = createField("extends", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.false</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> FALSE = createField("false", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.final</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> FINAL = createField("final", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.finally</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> FINALLY = createField("finally", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.for</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> FOR = createField("for", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.forSome</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> FORSOME = createField("forSome", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.if</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> IF = createField("if", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.implicit</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> IMPLICIT = createField("implicit", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.import</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> IMPORT = createField("import", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.lazy</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> LAZY = createField("lazy", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.match</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> MATCH = createField("match", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.new</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> NEW = createField("new", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.null</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> NULL = createField("null", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.object</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> OBJECT = createField("object", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.override</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> OVERRIDE = createField("override", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.package</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> PACKAGE = createField("package", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.private</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> PRIVATE = createField("private", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.protected</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> PROTECTED = createField("protected", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.return</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> RETURN = createField("return", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.sealed</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> SEALED = createField("sealed", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.super</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> SUPER = createField("super", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.this</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> THIS = createField("this", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.throw</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> THROW = createField("throw", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.trait</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> TRAIT = createField("trait", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.try</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> TRY = createField("try", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.true</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> TRUE = createField("true", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.type</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> TYPE = createField("type", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.val</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> VAL = createField("val", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.var</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> VAR = createField("var", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.while</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> WHILE = createField("while", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.with</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> WITH = createField("with", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>TEST.T_RESERVED.yield</code>.
	 */
	public final TableField<TReservedRecord, BigDecimal> YIELD = createField("yield", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * Create a <code>TEST.T_RESERVED</code> table reference
	 */
	public TReserved() {
		this("T_RESERVED", null);
	}

	/**
	 * Create an aliased <code>TEST.T_RESERVED</code> table reference
	 */
	public TReserved(String alias) {
		this(alias, T_RESERVED);
	}

	private TReserved(String alias, Table<TReservedRecord> aliased) {
		this(alias, aliased, null);
	}

	private TReserved(String alias, Table<TReservedRecord> aliased, Field<?>[] parameters) {
		super(alias, Test.TEST, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TReserved as(String alias) {
		return new TReserved(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TReserved rename(String name) {
		return new TReserved(name, null);
	}
}
