/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.test.tables.pojos;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "T_TRIGGERS", schema = "TEST")
public class TTriggers implements java.io.Serializable {

	private static final long serialVersionUID = -635996585;

	private java.lang.Integer idGenerated;
	private java.lang.Integer id;
	private java.lang.Integer counter;

	public TTriggers() {}

	public TTriggers(
		java.lang.Integer idGenerated,
		java.lang.Integer id,
		java.lang.Integer counter
	) {
		this.idGenerated = idGenerated;
		this.id = id;
		this.counter = counter;
	}

	@javax.persistence.Id
	@javax.persistence.Column(name = "ID_GENERATED", unique = true, nullable = false, precision = 7)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getIdGenerated() {
		return this.idGenerated;
	}

	public void setIdGenerated(java.lang.Integer idGenerated) {
		this.idGenerated = idGenerated;
	}

	@javax.persistence.Column(name = "ID", nullable = false, precision = 7)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getId() {
		return this.id;
	}

	public void setId(java.lang.Integer id) {
		this.id = id;
	}

	@javax.persistence.Column(name = "COUNTER", nullable = false, precision = 7)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getCounter() {
		return this.counter;
	}

	public void setCounter(java.lang.Integer counter) {
		this.counter = counter;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final TTriggers other = (TTriggers) obj;
		if (idGenerated == null) {
			if (other.idGenerated != null)
				return false;
		}
		else if (!idGenerated.equals(other.idGenerated))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		}
		else if (!id.equals(other.id))
			return false;
		if (counter == null) {
			if (other.counter != null)
				return false;
		}
		else if (!counter.equals(other.counter))
			return false;
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idGenerated == null) ? 0 : idGenerated.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((counter == null) ? 0 : counter.hashCode());
		return result;
	}
}
