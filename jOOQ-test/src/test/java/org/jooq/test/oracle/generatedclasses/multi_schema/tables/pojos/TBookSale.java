/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.multi_schema.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "T_BOOK_SALE", schema = "MULTI_SCHEMA")
public class TBookSale implements Serializable {

	private static final long serialVersionUID = -1288907341;

	private Integer    id;
	private Integer    bookId;
	private String     bookStoreName;
	private Date       soldAt;
	private BigDecimal soldFor;

	public TBookSale() {}

	public TBookSale(TBookSale value) {
		this.id = value.id;
		this.bookId = value.bookId;
		this.bookStoreName = value.bookStoreName;
		this.soldAt = value.soldAt;
		this.soldFor = value.soldFor;
	}

	public TBookSale(
		Integer    id,
		Integer    bookId,
		String     bookStoreName,
		Date       soldAt,
		BigDecimal soldFor
	) {
		this.id = id;
		this.bookId = bookId;
		this.bookStoreName = bookStoreName;
		this.soldAt = soldAt;
		this.soldFor = soldFor;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	@NotNull
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "BOOK_ID", nullable = false, precision = 7)
	@NotNull
	public Integer getBookId() {
		return this.bookId;
	}

	public void setBookId(Integer bookId) {
		this.bookId = bookId;
	}

	@Column(name = "BOOK_STORE_NAME", nullable = false, length = 400)
	@NotNull
	@Size(max = 400)
	public String getBookStoreName() {
		return this.bookStoreName;
	}

	public void setBookStoreName(String bookStoreName) {
		this.bookStoreName = bookStoreName;
	}

	@Column(name = "SOLD_AT", nullable = false)
	@NotNull
	public Date getSoldAt() {
		return this.soldAt;
	}

	public void setSoldAt(Date soldAt) {
		this.soldAt = soldAt;
	}

	@Column(name = "SOLD_FOR", nullable = false, precision = 10, scale = 2)
	@NotNull
	public BigDecimal getSoldFor() {
		return this.soldFor;
	}

	public void setSoldFor(BigDecimal soldFor) {
		this.soldFor = soldFor;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final TBookSale other = (TBookSale) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		}
		else if (!id.equals(other.id))
			return false;
		if (bookId == null) {
			if (other.bookId != null)
				return false;
		}
		else if (!bookId.equals(other.bookId))
			return false;
		if (bookStoreName == null) {
			if (other.bookStoreName != null)
				return false;
		}
		else if (!bookStoreName.equals(other.bookStoreName))
			return false;
		if (soldAt == null) {
			if (other.soldAt != null)
				return false;
		}
		else if (!soldAt.equals(other.soldAt))
			return false;
		if (soldFor == null) {
			if (other.soldFor != null)
				return false;
		}
		else if (!soldFor.equals(other.soldFor))
			return false;
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((bookId == null) ? 0 : bookId.hashCode());
		result = prime * result + ((bookStoreName == null) ? 0 : bookStoreName.hashCode());
		result = prime * result + ((soldAt == null) ? 0 : soldAt.hashCode());
		result = prime * result + ((soldFor == null) ? 0 : soldFor.hashCode());
		return result;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("TBookSale (");

		sb.append(id);
		sb.append(", ").append(bookId);
		sb.append(", ").append(bookStoreName);
		sb.append(", ").append(soldAt);
		sb.append(", ").append(soldFor);

		sb.append(")");
		return sb.toString();
	}
}
