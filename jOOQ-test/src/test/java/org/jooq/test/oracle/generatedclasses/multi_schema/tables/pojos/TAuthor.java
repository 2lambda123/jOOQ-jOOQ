/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.multi_schema.tables.pojos;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "T_AUTHOR", schema = "MULTI_SCHEMA")
public class TAuthor implements java.io.Serializable {

	private static final long serialVersionUID = 601851651;

	private java.lang.Integer                                                 id;
	private java.lang.String                                                  firstName;
	private java.lang.String                                                  lastName;
	private java.sql.Date                                                     dateOfBirth;
	private java.lang.Integer                                                 yearOfBirth;
	private org.jooq.test.oracle.generatedclasses.test.udt.pojos.UAddressType address;

	public TAuthor() {}

	public TAuthor(
		java.lang.Integer                                                 id,
		java.lang.String                                                  firstName,
		java.lang.String                                                  lastName,
		java.sql.Date                                                     dateOfBirth,
		java.lang.Integer                                                 yearOfBirth,
		org.jooq.test.oracle.generatedclasses.test.udt.pojos.UAddressType address
	) {
		this.id = id;
		this.firstName = firstName;
		this.lastName = lastName;
		this.dateOfBirth = dateOfBirth;
		this.yearOfBirth = yearOfBirth;
		this.address = address;
	}

	@javax.persistence.Id
	@javax.persistence.Column(name = "ID", unique = true, nullable = false, precision = 7)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getId() {
		return this.id;
	}

	public void setId(java.lang.Integer id) {
		this.id = id;
	}

	@javax.persistence.Column(name = "FIRST_NAME", length = 50)
	@javax.validation.constraints.Size(max = 50)
	public java.lang.String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(java.lang.String firstName) {
		this.firstName = firstName;
	}

	@javax.persistence.Column(name = "LAST_NAME", nullable = false, length = 50)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 50)
	public java.lang.String getLastName() {
		return this.lastName;
	}

	public void setLastName(java.lang.String lastName) {
		this.lastName = lastName;
	}

	@javax.persistence.Column(name = "DATE_OF_BIRTH", length = 7)
	public java.sql.Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(java.sql.Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@javax.persistence.Column(name = "YEAR_OF_BIRTH", precision = 7)
	public java.lang.Integer getYearOfBirth() {
		return this.yearOfBirth;
	}

	public void setYearOfBirth(java.lang.Integer yearOfBirth) {
		this.yearOfBirth = yearOfBirth;
	}

	@javax.persistence.Column(name = "ADDRESS", length = 1)
	public org.jooq.test.oracle.generatedclasses.test.udt.pojos.UAddressType getAddress() {
		return this.address;
	}

	public void setAddress(org.jooq.test.oracle.generatedclasses.test.udt.pojos.UAddressType address) {
		this.address = address;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final TAuthor other = (TAuthor) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		}
		else if (!id.equals(other.id))
			return false;
		if (firstName == null) {
			if (other.firstName != null)
				return false;
		}
		else if (!firstName.equals(other.firstName))
			return false;
		if (lastName == null) {
			if (other.lastName != null)
				return false;
		}
		else if (!lastName.equals(other.lastName))
			return false;
		if (dateOfBirth == null) {
			if (other.dateOfBirth != null)
				return false;
		}
		else if (!dateOfBirth.equals(other.dateOfBirth))
			return false;
		if (yearOfBirth == null) {
			if (other.yearOfBirth != null)
				return false;
		}
		else if (!yearOfBirth.equals(other.yearOfBirth))
			return false;
		if (address == null) {
			if (other.address != null)
				return false;
		}
		else if (!address.equals(other.address))
			return false;
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((firstName == null) ? 0 : firstName.hashCode());
		result = prime * result + ((lastName == null) ? 0 : lastName.hashCode());
		result = prime * result + ((dateOfBirth == null) ? 0 : dateOfBirth.hashCode());
		result = prime * result + ((yearOfBirth == null) ? 0 : yearOfBirth.hashCode());
		result = prime * result + ((address == null) ? 0 : address.hashCode());
		return result;
	}
}
