/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.test.tables;


import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.test.oracle.generatedclasses.test.Test;
import org.jooq.test.oracle.generatedclasses.test.tables.records.VIncompleteRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VIncomplete extends TableImpl<VIncompleteRecord> {

	private static final long serialVersionUID = -773315001;

	/**
	 * The reference instance of <code>TEST.V_INCOMPLETE</code>
	 */
	public static final VIncomplete V_INCOMPLETE = new VIncomplete();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<VIncompleteRecord> getRecordType() {
		return VIncompleteRecord.class;
	}

	/**
	 * The column <code>TEST.V_INCOMPLETE.ID</code>.
	 */
	public final TableField<VIncompleteRecord, Object> ID = createField("ID", org.jooq.impl.DefaultDataType.getDefaultDataType("UNDEFINED"), this, "");

	/**
	 * The column <code>TEST.V_INCOMPLETE.AUTHOR_ID</code>.
	 */
	public final TableField<VIncompleteRecord, Object> AUTHOR_ID = createField("AUTHOR_ID", org.jooq.impl.DefaultDataType.getDefaultDataType("UNDEFINED"), this, "");

	/**
	 * The column <code>TEST.V_INCOMPLETE.CO_AUTHOR_ID</code>.
	 */
	public final TableField<VIncompleteRecord, Object> CO_AUTHOR_ID = createField("CO_AUTHOR_ID", org.jooq.impl.DefaultDataType.getDefaultDataType("UNDEFINED"), this, "");

	/**
	 * The column <code>TEST.V_INCOMPLETE.DETAILS_ID</code>.
	 */
	public final TableField<VIncompleteRecord, Object> DETAILS_ID = createField("DETAILS_ID", org.jooq.impl.DefaultDataType.getDefaultDataType("UNDEFINED"), this, "");

	/**
	 * The column <code>TEST.V_INCOMPLETE.TITLE</code>.
	 */
	public final TableField<VIncompleteRecord, Object> TITLE = createField("TITLE", org.jooq.impl.DefaultDataType.getDefaultDataType("UNDEFINED"), this, "");

	/**
	 * The column <code>TEST.V_INCOMPLETE.PUBLISHED_IN</code>.
	 */
	public final TableField<VIncompleteRecord, Object> PUBLISHED_IN = createField("PUBLISHED_IN", org.jooq.impl.DefaultDataType.getDefaultDataType("UNDEFINED"), this, "");

	/**
	 * The column <code>TEST.V_INCOMPLETE.LANGUAGE_ID</code>.
	 */
	public final TableField<VIncompleteRecord, Object> LANGUAGE_ID = createField("LANGUAGE_ID", org.jooq.impl.DefaultDataType.getDefaultDataType("UNDEFINED"), this, "");

	/**
	 * The column <code>TEST.V_INCOMPLETE.CONTENT_TEXT</code>.
	 */
	public final TableField<VIncompleteRecord, Object> CONTENT_TEXT = createField("CONTENT_TEXT", org.jooq.impl.DefaultDataType.getDefaultDataType("UNDEFINED"), this, "");

	/**
	 * The column <code>TEST.V_INCOMPLETE.CONTENT_PDF</code>.
	 */
	public final TableField<VIncompleteRecord, Object> CONTENT_PDF = createField("CONTENT_PDF", org.jooq.impl.DefaultDataType.getDefaultDataType("UNDEFINED"), this, "");

	/**
	 * The column <code>TEST.V_INCOMPLETE.REC_VERSION</code>.
	 */
	public final TableField<VIncompleteRecord, Object> REC_VERSION = createField("REC_VERSION", org.jooq.impl.DefaultDataType.getDefaultDataType("UNDEFINED"), this, "");

	/**
	 * The column <code>TEST.V_INCOMPLETE.REC_TIMESTAMP</code>.
	 */
	public final TableField<VIncompleteRecord, Object> REC_TIMESTAMP = createField("REC_TIMESTAMP", org.jooq.impl.DefaultDataType.getDefaultDataType("UNDEFINED"), this, "");

	/**
	 * Create a <code>TEST.V_INCOMPLETE</code> table reference
	 */
	public VIncomplete() {
		this("V_INCOMPLETE", null);
	}

	/**
	 * Create an aliased <code>TEST.V_INCOMPLETE</code> table reference
	 */
	public VIncomplete(String alias) {
		this(alias, V_INCOMPLETE);
	}

	private VIncomplete(String alias, Table<VIncompleteRecord> aliased) {
		this(alias, aliased, null);
	}

	private VIncomplete(String alias, Table<VIncompleteRecord> aliased, Field<?>[] parameters) {
		super(alias, Test.TEST, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public VIncomplete as(String alias) {
		return new VIncomplete(alias, this);
	}

	/**
	 * Rename this table
	 */
	public VIncomplete rename(String name) {
		return new VIncomplete(name, null);
	}
}
