/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.test.tables.pojos;


import java.io.Serializable;
import java.sql.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "T_ARRAYS", schema = "TEST")
public class TArrays implements Serializable {

	private static final long serialVersionUID = -865798907;

	private Integer       id;
	private List<String>  stringArray;
	private List<Integer> numberArray;
	private List<Long>    numberLongArray;
	private List<Date>    dateArray;

	public TArrays() {}

	public TArrays(TArrays value) {
		this.id = value.id;
		this.stringArray = value.stringArray;
		this.numberArray = value.numberArray;
		this.numberLongArray = value.numberLongArray;
		this.dateArray = value.dateArray;
	}

	public TArrays(
		Integer       id,
		List<String>  stringArray,
		List<Integer> numberArray,
		List<Long>    numberLongArray,
		List<Date>    dateArray
	) {
		this.id = id;
		this.stringArray = stringArray;
		this.numberArray = numberArray;
		this.numberLongArray = numberLongArray;
		this.dateArray = dateArray;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	@NotNull
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "STRING_ARRAY")
	public List<String> getStringArray() {
		return this.stringArray;
	}

	public void setStringArray(List<String> stringArray) {
		this.stringArray = stringArray;
	}

	@Column(name = "NUMBER_ARRAY")
	public List<Integer> getNumberArray() {
		return this.numberArray;
	}

	public void setNumberArray(List<Integer> numberArray) {
		this.numberArray = numberArray;
	}

	@Column(name = "NUMBER_LONG_ARRAY")
	public List<Long> getNumberLongArray() {
		return this.numberLongArray;
	}

	public void setNumberLongArray(List<Long> numberLongArray) {
		this.numberLongArray = numberLongArray;
	}

	@Column(name = "DATE_ARRAY")
	public List<Date> getDateArray() {
		return this.dateArray;
	}

	public void setDateArray(List<Date> dateArray) {
		this.dateArray = dateArray;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		final TArrays other = (TArrays) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		}
		else if (!id.equals(other.id))
			return false;
		if (stringArray == null) {
			if (other.stringArray != null)
				return false;
		}
		else if (!stringArray.equals(other.stringArray))
			return false;
		if (numberArray == null) {
			if (other.numberArray != null)
				return false;
		}
		else if (!numberArray.equals(other.numberArray))
			return false;
		if (numberLongArray == null) {
			if (other.numberLongArray != null)
				return false;
		}
		else if (!numberLongArray.equals(other.numberLongArray))
			return false;
		if (dateArray == null) {
			if (other.dateArray != null)
				return false;
		}
		else if (!dateArray.equals(other.dateArray))
			return false;
		return true;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((stringArray == null) ? 0 : stringArray.hashCode());
		result = prime * result + ((numberArray == null) ? 0 : numberArray.hashCode());
		result = prime * result + ((numberLongArray == null) ? 0 : numberLongArray.hashCode());
		result = prime * result + ((dateArray == null) ? 0 : dateArray.hashCode());
		return result;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("TArrays (");

		sb.append(id);
		sb.append(", ").append(stringArray);
		sb.append(", ").append(numberArray);
		sb.append(", ").append(numberLongArray);
		sb.append(", ").append(dateArray);

		sb.append(")");
		return sb.toString();
	}
}
