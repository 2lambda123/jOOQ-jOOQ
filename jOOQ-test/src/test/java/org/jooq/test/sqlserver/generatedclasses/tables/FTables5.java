/**
 * This class is generated by jOOQ
 */
package org.jooq.test.sqlserver.generatedclasses.tables;


import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.test.sqlserver.generatedclasses.Dbo;
import org.jooq.test.sqlserver.generatedclasses.tables.records.FTables5Record;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FTables5 extends TableImpl<FTables5Record> {

	private static final long serialVersionUID = -592776284;

	/**
	 * The reference instance of <code>dbo.f_tables5</code>
	 */
	public static final FTables5 F_TABLES5 = new FTables5();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FTables5Record> getRecordType() {
		return FTables5Record.class;
	}

	/**
	 * The column <code>dbo.f_tables5.v</code>.
	 */
	public final TableField<FTables5Record, Integer> V = createField("v", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>dbo.f_tables5.s</code>.
	 */
	public final TableField<FTables5Record, Integer> S = createField("s", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>dbo.f_tables5</code> table reference
	 */
	public FTables5() {
		this("f_tables5", null);
	}

	/**
	 * Create an aliased <code>dbo.f_tables5</code> table reference
	 */
	public FTables5(String alias) {
		this(alias, F_TABLES5);
	}

	private FTables5(String alias, Table<FTables5Record> aliased) {
		this(alias, aliased, new Field[3]);
	}

	private FTables5(String alias, Table<FTables5Record> aliased, Field<?>[] parameters) {
		super(alias, Dbo.DBO, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FTables5 as(String alias) {
		return new FTables5(alias, this, parameters);
	}

	/**
	 * Rename this table
	 */
	public FTables5 rename(String name) {
		return new FTables5(name, null, parameters);
	}

	/**
	 * Call this table-valued function
	 */
	public FTables5 call(Integer v1, Integer v2, Integer v3) {
		return new FTables5(getName(), null, new Field[] { DSL.val(v1), DSL.val(v2), DSL.val(v3) });
	}

	/**
	 * Call this table-valued function
	 */
	public FTables5 call(Field<Integer> v1, Field<Integer> v2, Field<Integer> v3) {
		return new FTables5(getName(), null, new Field[] { v1, v2, v3 });
	}
}
