/**
 * This class is generated by jOOQ
 */
package org.jooq.test.sqlserver.generatedclasses;


import java.sql.Date;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.test.sqlserver.generatedclasses.routines.F317;
import org.jooq.test.sqlserver.generatedclasses.routines.FAuthorExists;
import org.jooq.test.sqlserver.generatedclasses.routines.FNumber;
import org.jooq.test.sqlserver.generatedclasses.routines.FOne;
import org.jooq.test.sqlserver.generatedclasses.routines.P1490;
import org.jooq.test.sqlserver.generatedclasses.routines.P391;
import org.jooq.test.sqlserver.generatedclasses.routines.P4106;
import org.jooq.test.sqlserver.generatedclasses.routines.PAuthorExists;
import org.jooq.test.sqlserver.generatedclasses.routines.PCreateAuthor;
import org.jooq.test.sqlserver.generatedclasses.routines.PCreateAuthorByName;
import org.jooq.test.sqlserver.generatedclasses.routines.PDefault;
import org.jooq.test.sqlserver.generatedclasses.routines.PRaise;
import org.jooq.test.sqlserver.generatedclasses.routines.PRaise_3696;
import org.jooq.test.sqlserver.generatedclasses.routines.PResults;
import org.jooq.test.sqlserver.generatedclasses.routines.PResultsAndOutParameters;
import org.jooq.test.sqlserver.generatedclasses.routines.PResultsAndRowCounts;
import org.jooq.test.sqlserver.generatedclasses.routines.PUnused;
import org.jooq.test.sqlserver.generatedclasses.tables.FTables1;
import org.jooq.test.sqlserver.generatedclasses.tables.FTables2;
import org.jooq.test.sqlserver.generatedclasses.tables.FTables3;
import org.jooq.test.sqlserver.generatedclasses.tables.FTables4;
import org.jooq.test.sqlserver.generatedclasses.tables.FTables5;


/**
 * Convenience access to all stored procedures and functions in dbo
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

	/**
	 * Call <code>dbo.f_author_exists</code>
	 */
	public static Integer fAuthorExists(Configuration configuration, String authorName) {
		FAuthorExists f = new FAuthorExists();
		f.setAuthorName(authorName);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>dbo.f_author_exists</code> as a field
	 */
	public static Field<Integer> fAuthorExists(String authorName) {
		FAuthorExists f = new FAuthorExists();
		f.setAuthorName(authorName);

		return f.asField();
	}

	/**
	 * Get <code>dbo.f_author_exists</code> as a field
	 */
	public static Field<Integer> fAuthorExists(Field<String> authorName) {
		FAuthorExists f = new FAuthorExists();
		f.setAuthorName(authorName);

		return f.asField();
	}

	/**
	 * Call <code>dbo.f_number</code>
	 */
	public static Integer fNumber(Configuration configuration, Integer n) {
		FNumber f = new FNumber();
		f.setN(n);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>dbo.f_number</code> as a field
	 */
	public static Field<Integer> fNumber(Integer n) {
		FNumber f = new FNumber();
		f.setN(n);

		return f.asField();
	}

	/**
	 * Get <code>dbo.f_number</code> as a field
	 */
	public static Field<Integer> fNumber(Field<Integer> n) {
		FNumber f = new FNumber();
		f.setN(n);

		return f.asField();
	}

	/**
	 * Call <code>dbo.f_one</code>
	 */
	public static Integer fOne(Configuration configuration) {
		FOne f = new FOne();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>dbo.f_one</code> as a field
	 */
	public static Field<Integer> fOne() {
		FOne f = new FOne();

		return f.asField();
	}

	/**
	 * Call <code>dbo.f317</code>
	 */
	public static Integer f317(Configuration configuration, Integer p1, Integer p2, Integer p3, Integer p4) {
		F317 f = new F317();
		f.setP1(p1);
		f.setP2(p2);
		f.setP3(p3);
		f.setP4(p4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>dbo.f317</code> as a field
	 */
	public static Field<Integer> f317(Integer p1, Integer p2, Integer p3, Integer p4) {
		F317 f = new F317();
		f.setP1(p1);
		f.setP2(p2);
		f.setP3(p3);
		f.setP4(p4);

		return f.asField();
	}

	/**
	 * Get <code>dbo.f317</code> as a field
	 */
	public static Field<Integer> f317(Field<Integer> p1, Field<Integer> p2, Field<Integer> p3, Field<Integer> p4) {
		F317 f = new F317();
		f.setP1(p1);
		f.setP2(p2);
		f.setP3(p3);
		f.setP4(p4);

		return f.asField();
	}

	/**
	 * Call <code>dbo.p_author_exists</code>
	 */
	public static PAuthorExists pAuthorExists(Configuration configuration, String authorName, Integer result) {
		PAuthorExists p = new PAuthorExists();
		p.setAuthorName(authorName);
		p.setResult(result);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>dbo.p_create_author</code>
	 */
	public static Integer pCreateAuthor(Configuration configuration) {
		PCreateAuthor p = new PCreateAuthor();

		p.execute(configuration);
		return p.getReturnValue();
	}

	/**
	 * Call <code>dbo.p_create_author_by_name</code>
	 */
	public static Integer pCreateAuthorByName(Configuration configuration, String firstName, String lastName) {
		PCreateAuthorByName p = new PCreateAuthorByName();
		p.setFirstName(firstName);
		p.setLastName(lastName);

		p.execute(configuration);
		return p.getReturnValue();
	}

	/**
	 * Call <code>dbo.p_default</code>
	 */
	public static PDefault pDefault(Configuration configuration, Integer pInNumber, Integer pOutNumber, String pInVarchar, String pOutVarchar, Date pInDate, Date pOutDate) {
		PDefault p = new PDefault();
		p.setPInNumber(pInNumber);
		p.setPOutNumber(pOutNumber);
		p.setPInVarchar(pInVarchar);
		p.setPOutVarchar(pOutVarchar);
		p.setPInDate(pInDate);
		p.setPOutDate(pOutDate);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>dbo.p_raise</code>
	 */
	public static Integer pRaise(Configuration configuration, Integer mode) {
		PRaise p = new PRaise();
		p.setMode(mode);

		p.execute(configuration);
		return p.getReturnValue();
	}

	/**
	 * Call <code>dbo.p_raise_3696</code>
	 */
	public static Integer pRaise_3696(Configuration configuration, Integer number) {
		PRaise_3696 p = new PRaise_3696();
		p.setNumber(number);

		p.execute(configuration);
		return p.getReturnValue();
	}

	/**
	 * Call <code>dbo.p_results</code>
	 */
	public static Integer pResults(Configuration configuration, Integer pResultSets) {
		PResults p = new PResults();
		p.setPResultSets(pResultSets);

		p.execute(configuration);
		return p.getReturnValue();
	}

	/**
	 * Call <code>dbo.p_results_and_out_parameters</code>
	 */
	public static PResultsAndOutParameters pResultsAndOutParameters(Configuration configuration, Integer pResultSets, Integer pCount) {
		PResultsAndOutParameters p = new PResultsAndOutParameters();
		p.setPResultSets(pResultSets);
		p.setPCount(pCount);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>dbo.p_results_and_row_counts</code>
	 */
	public static Integer pResultsAndRowCounts(Configuration configuration, Integer pResultSets) {
		PResultsAndRowCounts p = new PResultsAndRowCounts();
		p.setPResultSets(pResultSets);

		p.execute(configuration);
		return p.getReturnValue();
	}

	/**
	 * Call <code>dbo.p_unused</code>
	 */
	public static PUnused pUnused(Configuration configuration, String in1, Integer out1, Integer out2) {
		PUnused p = new PUnused();
		p.setIn1(in1);
		p.setOut1(out1);
		p.setOut2(out2);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>dbo.p1490</code>
	 */
	public static Integer p1490(Configuration configuration, Integer value) {
		P1490 p = new P1490();
		p.setValue(value);

		p.execute(configuration);
		return p.getReturnValue();
	}

	/**
	 * Call <code>dbo.p391</code>
	 */
	public static P391 p391(Configuration configuration, Integer i1, Integer io1, Integer o1, Integer o2, Integer io2, Integer i2) {
		P391 p = new P391();
		p.setI1(i1);
		p.setIo1(io1);
		p.setO1(o1);
		p.setO2(o2);
		p.setIo2(io2);
		p.setI2(i2);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>dbo.p4106</code>
	 */
	public static P4106 p4106(Configuration configuration, Integer param1, Integer param2) {
		P4106 p = new P4106();
		p.setParam1(param1);
		p.setParam2(param2);

		p.execute(configuration);
		return p;
	}

	/**
	 * Get <code>dbo.f_tables1</code> as a field
	 */
	public static FTables1 fTables1() {
		return FTables1.F_TABLES1.call();
	}

	/**
	 * Get <code>dbo.f_tables2</code> as a field
	 */
	public static FTables2 fTables2() {
		return FTables2.F_TABLES2.call();
	}

	/**
	 * Get <code>dbo.f_tables3</code> as a field
	 */
	public static FTables3 fTables3() {
		return FTables3.F_TABLES3.call();
	}

	/**
	 * Get <code>dbo.f_tables4</code> as a field
	 */
	public static FTables4 fTables4(Integer id) {
		return FTables4.F_TABLES4.call(id);
	}

	/**
	 * Get <code>dbo.f_tables4</code> as a field
	 */
	public static FTables4 fTables4(Field<Integer> id) {
		return FTables4.F_TABLES4.call(id);
	}

	/**
	 * Get <code>dbo.f_tables5</code> as a field
	 */
	public static FTables5 fTables5(Integer v1, Integer v2, Integer v3) {
		return FTables5.F_TABLES5.call(v1, v2, v3);
	}

	/**
	 * Get <code>dbo.f_tables5</code> as a field
	 */
	public static FTables5 fTables5(Field<Integer> v1, Field<Integer> v2, Field<Integer> v3) {
		return FTables5.F_TABLES5.call(v1, v2, v3);
	}
}
