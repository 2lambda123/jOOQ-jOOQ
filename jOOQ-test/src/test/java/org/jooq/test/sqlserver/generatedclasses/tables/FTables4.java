/**
 * This class is generated by jOOQ
 */
package org.jooq.test.sqlserver.generatedclasses.tables;


import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.test.sqlserver.generatedclasses.Dbo;
import org.jooq.test.sqlserver.generatedclasses.tables.records.FTables4Record;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FTables4 extends TableImpl<FTables4Record> {

	private static final long serialVersionUID = -1085862844;

	/**
	 * The reference instance of <code>dbo.f_tables4</code>
	 */
	public static final FTables4 F_TABLES4 = new FTables4();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FTables4Record> getRecordType() {
		return FTables4Record.class;
	}

	/**
	 * The column <code>dbo.f_tables4.id</code>.
	 */
	public final TableField<FTables4Record, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>dbo.f_tables4.title</code>.
	 */
	public final TableField<FTables4Record, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(400), this, "");

	/**
	 * Create a <code>dbo.f_tables4</code> table reference
	 */
	public FTables4() {
		this("f_tables4", null);
	}

	/**
	 * Create an aliased <code>dbo.f_tables4</code> table reference
	 */
	public FTables4(String alias) {
		this(alias, F_TABLES4);
	}

	private FTables4(String alias, Table<FTables4Record> aliased) {
		this(alias, aliased, new Field[1]);
	}

	private FTables4(String alias, Table<FTables4Record> aliased, Field<?>[] parameters) {
		super(alias, Dbo.DBO, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public FTables4 as(String alias) {
		return new FTables4(alias, this, parameters);
	}

	/**
	 * Rename this table
	 */
	public FTables4 rename(String name) {
		return new FTables4(name, null, parameters);
	}

	/**
	 * Call this table-valued function
	 */
	public FTables4 call(Integer id) {
		return new FTables4(getName(), null, new Field[] { DSL.val(id) });
	}

	/**
	 * Call this table-valued function
	 */
	public FTables4 call(Field<Integer> id) {
		return new FTables4(getName(), null, new Field[] { id });
	}
}
