/**
 * This class is generated by jOOQ
 */
package org.jooq.test.sqlserver.generatedclasses.tables;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FCrossMultiply extends org.jooq.impl.TableImpl<org.jooq.test.sqlserver.generatedclasses.tables.records.FCrossMultiplyRecord> {

	private static final long serialVersionUID = -1623629587;

	/**
	 * The singleton instance of <code>dbo.f_cross_multiply</code>
	 */
	public static final org.jooq.test.sqlserver.generatedclasses.tables.FCrossMultiply F_CROSS_MULTIPLY = new org.jooq.test.sqlserver.generatedclasses.tables.FCrossMultiply();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.test.sqlserver.generatedclasses.tables.records.FCrossMultiplyRecord> getRecordType() {
		return org.jooq.test.sqlserver.generatedclasses.tables.records.FCrossMultiplyRecord.class;
	}

	/**
	 * The column <code>dbo.f_cross_multiply.i1</code>.
	 */
	public final org.jooq.TableField<org.jooq.test.sqlserver.generatedclasses.tables.records.FCrossMultiplyRecord, java.lang.Integer> I1 = createField("i1", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>dbo.f_cross_multiply.i2</code>.
	 */
	public final org.jooq.TableField<org.jooq.test.sqlserver.generatedclasses.tables.records.FCrossMultiplyRecord, java.lang.Integer> I2 = createField("i2", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>dbo.f_cross_multiply.product</code>.
	 */
	public final org.jooq.TableField<org.jooq.test.sqlserver.generatedclasses.tables.records.FCrossMultiplyRecord, java.lang.Integer> PRODUCT = createField("product", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>dbo.f_cross_multiply</code> table reference
	 */
	public FCrossMultiply() {
		this("f_cross_multiply", null);
	}

	/**
	 * Create an aliased <code>dbo.f_cross_multiply</code> table reference
	 */
	public FCrossMultiply(java.lang.String alias) {
		this(alias, org.jooq.test.sqlserver.generatedclasses.tables.FCrossMultiply.F_CROSS_MULTIPLY);
	}

	private FCrossMultiply(java.lang.String alias, org.jooq.Table<org.jooq.test.sqlserver.generatedclasses.tables.records.FCrossMultiplyRecord> aliased) {
		this(alias, aliased, null);
	}

	private FCrossMultiply(java.lang.String alias, org.jooq.Table<org.jooq.test.sqlserver.generatedclasses.tables.records.FCrossMultiplyRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.jooq.test.sqlserver.generatedclasses.Dbo.DBO, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.test.sqlserver.generatedclasses.tables.FCrossMultiply as(java.lang.String alias) {
		return new org.jooq.test.sqlserver.generatedclasses.tables.FCrossMultiply(alias, this, parameters);
	}

	/**
	 * Rename this table
	 */
	public org.jooq.test.sqlserver.generatedclasses.tables.FCrossMultiply rename(java.lang.String name) {
		return new org.jooq.test.sqlserver.generatedclasses.tables.FCrossMultiply(name, null, parameters);
	}

	/**
	 * Call this table-valued function
	 */
	public org.jooq.test.sqlserver.generatedclasses.tables.FCrossMultiply call(java.lang.Object numbers) {
		return new org.jooq.test.sqlserver.generatedclasses.tables.FCrossMultiply(getName(), null, new org.jooq.Field[] { org.jooq.impl.DSL.val(numbers) });
	}

	/**
	 * Call this table-valued function
	 */
	public org.jooq.test.sqlserver.generatedclasses.tables.FCrossMultiply call(org.jooq.Field<java.lang.Object> numbers) {
		return new org.jooq.test.sqlserver.generatedclasses.tables.FCrossMultiply(getName(), null, new org.jooq.Field[] { numbers });
	}
}
