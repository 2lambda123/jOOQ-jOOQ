/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.test.oracle3.generatedclasses.tables.pojos.T_TRIGGERS_POJO;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class T_TRIGGERS extends DAOImpl<org.jooq.test.oracle3.generatedclasses.tables.records.T_TRIGGERS, T_TRIGGERS_POJO, Integer> implements Cloneable {

	/**
	 * Create a new T_TRIGGERS without any configuration
	 */
	public T_TRIGGERS() {
		super(org.jooq.test.oracle3.generatedclasses.tables.T_TRIGGERS.T_TRIGGERS, T_TRIGGERS_POJO.class);
	}

	/**
	 * Create a new T_TRIGGERS with an attached configuration
	 */
	public T_TRIGGERS(Configuration configuration) {
		super(org.jooq.test.oracle3.generatedclasses.tables.T_TRIGGERS.T_TRIGGERS, T_TRIGGERS_POJO.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(T_TRIGGERS_POJO object) {
		return object.getID_GENERATED();
	}

	/**
	 * Fetch records that have <code>ID_GENERATED IN (values)</code>
	 */
	public List<T_TRIGGERS_POJO> fetchByID_GENERATED(Integer... values) {
		return fetch(org.jooq.test.oracle3.generatedclasses.tables.T_TRIGGERS.T_TRIGGERS.ID_GENERATED, values);
	}

	/**
	 * Fetch a unique record that has <code>ID_GENERATED = value</code>
	 */
	public T_TRIGGERS_POJO fetchOneByID_GENERATED(Integer value) {
		return fetchOne(org.jooq.test.oracle3.generatedclasses.tables.T_TRIGGERS.T_TRIGGERS.ID_GENERATED, value);
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	public List<T_TRIGGERS_POJO> fetchByID(Integer... values) {
		return fetch(org.jooq.test.oracle3.generatedclasses.tables.T_TRIGGERS.T_TRIGGERS.ID, values);
	}

	/**
	 * Fetch records that have <code>COUNTER IN (values)</code>
	 */
	public List<T_TRIGGERS_POJO> fetchByCOUNTER(Integer... values) {
		return fetch(org.jooq.test.oracle3.generatedclasses.tables.T_TRIGGERS.T_TRIGGERS.COUNTER, values);
	}
}
