/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.oracle3.generatedclasses.DefaultSchema;
import org.jooq.test.oracle3.generatedclasses.Keys;
import org.jooq.test.oracle3.generatedclasses.udt.records.U_ADDRESS_TYPE;


/**
 * An entity holding authors of books
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class T_AUTHOR extends TableImpl<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR> implements Cloneable {

	private static final long serialVersionUID = -2067710701;

	/**
	 * The reference instance of <code>T_AUTHOR</code>
	 */
	public static final T_AUTHOR T_AUTHOR = new T_AUTHOR();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR> getRecordType() {
		return org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR.class;
	}

	/**
	 * The column <code>T_AUTHOR.ID</code>. The author ID
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "The author ID");

	/**
	 * The column <code>T_AUTHOR.FIRST_NAME</code>. The author's first name
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR, String> FIRST_NAME = createField("FIRST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "The author's first name");

	/**
	 * The column <code>T_AUTHOR.LAST_NAME</code>. The author's last name
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR, String> LAST_NAME = createField("LAST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "The author's last name");

	/**
	 * The column <code>T_AUTHOR.DATE_OF_BIRTH</code>. The author's date of birth
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR, Date> DATE_OF_BIRTH = createField("DATE_OF_BIRTH", org.jooq.impl.SQLDataType.DATE, this, "The author's date of birth");

	/**
	 * The column <code>T_AUTHOR.YEAR_OF_BIRTH</code>. The author's year of birth
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR, Integer> YEAR_OF_BIRTH = createField("YEAR_OF_BIRTH", org.jooq.impl.SQLDataType.INTEGER, this, "The author's year of birth");

	/**
	 * The column <code>T_AUTHOR.ADDRESS</code>. The author's address
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR, U_ADDRESS_TYPE> ADDRESS = createField("ADDRESS", org.jooq.test.oracle3.generatedclasses.udt.U_ADDRESS_TYPE.U_ADDRESS_TYPE.getDataType(), this, "The author's address");

	/**
	 * Create a <code>T_AUTHOR</code> table reference
	 */
	public T_AUTHOR() {
		this("T_AUTHOR", null);
	}

	/**
	 * Create an aliased <code>T_AUTHOR</code> table reference
	 */
	public T_AUTHOR(String alias) {
		this(alias, T_AUTHOR);
	}

	private T_AUTHOR(String alias, Table<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR> aliased) {
		this(alias, aliased, null);
	}

	private T_AUTHOR(String alias, Table<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "An entity holding authors of books");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR> getPrimaryKey() {
		return Keys.PK_T_AUTHOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR>> getKeys() {
		return Arrays.<UniqueKey<org.jooq.test.oracle3.generatedclasses.tables.records.T_AUTHOR>>asList(Keys.PK_T_AUTHOR);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_AUTHOR as(String alias) {
		return new T_AUTHOR(alias, this);
	}

	/**
	 * Rename this table
	 */
	public T_AUTHOR rename(String name) {
		return new T_AUTHOR(name, null);
	}
}
