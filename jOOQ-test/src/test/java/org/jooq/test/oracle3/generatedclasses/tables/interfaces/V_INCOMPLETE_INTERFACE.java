/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables.interfaces;


import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "V_INCOMPLETE")
public interface V_INCOMPLETE_INTERFACE extends Cloneable, Serializable {

	/**
	 * Setter for <code>V_INCOMPLETE.ID</code>.
	 */
	public void setID(Object value);

	/**
	 * Getter for <code>V_INCOMPLETE.ID</code>.
	 */
	@Column(name = "ID")
	public Object getID();

	/**
	 * Setter for <code>V_INCOMPLETE.AUTHOR_ID</code>.
	 */
	public void setAUTHOR_ID(Object value);

	/**
	 * Getter for <code>V_INCOMPLETE.AUTHOR_ID</code>.
	 */
	@Column(name = "AUTHOR_ID")
	public Object getAUTHOR_ID();

	/**
	 * Setter for <code>V_INCOMPLETE.CO_AUTHOR_ID</code>.
	 */
	public void setCO_AUTHOR_ID(Object value);

	/**
	 * Getter for <code>V_INCOMPLETE.CO_AUTHOR_ID</code>.
	 */
	@Column(name = "CO_AUTHOR_ID")
	public Object getCO_AUTHOR_ID();

	/**
	 * Setter for <code>V_INCOMPLETE.DETAILS_ID</code>.
	 */
	public void setDETAILS_ID(Object value);

	/**
	 * Getter for <code>V_INCOMPLETE.DETAILS_ID</code>.
	 */
	@Column(name = "DETAILS_ID")
	public Object getDETAILS_ID();

	/**
	 * Setter for <code>V_INCOMPLETE.TITLE</code>.
	 */
	public void setTITLE(Object value);

	/**
	 * Getter for <code>V_INCOMPLETE.TITLE</code>.
	 */
	@Column(name = "TITLE")
	public Object getTITLE();

	/**
	 * Setter for <code>V_INCOMPLETE.PUBLISHED_IN</code>.
	 */
	public void setPUBLISHED_IN(Object value);

	/**
	 * Getter for <code>V_INCOMPLETE.PUBLISHED_IN</code>.
	 */
	@Column(name = "PUBLISHED_IN")
	public Object getPUBLISHED_IN();

	/**
	 * Setter for <code>V_INCOMPLETE.LANGUAGE_ID</code>.
	 */
	public void setLANGUAGE_ID(Object value);

	/**
	 * Getter for <code>V_INCOMPLETE.LANGUAGE_ID</code>.
	 */
	@Column(name = "LANGUAGE_ID")
	public Object getLANGUAGE_ID();

	/**
	 * Setter for <code>V_INCOMPLETE.CONTENT_TEXT</code>.
	 */
	public void setCONTENT_TEXT(Object value);

	/**
	 * Getter for <code>V_INCOMPLETE.CONTENT_TEXT</code>.
	 */
	@Column(name = "CONTENT_TEXT")
	public Object getCONTENT_TEXT();

	/**
	 * Setter for <code>V_INCOMPLETE.CONTENT_PDF</code>.
	 */
	public void setCONTENT_PDF(Object value);

	/**
	 * Getter for <code>V_INCOMPLETE.CONTENT_PDF</code>.
	 */
	@Column(name = "CONTENT_PDF")
	public Object getCONTENT_PDF();

	/**
	 * Setter for <code>V_INCOMPLETE.REC_VERSION</code>.
	 */
	public void setREC_VERSION(Object value);

	/**
	 * Getter for <code>V_INCOMPLETE.REC_VERSION</code>.
	 */
	@Column(name = "REC_VERSION")
	public Object getREC_VERSION();

	/**
	 * Setter for <code>V_INCOMPLETE.REC_TIMESTAMP</code>.
	 */
	public void setREC_TIMESTAMP(Object value);

	/**
	 * Getter for <code>V_INCOMPLETE.REC_TIMESTAMP</code>.
	 */
	@Column(name = "REC_TIMESTAMP")
	public Object getREC_TIMESTAMP();

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * Load data from another generated Record/POJO implementing the common interface V_INCOMPLETE_INTERFACE
	 */
	public void from(org.jooq.test.oracle3.generatedclasses.tables.interfaces.V_INCOMPLETE_INTERFACE from);

	/**
	 * Copy data into another generated Record/POJO implementing the common interface V_INCOMPLETE_INTERFACE
	 */
	public <E extends org.jooq.test.oracle3.generatedclasses.tables.interfaces.V_INCOMPLETE_INTERFACE> E into(E into);
}
