/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.oracle3.generatedclasses.DefaultSchema;
import org.jooq.test.oracle3.generatedclasses.Keys;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class T_DIRECTORY extends TableImpl<org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY> implements Cloneable {

	private static final long serialVersionUID = -590063891;

	/**
	 * The reference instance of <code>T_DIRECTORY</code>
	 */
	public static final T_DIRECTORY T_DIRECTORY = new T_DIRECTORY();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY> getRecordType() {
		return org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY.class;
	}

	/**
	 * The column <code>T_DIRECTORY.ID</code>.
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>T_DIRECTORY.PARENT_ID</code>.
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY, Integer> PARENT_ID = createField("PARENT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>T_DIRECTORY.IS_DIRECTORY</code>.
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY, Integer> IS_DIRECTORY = createField("IS_DIRECTORY", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>T_DIRECTORY.name</code>.
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY, String> name = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * Create a <code>T_DIRECTORY</code> table reference
	 */
	public T_DIRECTORY() {
		this("T_DIRECTORY", null);
	}

	/**
	 * Create an aliased <code>T_DIRECTORY</code> table reference
	 */
	public T_DIRECTORY(String alias) {
		this(alias, T_DIRECTORY);
	}

	private T_DIRECTORY(String alias, Table<org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY> aliased) {
		this(alias, aliased, null);
	}

	private T_DIRECTORY(String alias, Table<org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY> getPrimaryKey() {
		return Keys.PK_T_DIRECTORY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY>> getKeys() {
		return Arrays.<UniqueKey<org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY>>asList(Keys.PK_T_DIRECTORY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY, ?>> getReferences() {
		return Arrays.<ForeignKey<org.jooq.test.oracle3.generatedclasses.tables.records.T_DIRECTORY, ?>>asList(Keys.PK_T_DIRECTORY_SELF);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_DIRECTORY as(String alias) {
		return new T_DIRECTORY(alias, this);
	}

	/**
	 * Rename this table
	 */
	public T_DIRECTORY rename(String name) {
		return new T_DIRECTORY(name, null);
	}
}
