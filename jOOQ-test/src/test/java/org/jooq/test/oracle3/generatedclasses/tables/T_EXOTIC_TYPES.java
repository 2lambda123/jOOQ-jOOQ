/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.oracle3.generatedclasses.DefaultSchema;
import org.jooq.test.oracle3.generatedclasses.Keys;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class T_EXOTIC_TYPES extends TableImpl<org.jooq.test.oracle3.generatedclasses.tables.records.T_EXOTIC_TYPES> implements Cloneable {

	private static final long serialVersionUID = -1763690023;

	/**
	 * The reference instance of <code>T_EXOTIC_TYPES</code>
	 */
	public static final T_EXOTIC_TYPES T_EXOTIC_TYPES = new T_EXOTIC_TYPES();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<org.jooq.test.oracle3.generatedclasses.tables.records.T_EXOTIC_TYPES> getRecordType() {
		return org.jooq.test.oracle3.generatedclasses.tables.records.T_EXOTIC_TYPES.class;
	}

	/**
	 * The column <code>T_EXOTIC_TYPES.ID</code>.
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.T_EXOTIC_TYPES, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>T_EXOTIC_TYPES.UU</code>.
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.T_EXOTIC_TYPES, String> UU = createField("UU", org.jooq.impl.SQLDataType.CHAR.length(36), this, "");

	/**
	 * The column <code>T_EXOTIC_TYPES.JAVA_IO_SERIALIZABLE</code>.
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.T_EXOTIC_TYPES, byte[]> JAVA_IO_SERIALIZABLE = createField("JAVA_IO_SERIALIZABLE", org.jooq.impl.SQLDataType.BLOB, this, "");

	/**
	 * Create a <code>T_EXOTIC_TYPES</code> table reference
	 */
	public T_EXOTIC_TYPES() {
		this("T_EXOTIC_TYPES", null);
	}

	/**
	 * Create an aliased <code>T_EXOTIC_TYPES</code> table reference
	 */
	public T_EXOTIC_TYPES(String alias) {
		this(alias, T_EXOTIC_TYPES);
	}

	private T_EXOTIC_TYPES(String alias, Table<org.jooq.test.oracle3.generatedclasses.tables.records.T_EXOTIC_TYPES> aliased) {
		this(alias, aliased, null);
	}

	private T_EXOTIC_TYPES(String alias, Table<org.jooq.test.oracle3.generatedclasses.tables.records.T_EXOTIC_TYPES> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<org.jooq.test.oracle3.generatedclasses.tables.records.T_EXOTIC_TYPES> getPrimaryKey() {
		return Keys.PK_T_EXOTIC_TYPES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<org.jooq.test.oracle3.generatedclasses.tables.records.T_EXOTIC_TYPES>> getKeys() {
		return Arrays.<UniqueKey<org.jooq.test.oracle3.generatedclasses.tables.records.T_EXOTIC_TYPES>>asList(Keys.PK_T_EXOTIC_TYPES);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_EXOTIC_TYPES as(String alias) {
		return new T_EXOTIC_TYPES(alias, this);
	}

	/**
	 * Rename this table
	 */
	public T_EXOTIC_TYPES rename(String name) {
		return new T_EXOTIC_TYPES(name, null);
	}
}
