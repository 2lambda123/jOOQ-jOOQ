/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses;


import java.math.BigDecimal;
import java.sql.Date;

import org.jooq.AggregateFunction;
import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;
import org.jooq.test.oracle3.generatedclasses.routines.F2155;
import org.jooq.test.oracle3.generatedclasses.routines.F317;
import org.jooq.test.oracle3.generatedclasses.routines.F377;
import org.jooq.test.oracle3.generatedclasses.routines.F378;
import org.jooq.test.oracle3.generatedclasses.routines.F691CURSOR_IN;
import org.jooq.test.oracle3.generatedclasses.routines.F691CURSOR_OUT;
import org.jooq.test.oracle3.generatedclasses.routines.F_ARRAYS1;
import org.jooq.test.oracle3.generatedclasses.routines.F_ARRAYS2;
import org.jooq.test.oracle3.generatedclasses.routines.F_ARRAYS3;
import org.jooq.test.oracle3.generatedclasses.routines.F_ARRAYS4;
import org.jooq.test.oracle3.generatedclasses.routines.F_AUTHOR_EXISTS;
import org.jooq.test.oracle3.generatedclasses.routines.F_GET_ONE_CURSOR;
import org.jooq.test.oracle3.generatedclasses.routines.F_NUMBER;
import org.jooq.test.oracle3.generatedclasses.routines.F_ONE;
import org.jooq.test.oracle3.generatedclasses.routines.F_PIPELINED_ARRAY1;
import org.jooq.test.oracle3.generatedclasses.routines.F_PIPELINED_ARRAY4;
import org.jooq.test.oracle3.generatedclasses.routines.F_PIPELINED_TABLE1;
import org.jooq.test.oracle3.generatedclasses.routines.F_PIPELINED_TABLE4;
import org.jooq.test.oracle3.generatedclasses.routines.F_TABLES1;
import org.jooq.test.oracle3.generatedclasses.routines.F_TABLES2;
import org.jooq.test.oracle3.generatedclasses.routines.F_TABLES3;
import org.jooq.test.oracle3.generatedclasses.routines.F_TABLES4;
import org.jooq.test.oracle3.generatedclasses.routines.P1490;
import org.jooq.test.oracle3.generatedclasses.routines.P2155;
import org.jooq.test.oracle3.generatedclasses.routines.P3005;
import org.jooq.test.oracle3.generatedclasses.routines.P377;
import org.jooq.test.oracle3.generatedclasses.routines.P391;
import org.jooq.test.oracle3.generatedclasses.routines.PKG_2522;
import org.jooq.test.oracle3.generatedclasses.routines.P_ARRAYS1;
import org.jooq.test.oracle3.generatedclasses.routines.P_ARRAYS2;
import org.jooq.test.oracle3.generatedclasses.routines.P_ARRAYS3;
import org.jooq.test.oracle3.generatedclasses.routines.P_ARRAYS4;
import org.jooq.test.oracle3.generatedclasses.routines.P_AUTHOR_EXISTS;
import org.jooq.test.oracle3.generatedclasses.routines.P_CREATE_AUTHOR;
import org.jooq.test.oracle3.generatedclasses.routines.P_CREATE_AUTHOR_BY_NAME;
import org.jooq.test.oracle3.generatedclasses.routines.P_DEFAULT;
import org.jooq.test.oracle3.generatedclasses.routines.P_ENHANCE_ADDRESS1;
import org.jooq.test.oracle3.generatedclasses.routines.P_ENHANCE_ADDRESS2;
import org.jooq.test.oracle3.generatedclasses.routines.P_ENHANCE_ADDRESS3;
import org.jooq.test.oracle3.generatedclasses.routines.P_GET_ONE_CURSOR;
import org.jooq.test.oracle3.generatedclasses.routines.P_GET_TWO_CURSORS;
import org.jooq.test.oracle3.generatedclasses.routines.P_NESTED;
import org.jooq.test.oracle3.generatedclasses.routines.P_TABLES1;
import org.jooq.test.oracle3.generatedclasses.routines.P_TABLES2;
import org.jooq.test.oracle3.generatedclasses.routines.P_TABLES3;
import org.jooq.test.oracle3.generatedclasses.routines.P_TABLES4;
import org.jooq.test.oracle3.generatedclasses.routines.P_UNUSED;
import org.jooq.test.oracle3.generatedclasses.routines.SECOND_MAX;
import org.jooq.test.oracle3.generatedclasses.udt.records.U_2522;
import org.jooq.test.oracle3.generatedclasses.udt.records.U_3005;
import org.jooq.test.oracle3.generatedclasses.udt.records.U_ADDRESS_TYPE;
import org.jooq.test.oracle3.generatedclasses.udt.records.U_BOOK_ARRAY;
import org.jooq.test.oracle3.generatedclasses.udt.records.U_BOOK_TABLE;
import org.jooq.test.oracle3.generatedclasses.udt.records.U_NESTED_3;
import org.jooq.test.oracle3.generatedclasses.udt.records.U_NUMBER_ARRAY;
import org.jooq.test.oracle3.generatedclasses.udt.records.U_NUMBER_LONG_ARRAY;
import org.jooq.test.oracle3.generatedclasses.udt.records.U_NUMBER_LONG_TABLE;
import org.jooq.test.oracle3.generatedclasses.udt.records.U_NUMBER_TABLE;
import org.jooq.test.oracle3.generatedclasses.udt.records.U_STRING_ARRAY;
import org.jooq.test.oracle3.generatedclasses.udt.records.U_STRING_TABLE;


/**
 * Convenience access to all stored procedures and functions in 
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

	/**
	 * Call <code>F_ARRAYS1</code>
	 */
	public static U_NUMBER_ARRAY call_F_ARRAYS1(Configuration configuration, U_NUMBER_ARRAY IN_ARRAY) {
		F_ARRAYS1 f = new F_ARRAYS1();
		f.setIN_ARRAY(IN_ARRAY);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_ARRAYS1</code> as a field
	 */
	public static Field<U_NUMBER_ARRAY> call_F_ARRAYS1(U_NUMBER_ARRAY IN_ARRAY) {
		F_ARRAYS1 f = new F_ARRAYS1();
		f.setIN_ARRAY(IN_ARRAY);

		return f.asField();
	}

	/**
	 * Get <code>F_ARRAYS1</code> as a field
	 */
	public static Field<U_NUMBER_ARRAY> call_F_ARRAYS1(Field<U_NUMBER_ARRAY> IN_ARRAY) {
		F_ARRAYS1 f = new F_ARRAYS1();
		f.setIN_ARRAY(IN_ARRAY);

		return f.asField();
	}

	/**
	 * Call <code>F_ARRAYS2</code>
	 */
	public static U_NUMBER_LONG_ARRAY call_F_ARRAYS2(Configuration configuration, U_NUMBER_LONG_ARRAY IN_ARRAY) {
		F_ARRAYS2 f = new F_ARRAYS2();
		f.setIN_ARRAY(IN_ARRAY);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_ARRAYS2</code> as a field
	 */
	public static Field<U_NUMBER_LONG_ARRAY> call_F_ARRAYS2(U_NUMBER_LONG_ARRAY IN_ARRAY) {
		F_ARRAYS2 f = new F_ARRAYS2();
		f.setIN_ARRAY(IN_ARRAY);

		return f.asField();
	}

	/**
	 * Get <code>F_ARRAYS2</code> as a field
	 */
	public static Field<U_NUMBER_LONG_ARRAY> call_F_ARRAYS2(Field<U_NUMBER_LONG_ARRAY> IN_ARRAY) {
		F_ARRAYS2 f = new F_ARRAYS2();
		f.setIN_ARRAY(IN_ARRAY);

		return f.asField();
	}

	/**
	 * Call <code>F_ARRAYS3</code>
	 */
	public static U_STRING_ARRAY call_F_ARRAYS3(Configuration configuration, U_STRING_ARRAY IN_ARRAY) {
		F_ARRAYS3 f = new F_ARRAYS3();
		f.setIN_ARRAY(IN_ARRAY);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_ARRAYS3</code> as a field
	 */
	public static Field<U_STRING_ARRAY> call_F_ARRAYS3(U_STRING_ARRAY IN_ARRAY) {
		F_ARRAYS3 f = new F_ARRAYS3();
		f.setIN_ARRAY(IN_ARRAY);

		return f.asField();
	}

	/**
	 * Get <code>F_ARRAYS3</code> as a field
	 */
	public static Field<U_STRING_ARRAY> call_F_ARRAYS3(Field<U_STRING_ARRAY> IN_ARRAY) {
		F_ARRAYS3 f = new F_ARRAYS3();
		f.setIN_ARRAY(IN_ARRAY);

		return f.asField();
	}

	/**
	 * Call <code>F_ARRAYS4</code>
	 */
	public static U_BOOK_ARRAY call_F_ARRAYS4(Configuration configuration, U_BOOK_ARRAY IN_ARRAY) {
		F_ARRAYS4 f = new F_ARRAYS4();
		f.setIN_ARRAY(IN_ARRAY);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_ARRAYS4</code> as a field
	 */
	public static Field<U_BOOK_ARRAY> call_F_ARRAYS4(U_BOOK_ARRAY IN_ARRAY) {
		F_ARRAYS4 f = new F_ARRAYS4();
		f.setIN_ARRAY(IN_ARRAY);

		return f.asField();
	}

	/**
	 * Get <code>F_ARRAYS4</code> as a field
	 */
	public static Field<U_BOOK_ARRAY> call_F_ARRAYS4(Field<U_BOOK_ARRAY> IN_ARRAY) {
		F_ARRAYS4 f = new F_ARRAYS4();
		f.setIN_ARRAY(IN_ARRAY);

		return f.asField();
	}

	/**
	 * Call <code>F_AUTHOR_EXISTS</code>
	 */
	public static BigDecimal call_F_AUTHOR_EXISTS(Configuration configuration, String AUTHOR_NAME) {
		F_AUTHOR_EXISTS f = new F_AUTHOR_EXISTS();
		f.setAUTHOR_NAME(AUTHOR_NAME);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_AUTHOR_EXISTS</code> as a field
	 */
	public static Field<BigDecimal> call_F_AUTHOR_EXISTS(String AUTHOR_NAME) {
		F_AUTHOR_EXISTS f = new F_AUTHOR_EXISTS();
		f.setAUTHOR_NAME(AUTHOR_NAME);

		return f.asField();
	}

	/**
	 * Get <code>F_AUTHOR_EXISTS</code> as a field
	 */
	public static Field<BigDecimal> call_F_AUTHOR_EXISTS(Field<String> AUTHOR_NAME) {
		F_AUTHOR_EXISTS f = new F_AUTHOR_EXISTS();
		f.setAUTHOR_NAME(AUTHOR_NAME);

		return f.asField();
	}

	/**
	 * Call <code>F_GET_ONE_CURSOR</code>
	 */
	public static Result<org.jooq.Record> call_F_GET_ONE_CURSOR(Configuration configuration, U_NUMBER_ARRAY BOOK_IDS) {
		F_GET_ONE_CURSOR f = new F_GET_ONE_CURSOR();
		f.setBOOK_IDS(BOOK_IDS);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_GET_ONE_CURSOR</code> as a field
	 */
	public static Field<Result<org.jooq.Record>> call_F_GET_ONE_CURSOR(U_NUMBER_ARRAY BOOK_IDS) {
		F_GET_ONE_CURSOR f = new F_GET_ONE_CURSOR();
		f.setBOOK_IDS(BOOK_IDS);

		return f.asField();
	}

	/**
	 * Get <code>F_GET_ONE_CURSOR</code> as a field
	 */
	public static Field<Result<org.jooq.Record>> call_F_GET_ONE_CURSOR(Field<U_NUMBER_ARRAY> BOOK_IDS) {
		F_GET_ONE_CURSOR f = new F_GET_ONE_CURSOR();
		f.setBOOK_IDS(BOOK_IDS);

		return f.asField();
	}

	/**
	 * Call <code>F_NUMBER</code>
	 */
	public static BigDecimal call_F_NUMBER(Configuration configuration, Number N) {
		F_NUMBER f = new F_NUMBER();
		f.setN(N);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_NUMBER</code> as a field
	 */
	public static Field<BigDecimal> call_F_NUMBER(Number N) {
		F_NUMBER f = new F_NUMBER();
		f.setN(N);

		return f.asField();
	}

	/**
	 * Get <code>F_NUMBER</code> as a field
	 */
	public static Field<BigDecimal> call_F_NUMBER(Field<? extends Number> N) {
		F_NUMBER f = new F_NUMBER();
		f.setN(N);

		return f.asField();
	}

	/**
	 * Call <code>F_ONE</code>
	 */
	public static BigDecimal call_F_ONE(Configuration configuration) {
		F_ONE f = new F_ONE();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_ONE</code> as a field
	 */
	public static Field<BigDecimal> call_F_ONE() {
		F_ONE f = new F_ONE();

		return f.asField();
	}

	/**
	 * Call <code>F_PIPELINED_ARRAY1</code>
	 */
	public static U_NUMBER_ARRAY call_F_PIPELINED_ARRAY1(Configuration configuration) {
		F_PIPELINED_ARRAY1 f = new F_PIPELINED_ARRAY1();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_PIPELINED_ARRAY1</code> as a field
	 */
	public static Field<U_NUMBER_ARRAY> call_F_PIPELINED_ARRAY1() {
		F_PIPELINED_ARRAY1 f = new F_PIPELINED_ARRAY1();

		return f.asField();
	}

	/**
	 * Call <code>F_PIPELINED_ARRAY4</code>
	 */
	public static U_BOOK_ARRAY call_F_PIPELINED_ARRAY4(Configuration configuration) {
		F_PIPELINED_ARRAY4 f = new F_PIPELINED_ARRAY4();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_PIPELINED_ARRAY4</code> as a field
	 */
	public static Field<U_BOOK_ARRAY> call_F_PIPELINED_ARRAY4() {
		F_PIPELINED_ARRAY4 f = new F_PIPELINED_ARRAY4();

		return f.asField();
	}

	/**
	 * Call <code>F_PIPELINED_TABLE1</code>
	 */
	public static U_NUMBER_TABLE call_F_PIPELINED_TABLE1(Configuration configuration) {
		F_PIPELINED_TABLE1 f = new F_PIPELINED_TABLE1();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_PIPELINED_TABLE1</code> as a field
	 */
	public static Field<U_NUMBER_TABLE> call_F_PIPELINED_TABLE1() {
		F_PIPELINED_TABLE1 f = new F_PIPELINED_TABLE1();

		return f.asField();
	}

	/**
	 * Call <code>F_PIPELINED_TABLE4</code>
	 */
	public static U_BOOK_TABLE call_F_PIPELINED_TABLE4(Configuration configuration) {
		F_PIPELINED_TABLE4 f = new F_PIPELINED_TABLE4();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_PIPELINED_TABLE4</code> as a field
	 */
	public static Field<U_BOOK_TABLE> call_F_PIPELINED_TABLE4() {
		F_PIPELINED_TABLE4 f = new F_PIPELINED_TABLE4();

		return f.asField();
	}

	/**
	 * Call <code>F_TABLES1</code>
	 */
	public static U_NUMBER_TABLE call_F_TABLES1(Configuration configuration, U_NUMBER_TABLE IN_TABLE) {
		F_TABLES1 f = new F_TABLES1();
		f.setIN_TABLE(IN_TABLE);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_TABLES1</code> as a field
	 */
	public static Field<U_NUMBER_TABLE> call_F_TABLES1(U_NUMBER_TABLE IN_TABLE) {
		F_TABLES1 f = new F_TABLES1();
		f.setIN_TABLE(IN_TABLE);

		return f.asField();
	}

	/**
	 * Get <code>F_TABLES1</code> as a field
	 */
	public static Field<U_NUMBER_TABLE> call_F_TABLES1(Field<U_NUMBER_TABLE> IN_TABLE) {
		F_TABLES1 f = new F_TABLES1();
		f.setIN_TABLE(IN_TABLE);

		return f.asField();
	}

	/**
	 * Call <code>F_TABLES2</code>
	 */
	public static U_NUMBER_LONG_TABLE call_F_TABLES2(Configuration configuration, U_NUMBER_LONG_TABLE IN_TABLE) {
		F_TABLES2 f = new F_TABLES2();
		f.setIN_TABLE(IN_TABLE);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_TABLES2</code> as a field
	 */
	public static Field<U_NUMBER_LONG_TABLE> call_F_TABLES2(U_NUMBER_LONG_TABLE IN_TABLE) {
		F_TABLES2 f = new F_TABLES2();
		f.setIN_TABLE(IN_TABLE);

		return f.asField();
	}

	/**
	 * Get <code>F_TABLES2</code> as a field
	 */
	public static Field<U_NUMBER_LONG_TABLE> call_F_TABLES2(Field<U_NUMBER_LONG_TABLE> IN_TABLE) {
		F_TABLES2 f = new F_TABLES2();
		f.setIN_TABLE(IN_TABLE);

		return f.asField();
	}

	/**
	 * Call <code>F_TABLES3</code>
	 */
	public static U_STRING_TABLE call_F_TABLES3(Configuration configuration, U_STRING_TABLE IN_TABLE) {
		F_TABLES3 f = new F_TABLES3();
		f.setIN_TABLE(IN_TABLE);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_TABLES3</code> as a field
	 */
	public static Field<U_STRING_TABLE> call_F_TABLES3(U_STRING_TABLE IN_TABLE) {
		F_TABLES3 f = new F_TABLES3();
		f.setIN_TABLE(IN_TABLE);

		return f.asField();
	}

	/**
	 * Get <code>F_TABLES3</code> as a field
	 */
	public static Field<U_STRING_TABLE> call_F_TABLES3(Field<U_STRING_TABLE> IN_TABLE) {
		F_TABLES3 f = new F_TABLES3();
		f.setIN_TABLE(IN_TABLE);

		return f.asField();
	}

	/**
	 * Call <code>F_TABLES4</code>
	 */
	public static U_BOOK_TABLE call_F_TABLES4(Configuration configuration, U_BOOK_TABLE IN_TABLE) {
		F_TABLES4 f = new F_TABLES4();
		f.setIN_TABLE(IN_TABLE);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F_TABLES4</code> as a field
	 */
	public static Field<U_BOOK_TABLE> call_F_TABLES4(U_BOOK_TABLE IN_TABLE) {
		F_TABLES4 f = new F_TABLES4();
		f.setIN_TABLE(IN_TABLE);

		return f.asField();
	}

	/**
	 * Get <code>F_TABLES4</code> as a field
	 */
	public static Field<U_BOOK_TABLE> call_F_TABLES4(Field<U_BOOK_TABLE> IN_TABLE) {
		F_TABLES4 f = new F_TABLES4();
		f.setIN_TABLE(IN_TABLE);

		return f.asField();
	}

	/**
	 * Call <code>F2155</code>
	 */
	public static Date call_F2155(Configuration configuration, Number P1, Date P2, Number P3, Date P4) {
		F2155 f = new F2155();
		f.setP1(P1);
		f.setP2(P2);
		f.setP3(P3);
		f.setP4(P4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F2155</code> as a field
	 */
	public static Field<Date> call_F2155(Number P1, Date P2, Number P3, Date P4) {
		F2155 f = new F2155();
		f.setP1(P1);
		f.setP2(P2);
		f.setP3(P3);
		f.setP4(P4);

		return f.asField();
	}

	/**
	 * Get <code>F2155</code> as a field
	 */
	public static Field<Date> call_F2155(Field<? extends Number> P1, Field<Date> P2, Field<? extends Number> P3, Field<Date> P4) {
		F2155 f = new F2155();
		f.setP1(P1);
		f.setP2(P2);
		f.setP3(P3);
		f.setP4(P4);

		return f.asField();
	}

	/**
	 * Call <code>F317</code>
	 */
	public static BigDecimal call_F317(Configuration configuration, Number P1, Number P2, Number P3, Number P4) {
		F317 f = new F317();
		f.setP1(P1);
		f.setP2(P2);
		f.setP3(P3);
		f.setP4(P4);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F317</code> as a field
	 */
	public static Field<BigDecimal> call_F317(Number P1, Number P2, Number P3, Number P4) {
		F317 f = new F317();
		f.setP1(P1);
		f.setP2(P2);
		f.setP3(P3);
		f.setP4(P4);

		return f.asField();
	}

	/**
	 * Get <code>F317</code> as a field
	 */
	public static Field<BigDecimal> call_F317(Field<? extends Number> P1, Field<? extends Number> P2, Field<? extends Number> P3, Field<? extends Number> P4) {
		F317 f = new F317();
		f.setP1(P1);
		f.setP2(P2);
		f.setP3(P3);
		f.setP4(P4);

		return f.asField();
	}

	/**
	 * Call <code>F377</code>
	 */
	public static void call_F377(Configuration configuration) {
		F377 p = new F377();

		p.execute(configuration);
	}

	/**
	 * Call <code>F378</code>
	 */
	public static F378 call_F378(Configuration configuration, Number I, Number IO) {
		F378 p = new F378();
		p.setI(I);
		p.setIO(IO);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>F691CURSOR_IN</code>
	 */
	public static BigDecimal call_F691CURSOR_IN(Configuration configuration, Result<org.jooq.Record> C) {
		F691CURSOR_IN f = new F691CURSOR_IN();
		f.setC(C);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F691CURSOR_IN</code> as a field
	 */
	public static Field<BigDecimal> call_F691CURSOR_IN(Result<org.jooq.Record> C) {
		F691CURSOR_IN f = new F691CURSOR_IN();
		f.setC(C);

		return f.asField();
	}

	/**
	 * Get <code>F691CURSOR_IN</code> as a field
	 */
	public static Field<BigDecimal> call_F691CURSOR_IN(Field<Result<org.jooq.Record>> C) {
		F691CURSOR_IN f = new F691CURSOR_IN();
		f.setC(C);

		return f.asField();
	}

	/**
	 * Call <code>F691CURSOR_OUT</code>
	 */
	public static Result<org.jooq.Record> call_F691CURSOR_OUT(Configuration configuration) {
		F691CURSOR_OUT f = new F691CURSOR_OUT();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>F691CURSOR_OUT</code> as a field
	 */
	public static Field<Result<org.jooq.Record>> call_F691CURSOR_OUT() {
		F691CURSOR_OUT f = new F691CURSOR_OUT();

		return f.asField();
	}

	/**
	 * Call <code>P_ARRAYS1</code>
	 */
	public static U_NUMBER_ARRAY call_P_ARRAYS1(Configuration configuration, U_NUMBER_ARRAY IN_ARRAY) {
		P_ARRAYS1 p = new P_ARRAYS1();
		p.setIN_ARRAY(IN_ARRAY);

		p.execute(configuration);
		return p.getOUT_ARRAY();
	}

	/**
	 * Call <code>P_ARRAYS2</code>
	 */
	public static U_NUMBER_LONG_ARRAY call_P_ARRAYS2(Configuration configuration, U_NUMBER_LONG_ARRAY IN_ARRAY) {
		P_ARRAYS2 p = new P_ARRAYS2();
		p.setIN_ARRAY(IN_ARRAY);

		p.execute(configuration);
		return p.getOUT_ARRAY();
	}

	/**
	 * Call <code>P_ARRAYS3</code>
	 */
	public static U_STRING_ARRAY call_P_ARRAYS3(Configuration configuration, U_STRING_ARRAY IN_ARRAY) {
		P_ARRAYS3 p = new P_ARRAYS3();
		p.setIN_ARRAY(IN_ARRAY);

		p.execute(configuration);
		return p.getOUT_ARRAY();
	}

	/**
	 * Call <code>P_ARRAYS4</code>
	 */
	public static U_BOOK_ARRAY call_P_ARRAYS4(Configuration configuration, U_BOOK_ARRAY IN_ARRAY) {
		P_ARRAYS4 p = new P_ARRAYS4();
		p.setIN_ARRAY(IN_ARRAY);

		p.execute(configuration);
		return p.getOUT_ARRAY();
	}

	/**
	 * Call <code>P_AUTHOR_EXISTS</code>
	 */
	public static BigDecimal call_P_AUTHOR_EXISTS(Configuration configuration, String AUTHOR_NAME) {
		P_AUTHOR_EXISTS p = new P_AUTHOR_EXISTS();
		p.setAUTHOR_NAME(AUTHOR_NAME);

		p.execute(configuration);
		return p.getRESULT();
	}

	/**
	 * Call <code>P_CREATE_AUTHOR</code>
	 */
	public static void call_P_CREATE_AUTHOR(Configuration configuration) {
		P_CREATE_AUTHOR p = new P_CREATE_AUTHOR();

		p.execute(configuration);
	}

	/**
	 * Call <code>P_CREATE_AUTHOR_BY_NAME</code>
	 */
	public static void call_P_CREATE_AUTHOR_BY_NAME(Configuration configuration, String FIRST_NAME, String LAST_NAME) {
		P_CREATE_AUTHOR_BY_NAME p = new P_CREATE_AUTHOR_BY_NAME();
		p.setFIRST_NAME(FIRST_NAME);
		p.setLAST_NAME(LAST_NAME);

		p.execute(configuration);
	}

	/**
	 * Call <code>P_DEFAULT</code>
	 */
	public static P_DEFAULT call_P_DEFAULT(Configuration configuration, Number P_IN_NUMBER, String P_IN_VARCHAR, Date P_IN_DATE) {
		P_DEFAULT p = new P_DEFAULT();
		p.setP_IN_NUMBER(P_IN_NUMBER);
		p.setP_IN_VARCHAR(P_IN_VARCHAR);
		p.setP_IN_DATE(P_IN_DATE);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>P_ENHANCE_ADDRESS1</code>
	 */
	public static String call_P_ENHANCE_ADDRESS1(Configuration configuration, U_ADDRESS_TYPE ADDRESS) {
		P_ENHANCE_ADDRESS1 p = new P_ENHANCE_ADDRESS1();
		p.setADDRESS(ADDRESS);

		p.execute(configuration);
		return p.getNO();
	}

	/**
	 * Call <code>P_ENHANCE_ADDRESS2</code>
	 */
	public static U_ADDRESS_TYPE call_P_ENHANCE_ADDRESS2(Configuration configuration) {
		P_ENHANCE_ADDRESS2 p = new P_ENHANCE_ADDRESS2();

		p.execute(configuration);
		return p.getADDRESS();
	}

	/**
	 * Call <code>P_ENHANCE_ADDRESS3</code>
	 */
	public static U_ADDRESS_TYPE call_P_ENHANCE_ADDRESS3(Configuration configuration, U_ADDRESS_TYPE ADDRESS) {
		P_ENHANCE_ADDRESS3 p = new P_ENHANCE_ADDRESS3();
		p.setADDRESS(ADDRESS);

		p.execute(configuration);
		return p.getADDRESS();
	}

	/**
	 * Call <code>P_GET_ONE_CURSOR</code>
	 */
	public static P_GET_ONE_CURSOR call_P_GET_ONE_CURSOR(Configuration configuration, U_NUMBER_ARRAY BOOK_IDS) {
		P_GET_ONE_CURSOR p = new P_GET_ONE_CURSOR();
		p.setBOOK_IDS(BOOK_IDS);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>P_GET_TWO_CURSORS</code>
	 */
	public static P_GET_TWO_CURSORS call_P_GET_TWO_CURSORS(Configuration configuration) {
		P_GET_TWO_CURSORS p = new P_GET_TWO_CURSORS();

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>PKG_2522</code>
	 */
	public static U_2522 call_PKG_2522(Configuration configuration) {
		PKG_2522 f = new PKG_2522();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>PKG_2522</code> as a field
	 */
	public static Field<U_2522> call_PKG_2522() {
		PKG_2522 f = new PKG_2522();

		return f.asField();
	}

	/**
	 * Call <code>P_NESTED</code>
	 */
	public static P_NESTED call_P_NESTED(Configuration configuration, U_NESTED_3 P1, U_NESTED_3 P2) {
		P_NESTED p = new P_NESTED();
		p.setP1(P1);
		p.setP2(P2);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>P_TABLES1</code>
	 */
	public static U_NUMBER_TABLE call_P_TABLES1(Configuration configuration, U_NUMBER_TABLE IN_TABLE) {
		P_TABLES1 p = new P_TABLES1();
		p.setIN_TABLE(IN_TABLE);

		p.execute(configuration);
		return p.getOUT_TABLE();
	}

	/**
	 * Call <code>P_TABLES2</code>
	 */
	public static U_NUMBER_LONG_TABLE call_P_TABLES2(Configuration configuration, U_NUMBER_LONG_TABLE IN_TABLE) {
		P_TABLES2 p = new P_TABLES2();
		p.setIN_TABLE(IN_TABLE);

		p.execute(configuration);
		return p.getOUT_TABLE();
	}

	/**
	 * Call <code>P_TABLES3</code>
	 */
	public static U_STRING_TABLE call_P_TABLES3(Configuration configuration, U_STRING_TABLE IN_TABLE) {
		P_TABLES3 p = new P_TABLES3();
		p.setIN_TABLE(IN_TABLE);

		p.execute(configuration);
		return p.getOUT_TABLE();
	}

	/**
	 * Call <code>P_TABLES4</code>
	 */
	public static U_BOOK_TABLE call_P_TABLES4(Configuration configuration, U_BOOK_TABLE IN_TABLE) {
		P_TABLES4 p = new P_TABLES4();
		p.setIN_TABLE(IN_TABLE);

		p.execute(configuration);
		return p.getOUT_TABLE();
	}

	/**
	 * Call <code>P_UNUSED</code>
	 */
	public static P_UNUSED call_P_UNUSED(Configuration configuration, String IN1, Number OUT2) {
		P_UNUSED p = new P_UNUSED();
		p.setIN1(IN1);
		p.setOUT2(OUT2);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>P1490</code>
	 */
	public static void call_P1490(Configuration configuration, Number value) {
		P1490 p = new P1490();
		p.setvalue(value);

		p.execute(configuration);
	}

	/**
	 * Call <code>P2155</code>
	 */
	public static P2155 call_P2155(Configuration configuration, Number P1, Date P2) {
		P2155 p = new P2155();
		p.setP1(P1);
		p.setP2(P2);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>P3005</code>
	 */
	public static U_3005 call_P3005(Configuration configuration) {
		P3005 p = new P3005();

		p.execute(configuration);
		return p.getP1();
	}

	/**
	 * Call <code>P377</code>
	 */
	public static void call_P377(Configuration configuration) {
		P377 p = new P377();

		p.execute(configuration);
	}

	/**
	 * Call <code>P391</code>
	 */
	public static P391 call_P391(Configuration configuration, Number I1, Number IO1, Number IO2, Number I2) {
		P391 p = new P391();
		p.setI1(I1);
		p.setIO1(IO1);
		p.setIO2(IO2);
		p.setI2(I2);

		p.execute(configuration);
		return p;
	}

	/**
	 * Get <code>SECOND_MAX</code> as a field
	 */
	public static AggregateFunction<BigDecimal> call_SECOND_MAX(Number INPUT) {
		SECOND_MAX f = new SECOND_MAX();
		f.setINPUT(INPUT);

		return f.asAggregateFunction();
	}

	/**
	 * Get <code>SECOND_MAX</code> as a field
	 */
	public static AggregateFunction<BigDecimal> call_SECOND_MAX(Field<? extends Number> INPUT) {
		SECOND_MAX f = new SECOND_MAX();
		f.setINPUT(INPUT);

		return f.asAggregateFunction();
	}
}
