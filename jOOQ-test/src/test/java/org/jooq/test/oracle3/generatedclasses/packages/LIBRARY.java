/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.packages;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.impl.PackageImpl;
import org.jooq.test.oracle3.generatedclasses.DefaultSchema;
import org.jooq.test.oracle3.generatedclasses.packages.library.PKG_F378;
import org.jooq.test.oracle3.generatedclasses.packages.library.PKG_F_AUTHOR_EXISTS______ABC_1;
import org.jooq.test.oracle3.generatedclasses.packages.library.PKG_F_AUTHOR_EXISTS______ABC_2;
import org.jooq.test.oracle3.generatedclasses.packages.library.PKG_F_UNUSED;
import org.jooq.test.oracle3.generatedclasses.packages.library.PKG_P_AUTHOR_EXISTS______ABC_1;
import org.jooq.test.oracle3.generatedclasses.packages.library.PKG_P_AUTHOR_EXISTS______ABC_2;


/**
 * Convenience access to all stored procedures and functions in LIBRARY
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LIBRARY extends PackageImpl implements Serializable, Cloneable {

	private static final long serialVersionUID = -1041464306;

	/**
	 * The reference instance of <code>LIBRARY</code>
	 */
	public static final LIBRARY LIBRARY = new LIBRARY();

	/**
	 * Call <code>LIBRARY.PKG_F_AUTHOR_EXISTS</code>
	 */
	public static BigDecimal call_PKG_F_AUTHOR_EXISTS______ABC_1(Configuration configuration, String AUTHOR_NAME) {
		PKG_F_AUTHOR_EXISTS______ABC_1 f = new PKG_F_AUTHOR_EXISTS______ABC_1();
		f.setAUTHOR_NAME(AUTHOR_NAME);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>LIBRARY.PKG_F_AUTHOR_EXISTS</code> as a field
	 */
	public static Field<BigDecimal> call_PKG_F_AUTHOR_EXISTS______ABC_1(String AUTHOR_NAME) {
		PKG_F_AUTHOR_EXISTS______ABC_1 f = new PKG_F_AUTHOR_EXISTS______ABC_1();
		f.setAUTHOR_NAME(AUTHOR_NAME);

		return f.asField();
	}

	/**
	 * Get <code>LIBRARY.PKG_F_AUTHOR_EXISTS</code> as a field
	 */
	public static Field<BigDecimal> call_PKG_F_AUTHOR_EXISTS______ABC_1(Field<String> AUTHOR_NAME) {
		PKG_F_AUTHOR_EXISTS______ABC_1 f = new PKG_F_AUTHOR_EXISTS______ABC_1();
		f.setAUTHOR_NAME(AUTHOR_NAME);

		return f.asField();
	}

	/**
	 * Call <code>LIBRARY.PKG_F_AUTHOR_EXISTS</code>
	 */
	public static BigDecimal call_PKG_F_AUTHOR_EXISTS______ABC_2(Configuration configuration, String AUTHOR_NAME, Number UNUSED) {
		PKG_F_AUTHOR_EXISTS______ABC_2 f = new PKG_F_AUTHOR_EXISTS______ABC_2();
		f.setAUTHOR_NAME(AUTHOR_NAME);
		f.setUNUSED(UNUSED);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>LIBRARY.PKG_F_AUTHOR_EXISTS</code> as a field
	 */
	public static Field<BigDecimal> call_PKG_F_AUTHOR_EXISTS______ABC_2(String AUTHOR_NAME, Number UNUSED) {
		PKG_F_AUTHOR_EXISTS______ABC_2 f = new PKG_F_AUTHOR_EXISTS______ABC_2();
		f.setAUTHOR_NAME(AUTHOR_NAME);
		f.setUNUSED(UNUSED);

		return f.asField();
	}

	/**
	 * Get <code>LIBRARY.PKG_F_AUTHOR_EXISTS</code> as a field
	 */
	public static Field<BigDecimal> call_PKG_F_AUTHOR_EXISTS______ABC_2(Field<String> AUTHOR_NAME, Field<? extends Number> UNUSED) {
		PKG_F_AUTHOR_EXISTS______ABC_2 f = new PKG_F_AUTHOR_EXISTS______ABC_2();
		f.setAUTHOR_NAME(AUTHOR_NAME);
		f.setUNUSED(UNUSED);

		return f.asField();
	}

	/**
	 * Call <code>LIBRARY.PKG_F_UNUSED</code>
	 */
	public static BigDecimal call_PKG_F_UNUSED(Configuration configuration) {
		PKG_F_UNUSED f = new PKG_F_UNUSED();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>LIBRARY.PKG_F_UNUSED</code> as a field
	 */
	public static Field<BigDecimal> call_PKG_F_UNUSED() {
		PKG_F_UNUSED f = new PKG_F_UNUSED();

		return f.asField();
	}

	/**
	 * Call <code>LIBRARY.PKG_F378</code>
	 */
	public static PKG_F378 call_PKG_F378(Configuration configuration, Number I, Number IO) {
		PKG_F378 p = new PKG_F378();
		p.setI(I);
		p.setIO(IO);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>LIBRARY.PKG_P_AUTHOR_EXISTS</code>
	 */
	public static BigDecimal call_PKG_P_AUTHOR_EXISTS______ABC_1(Configuration configuration, String AUTHOR_NAME) {
		PKG_P_AUTHOR_EXISTS______ABC_1 p = new PKG_P_AUTHOR_EXISTS______ABC_1();
		p.setAUTHOR_NAME(AUTHOR_NAME);

		p.execute(configuration);
		return p.getRESULT();
	}

	/**
	 * Call <code>LIBRARY.PKG_P_AUTHOR_EXISTS</code>
	 */
	public static PKG_P_AUTHOR_EXISTS______ABC_2 call_PKG_P_AUTHOR_EXISTS______ABC_2(Configuration configuration, String AUTHOR_NAME, Number UNUSED) {
		PKG_P_AUTHOR_EXISTS______ABC_2 p = new PKG_P_AUTHOR_EXISTS______ABC_2();
		p.setAUTHOR_NAME(AUTHOR_NAME);
		p.setUNUSED(UNUSED);

		p.execute(configuration);
		return p;
	}

	/**
	 * No further instances allowed
	 */
	private LIBRARY() {
		super("LIBRARY", DefaultSchema.DEFAULT_SCHEMA);
	}
}
