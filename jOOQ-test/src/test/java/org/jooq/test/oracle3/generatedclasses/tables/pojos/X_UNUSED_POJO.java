/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables.pojos;


import java.math.BigDecimal;
import java.math.BigInteger;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.test.oracle3.generatedclasses.tables.interfaces.X_UNUSED_INTERFACE;


/**
 * An unused table in the same schema.
 * 
 * "Its comments contain special characters"
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "X_UNUSED", uniqueConstraints = {
	@UniqueConstraint(columnNames = {"ID", "NAME"})
})
public class X_UNUSED_POJO extends ThreadDeath implements Cloneable, X_UNUSED_INTERFACE {

	private static final long serialVersionUID = -817273654;

	private Integer    ID;
	private String     NAME;
	private BigInteger BIG_INTEGER;
	private Integer    ID_REF;
	private Integer    CLASS;
	private Integer    FIELDS;
	private Integer    CONFIGURATION;
	private Integer    U_D_T;
	private Integer    META_DATA;
	private Integer    TYPE0;
	private Integer    PRIMARY_KEY;
	private Integer    PRIMARYKEY;
	private String     NAME_REF;
	private BigDecimal FIELD_737;
	private Integer    MS_UNUSED_ID_REF;
	private String     MS_UNUSED_NAME_REF;

	public X_UNUSED_POJO() {}

	public X_UNUSED_POJO(X_UNUSED_POJO value) {
		this.ID = value.ID;
		this.NAME = value.NAME;
		this.BIG_INTEGER = value.BIG_INTEGER;
		this.ID_REF = value.ID_REF;
		this.CLASS = value.CLASS;
		this.FIELDS = value.FIELDS;
		this.CONFIGURATION = value.CONFIGURATION;
		this.U_D_T = value.U_D_T;
		this.META_DATA = value.META_DATA;
		this.TYPE0 = value.TYPE0;
		this.PRIMARY_KEY = value.PRIMARY_KEY;
		this.PRIMARYKEY = value.PRIMARYKEY;
		this.NAME_REF = value.NAME_REF;
		this.FIELD_737 = value.FIELD_737;
		this.MS_UNUSED_ID_REF = value.MS_UNUSED_ID_REF;
		this.MS_UNUSED_NAME_REF = value.MS_UNUSED_NAME_REF;
	}

	public X_UNUSED_POJO(
		Integer    ID,
		String     NAME,
		BigInteger BIG_INTEGER,
		Integer    ID_REF,
		Integer    CLASS,
		Integer    FIELDS,
		Integer    CONFIGURATION,
		Integer    U_D_T,
		Integer    META_DATA,
		Integer    TYPE0,
		Integer    PRIMARY_KEY,
		Integer    PRIMARYKEY,
		String     NAME_REF,
		BigDecimal FIELD_737,
		Integer    MS_UNUSED_ID_REF,
		String     MS_UNUSED_NAME_REF
	) {
		this.ID = ID;
		this.NAME = NAME;
		this.BIG_INTEGER = BIG_INTEGER;
		this.ID_REF = ID_REF;
		this.CLASS = CLASS;
		this.FIELDS = FIELDS;
		this.CONFIGURATION = CONFIGURATION;
		this.U_D_T = U_D_T;
		this.META_DATA = META_DATA;
		this.TYPE0 = TYPE0;
		this.PRIMARY_KEY = PRIMARY_KEY;
		this.PRIMARYKEY = PRIMARYKEY;
		this.NAME_REF = NAME_REF;
		this.FIELD_737 = FIELD_737;
		this.MS_UNUSED_ID_REF = MS_UNUSED_ID_REF;
		this.MS_UNUSED_NAME_REF = MS_UNUSED_NAME_REF;
	}

	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	@Override
	public Integer getID() {
		return this.ID;
	}

	@Override
	public void setID(Integer ID) {
		this.ID = ID;
	}

	@Column(name = "NAME", nullable = false, length = 10)
	@Override
	public String getNAME() {
		return this.NAME;
	}

	@Override
	public void setNAME(String NAME) {
		this.NAME = NAME;
	}

	@Column(name = "BIG_INTEGER", precision = 38)
	@Override
	public BigInteger getBIG_INTEGER() {
		return this.BIG_INTEGER;
	}

	@Override
	public void setBIG_INTEGER(BigInteger BIG_INTEGER) {
		this.BIG_INTEGER = BIG_INTEGER;
	}

	@Column(name = "ID_REF", precision = 7)
	@Override
	public Integer getID_REF() {
		return this.ID_REF;
	}

	@Override
	public void setID_REF(Integer ID_REF) {
		this.ID_REF = ID_REF;
	}

	@Column(name = "CLASS", precision = 7)
	@Override
	public Integer getCLASS() {
		return this.CLASS;
	}

	@Override
	public void setCLASS(Integer CLASS) {
		this.CLASS = CLASS;
	}

	@Column(name = "FIELDS", precision = 7)
	@Override
	public Integer getFIELDS() {
		return this.FIELDS;
	}

	@Override
	public void setFIELDS(Integer FIELDS) {
		this.FIELDS = FIELDS;
	}

	@Column(name = "CONFIGURATION", precision = 7)
	@Override
	public Integer getCONFIGURATION() {
		return this.CONFIGURATION;
	}

	@Override
	public void setCONFIGURATION(Integer CONFIGURATION) {
		this.CONFIGURATION = CONFIGURATION;
	}

	@Column(name = "U_D_T", precision = 7)
	@Override
	public Integer getU_D_T() {
		return this.U_D_T;
	}

	@Override
	public void setU_D_T(Integer U_D_T) {
		this.U_D_T = U_D_T;
	}

	@Column(name = "META_DATA", precision = 7)
	@Override
	public Integer getMETA_DATA() {
		return this.META_DATA;
	}

	@Override
	public void setMETA_DATA(Integer META_DATA) {
		this.META_DATA = META_DATA;
	}

	@Column(name = "TYPE0", precision = 7)
	@Override
	public Integer getTYPE0() {
		return this.TYPE0;
	}

	@Override
	public void setTYPE0(Integer TYPE0) {
		this.TYPE0 = TYPE0;
	}

	@Column(name = "PRIMARY_KEY", precision = 7)
	@Override
	public Integer getPRIMARY_KEY() {
		return this.PRIMARY_KEY;
	}

	@Override
	public void setPRIMARY_KEY(Integer PRIMARY_KEY) {
		this.PRIMARY_KEY = PRIMARY_KEY;
	}

	@Column(name = "PRIMARYKEY", precision = 7)
	@Override
	public Integer getPRIMARYKEY() {
		return this.PRIMARYKEY;
	}

	@Override
	public void setPRIMARYKEY(Integer PRIMARYKEY) {
		this.PRIMARYKEY = PRIMARYKEY;
	}

	@Column(name = "NAME_REF", length = 10)
	@Override
	public String getNAME_REF() {
		return this.NAME_REF;
	}

	@Override
	public void setNAME_REF(String NAME_REF) {
		this.NAME_REF = NAME_REF;
	}

	@Column(name = "FIELD 737", precision = 25, scale = 2)
	@Override
	public BigDecimal getFIELD_737() {
		return this.FIELD_737;
	}

	@Override
	public void setFIELD_737(BigDecimal FIELD_737) {
		this.FIELD_737 = FIELD_737;
	}

	@Column(name = "MS_UNUSED_ID_REF", precision = 7)
	@Override
	public Integer getMS_UNUSED_ID_REF() {
		return this.MS_UNUSED_ID_REF;
	}

	@Override
	public void setMS_UNUSED_ID_REF(Integer MS_UNUSED_ID_REF) {
		this.MS_UNUSED_ID_REF = MS_UNUSED_ID_REF;
	}

	@Column(name = "MS_UNUSED_NAME_REF", length = 10)
	@Override
	public String getMS_UNUSED_NAME_REF() {
		return this.MS_UNUSED_NAME_REF;
	}

	@Override
	public void setMS_UNUSED_NAME_REF(String MS_UNUSED_NAME_REF) {
		this.MS_UNUSED_NAME_REF = MS_UNUSED_NAME_REF;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("X_UNUSED_POJO (");

		sb.append(ID);
		sb.append(", ").append(NAME);
		sb.append(", ").append(BIG_INTEGER);
		sb.append(", ").append(ID_REF);
		sb.append(", ").append(CLASS);
		sb.append(", ").append(FIELDS);
		sb.append(", ").append(CONFIGURATION);
		sb.append(", ").append(U_D_T);
		sb.append(", ").append(META_DATA);
		sb.append(", ").append(TYPE0);
		sb.append(", ").append(PRIMARY_KEY);
		sb.append(", ").append(PRIMARYKEY);
		sb.append(", ").append(NAME_REF);
		sb.append(", ").append(FIELD_737);
		sb.append(", ").append(MS_UNUSED_ID_REF);
		sb.append(", ").append(MS_UNUSED_NAME_REF);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(X_UNUSED_INTERFACE from) {
		setID(from.getID());
		setNAME(from.getNAME());
		setBIG_INTEGER(from.getBIG_INTEGER());
		setID_REF(from.getID_REF());
		setCLASS(from.getCLASS());
		setFIELDS(from.getFIELDS());
		setCONFIGURATION(from.getCONFIGURATION());
		setU_D_T(from.getU_D_T());
		setMETA_DATA(from.getMETA_DATA());
		setTYPE0(from.getTYPE0());
		setPRIMARY_KEY(from.getPRIMARY_KEY());
		setPRIMARYKEY(from.getPRIMARYKEY());
		setNAME_REF(from.getNAME_REF());
		setFIELD_737(from.getFIELD_737());
		setMS_UNUSED_ID_REF(from.getMS_UNUSED_ID_REF());
		setMS_UNUSED_NAME_REF(from.getMS_UNUSED_NAME_REF());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends X_UNUSED_INTERFACE> E into(E into) {
		into.from(this);
		return into;
	}
}
