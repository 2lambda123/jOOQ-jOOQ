/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables.records;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "T_639_NUMBERS_TABLE", schema = "TEST")
public class T_639_NUMBERS_TABLE extends org.jooq.impl.UpdatableRecordImpl<org.jooq.test.oracle3.generatedclasses.tables.records.T_639_NUMBERS_TABLE> implements java.lang.Cloneable, org.jooq.Record11<java.lang.Integer, java.lang.Byte, java.lang.Short, java.lang.Integer, java.lang.Long, java.lang.Byte, java.lang.Short, java.lang.Integer, java.lang.Long, java.math.BigInteger, java.math.BigDecimal> {

	private static final long serialVersionUID = 1171341931;

	/**
	 * Setter for <code>TEST.T_639_NUMBERS_TABLE.ID</code>.
	 */
	public void setID(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>TEST.T_639_NUMBERS_TABLE.ID</code>.
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "ID", unique = true, nullable = false, precision = 7)
	public java.lang.Integer getID() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>TEST.T_639_NUMBERS_TABLE.BYTE</code>.
	 */
	public void setBYTE(java.lang.Byte value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>TEST.T_639_NUMBERS_TABLE.BYTE</code>.
	 */
	@javax.persistence.Column(name = "BYTE", precision = 2)
	public java.lang.Byte getBYTE() {
		return (java.lang.Byte) getValue(1);
	}

	/**
	 * Setter for <code>TEST.T_639_NUMBERS_TABLE.SHORT</code>.
	 */
	public void setSHORT(java.lang.Short value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>TEST.T_639_NUMBERS_TABLE.SHORT</code>.
	 */
	@javax.persistence.Column(name = "SHORT", precision = 4)
	public java.lang.Short getSHORT() {
		return (java.lang.Short) getValue(2);
	}

	/**
	 * Setter for <code>TEST.T_639_NUMBERS_TABLE.INTEGER</code>.
	 */
	public void setINTEGER(java.lang.Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>TEST.T_639_NUMBERS_TABLE.INTEGER</code>.
	 */
	@javax.persistence.Column(name = "INTEGER", precision = 7)
	public java.lang.Integer getINTEGER() {
		return (java.lang.Integer) getValue(3);
	}

	/**
	 * Setter for <code>TEST.T_639_NUMBERS_TABLE.LONG</code>.
	 */
	public void setLONG(java.lang.Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>TEST.T_639_NUMBERS_TABLE.LONG</code>.
	 */
	@javax.persistence.Column(name = "LONG", precision = 18)
	public java.lang.Long getLONG() {
		return (java.lang.Long) getValue(4);
	}

	/**
	 * Setter for <code>TEST.T_639_NUMBERS_TABLE.BYTE_DECIMAL</code>.
	 */
	public void setBYTE_DECIMAL(java.lang.Byte value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>TEST.T_639_NUMBERS_TABLE.BYTE_DECIMAL</code>.
	 */
	@javax.persistence.Column(name = "BYTE_DECIMAL", precision = 2)
	public java.lang.Byte getBYTE_DECIMAL() {
		return (java.lang.Byte) getValue(5);
	}

	/**
	 * Setter for <code>TEST.T_639_NUMBERS_TABLE.SHORT_DECIMAL</code>.
	 */
	public void setSHORT_DECIMAL(java.lang.Short value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>TEST.T_639_NUMBERS_TABLE.SHORT_DECIMAL</code>.
	 */
	@javax.persistence.Column(name = "SHORT_DECIMAL", precision = 4)
	public java.lang.Short getSHORT_DECIMAL() {
		return (java.lang.Short) getValue(6);
	}

	/**
	 * Setter for <code>TEST.T_639_NUMBERS_TABLE.INTEGER_DECIMAL</code>.
	 */
	public void setINTEGER_DECIMAL(java.lang.Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>TEST.T_639_NUMBERS_TABLE.INTEGER_DECIMAL</code>.
	 */
	@javax.persistence.Column(name = "INTEGER_DECIMAL", precision = 9)
	public java.lang.Integer getINTEGER_DECIMAL() {
		return (java.lang.Integer) getValue(7);
	}

	/**
	 * Setter for <code>TEST.T_639_NUMBERS_TABLE.LONG_DECIMAL</code>.
	 */
	public void setLONG_DECIMAL(java.lang.Long value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>TEST.T_639_NUMBERS_TABLE.LONG_DECIMAL</code>.
	 */
	@javax.persistence.Column(name = "LONG_DECIMAL", precision = 18)
	public java.lang.Long getLONG_DECIMAL() {
		return (java.lang.Long) getValue(8);
	}

	/**
	 * Setter for <code>TEST.T_639_NUMBERS_TABLE.BIG_INTEGER</code>.
	 */
	public void setBIG_INTEGER(java.math.BigInteger value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>TEST.T_639_NUMBERS_TABLE.BIG_INTEGER</code>.
	 */
	@javax.persistence.Column(name = "BIG_INTEGER", precision = 22)
	public java.math.BigInteger getBIG_INTEGER() {
		return (java.math.BigInteger) getValue(9);
	}

	/**
	 * Setter for <code>TEST.T_639_NUMBERS_TABLE.BIG_DECIMAL</code>.
	 */
	public void setBIG_DECIMAL(java.math.BigDecimal value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>TEST.T_639_NUMBERS_TABLE.BIG_DECIMAL</code>.
	 */
	@javax.persistence.Column(name = "BIG_DECIMAL", precision = 22, scale = 5)
	public java.math.BigDecimal getBIG_DECIMAL() {
		return (java.math.BigDecimal) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<java.lang.Integer, java.lang.Byte, java.lang.Short, java.lang.Integer, java.lang.Long, java.lang.Byte, java.lang.Short, java.lang.Integer, java.lang.Long, java.math.BigInteger, java.math.BigDecimal> fieldsRow() {
		return (org.jooq.Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<java.lang.Integer, java.lang.Byte, java.lang.Short, java.lang.Integer, java.lang.Long, java.lang.Byte, java.lang.Short, java.lang.Integer, java.lang.Long, java.math.BigInteger, java.math.BigDecimal> valuesRow() {
		return (org.jooq.Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_639_NUMBERS_TABLE.T_639_NUMBERS_TABLE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field2() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_639_NUMBERS_TABLE.T_639_NUMBERS_TABLE.BYTE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Short> field3() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_639_NUMBERS_TABLE.T_639_NUMBERS_TABLE.SHORT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field4() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_639_NUMBERS_TABLE.T_639_NUMBERS_TABLE.INTEGER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field5() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_639_NUMBERS_TABLE.T_639_NUMBERS_TABLE.LONG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field6() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_639_NUMBERS_TABLE.T_639_NUMBERS_TABLE.BYTE_DECIMAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Short> field7() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_639_NUMBERS_TABLE.T_639_NUMBERS_TABLE.SHORT_DECIMAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field8() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_639_NUMBERS_TABLE.T_639_NUMBERS_TABLE.INTEGER_DECIMAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field9() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_639_NUMBERS_TABLE.T_639_NUMBERS_TABLE.LONG_DECIMAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.math.BigInteger> field10() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_639_NUMBERS_TABLE.T_639_NUMBERS_TABLE.BIG_INTEGER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.math.BigDecimal> field11() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_639_NUMBERS_TABLE.T_639_NUMBERS_TABLE.BIG_DECIMAL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value2() {
		return getBYTE();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Short value3() {
		return getSHORT();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value4() {
		return getINTEGER();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value5() {
		return getLONG();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value6() {
		return getBYTE_DECIMAL();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Short value7() {
		return getSHORT_DECIMAL();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value8() {
		return getINTEGER_DECIMAL();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value9() {
		return getLONG_DECIMAL();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.math.BigInteger value10() {
		return getBIG_INTEGER();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.math.BigDecimal value11() {
		return getBIG_DECIMAL();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_639_NUMBERS_TABLE value1(java.lang.Integer value) {
		setID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_639_NUMBERS_TABLE value2(java.lang.Byte value) {
		setBYTE(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_639_NUMBERS_TABLE value3(java.lang.Short value) {
		setSHORT(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_639_NUMBERS_TABLE value4(java.lang.Integer value) {
		setINTEGER(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_639_NUMBERS_TABLE value5(java.lang.Long value) {
		setLONG(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_639_NUMBERS_TABLE value6(java.lang.Byte value) {
		setBYTE_DECIMAL(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_639_NUMBERS_TABLE value7(java.lang.Short value) {
		setSHORT_DECIMAL(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_639_NUMBERS_TABLE value8(java.lang.Integer value) {
		setINTEGER_DECIMAL(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_639_NUMBERS_TABLE value9(java.lang.Long value) {
		setLONG_DECIMAL(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_639_NUMBERS_TABLE value10(java.math.BigInteger value) {
		setBIG_INTEGER(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_639_NUMBERS_TABLE value11(java.math.BigDecimal value) {
		setBIG_DECIMAL(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_639_NUMBERS_TABLE values(java.lang.Integer value1, java.lang.Byte value2, java.lang.Short value3, java.lang.Integer value4, java.lang.Long value5, java.lang.Byte value6, java.lang.Short value7, java.lang.Integer value8, java.lang.Long value9, java.math.BigInteger value10, java.math.BigDecimal value11) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached T_639_NUMBERS_TABLE
	 */
	public T_639_NUMBERS_TABLE() {
		super(org.jooq.test.oracle3.generatedclasses.tables.T_639_NUMBERS_TABLE.T_639_NUMBERS_TABLE);
	}

	/**
	 * Create a detached, initialised T_639_NUMBERS_TABLE
	 */
	public T_639_NUMBERS_TABLE(java.lang.Integer ID, java.lang.Byte BYTE, java.lang.Short SHORT, java.lang.Integer INTEGER, java.lang.Long LONG, java.lang.Byte BYTE_DECIMAL, java.lang.Short SHORT_DECIMAL, java.lang.Integer INTEGER_DECIMAL, java.lang.Long LONG_DECIMAL, java.math.BigInteger BIG_INTEGER, java.math.BigDecimal BIG_DECIMAL) {
		super(org.jooq.test.oracle3.generatedclasses.tables.T_639_NUMBERS_TABLE.T_639_NUMBERS_TABLE);

		setValue(0, ID);
		setValue(1, BYTE);
		setValue(2, SHORT);
		setValue(3, INTEGER);
		setValue(4, LONG);
		setValue(5, BYTE_DECIMAL);
		setValue(6, SHORT_DECIMAL);
		setValue(7, INTEGER_DECIMAL);
		setValue(8, LONG_DECIMAL);
		setValue(9, BIG_INTEGER);
		setValue(10, BIG_DECIMAL);
	}
}
