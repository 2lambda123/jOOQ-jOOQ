/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables.records;


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.test.oracle3.generatedclasses.tables.interfaces.X_TEST_CASE_85_INTERFACE;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "X_TEST_CASE_85")
public class X_TEST_CASE_85 extends UpdatableRecordImpl<X_TEST_CASE_85> implements Cloneable, Record3<Integer, Integer, String>, X_TEST_CASE_85_INTERFACE {

	private static final long serialVersionUID = 1998697826;

	/**
	 * Setter for <code>X_TEST_CASE_85.ID</code>.
	 */
	@Override
	public void setID(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>X_TEST_CASE_85.ID</code>.
	 */
	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	@Override
	public Integer getID() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>X_TEST_CASE_85.X_UNUSED_ID</code>.
	 */
	@Override
	public void setX_UNUSED_ID(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>X_TEST_CASE_85.X_UNUSED_ID</code>.
	 */
	@Column(name = "X_UNUSED_ID", precision = 7)
	@Override
	public Integer getX_UNUSED_ID() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>X_TEST_CASE_85.X_UNUSED_NAME</code>.
	 */
	@Override
	public void setX_UNUSED_NAME(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>X_TEST_CASE_85.X_UNUSED_NAME</code>.
	 */
	@Column(name = "X_UNUSED_NAME", length = 10)
	@Override
	public String getX_UNUSED_NAME() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return org.jooq.test.oracle3.generatedclasses.tables.X_TEST_CASE_85.X_TEST_CASE_85.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return org.jooq.test.oracle3.generatedclasses.tables.X_TEST_CASE_85.X_TEST_CASE_85.X_UNUSED_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return org.jooq.test.oracle3.generatedclasses.tables.X_TEST_CASE_85.X_TEST_CASE_85.X_UNUSED_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getX_UNUSED_ID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getX_UNUSED_NAME();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public X_TEST_CASE_85 value1(Integer value) {
		setID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public X_TEST_CASE_85 value2(Integer value) {
		setX_UNUSED_ID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public X_TEST_CASE_85 value3(String value) {
		setX_UNUSED_NAME(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public X_TEST_CASE_85 values(Integer value1, Integer value2, String value3) {
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(X_TEST_CASE_85_INTERFACE from) {
		setID(from.getID());
		setX_UNUSED_ID(from.getX_UNUSED_ID());
		setX_UNUSED_NAME(from.getX_UNUSED_NAME());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends X_TEST_CASE_85_INTERFACE> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached X_TEST_CASE_85
	 */
	public X_TEST_CASE_85() {
		super(org.jooq.test.oracle3.generatedclasses.tables.X_TEST_CASE_85.X_TEST_CASE_85);
	}

	/**
	 * Create a detached, initialised X_TEST_CASE_85
	 */
	public X_TEST_CASE_85(Integer ID, Integer X_UNUSED_ID, String X_UNUSED_NAME) {
		super(org.jooq.test.oracle3.generatedclasses.tables.X_TEST_CASE_85.X_TEST_CASE_85);

		setValue(0, ID);
		setValue(1, X_UNUSED_ID);
		setValue(2, X_UNUSED_NAME);
	}
}
