/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables;


import java.io.Serializable;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.test.oracle3.generatedclasses.DefaultSchema;


/**
 * snapshot table for snapshot TEST.M_LIBRARY
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class M_LIBRARY extends TableImpl<org.jooq.test.oracle3.generatedclasses.tables.records.M_LIBRARY> implements Serializable, Cloneable {

	private static final long serialVersionUID = 1115134877;

	/**
	 * The reference instance of <code>M_LIBRARY</code>
	 */
	public static final M_LIBRARY M_LIBRARY = new M_LIBRARY();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<org.jooq.test.oracle3.generatedclasses.tables.records.M_LIBRARY> getRecordType() {
		return org.jooq.test.oracle3.generatedclasses.tables.records.M_LIBRARY.class;
	}

	/**
	 * The column <code>M_LIBRARY.AUTHOR</code>.
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.M_LIBRARY, String> AUTHOR = createField("AUTHOR", org.jooq.impl.SQLDataType.VARCHAR.length(101), this, "");

	/**
	 * The column <code>M_LIBRARY.TITLE</code>.
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.M_LIBRARY, String> TITLE = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(400).nullable(false), this, "");

	/**
	 * Create a <code>M_LIBRARY</code> table reference
	 */
	public M_LIBRARY() {
		this("M_LIBRARY", null);
	}

	/**
	 * Create an aliased <code>M_LIBRARY</code> table reference
	 */
	public M_LIBRARY(String alias) {
		this(alias, M_LIBRARY);
	}

	private M_LIBRARY(String alias, Table<org.jooq.test.oracle3.generatedclasses.tables.records.M_LIBRARY> aliased) {
		this(alias, aliased, null);
	}

	private M_LIBRARY(String alias, Table<org.jooq.test.oracle3.generatedclasses.tables.records.M_LIBRARY> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "snapshot table for snapshot TEST.M_LIBRARY");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public M_LIBRARY as(String alias) {
		return new M_LIBRARY(alias, this);
	}

	/**
	 * Rename this table
	 */
	public M_LIBRARY rename(String name) {
		return new M_LIBRARY(name, null);
	}
}
