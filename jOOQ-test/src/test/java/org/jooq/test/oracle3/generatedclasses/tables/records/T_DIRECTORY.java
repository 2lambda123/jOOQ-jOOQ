/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables.records;


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.test.oracle3.generatedclasses.tables.interfaces.T_DIRECTORY_INTERFACE;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "T_DIRECTORY")
public class T_DIRECTORY extends UpdatableRecordImpl<T_DIRECTORY> implements Cloneable, Record4<Integer, Integer, Integer, String>, T_DIRECTORY_INTERFACE {

	private static final long serialVersionUID = -1056793296;

	/**
	 * Setter for <code>T_DIRECTORY.ID</code>.
	 */
	@Override
	public void setID(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>T_DIRECTORY.ID</code>.
	 */
	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	@Override
	public Integer getID() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>T_DIRECTORY.PARENT_ID</code>.
	 */
	@Override
	public void setPARENT_ID(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>T_DIRECTORY.PARENT_ID</code>.
	 */
	@Column(name = "PARENT_ID", precision = 7)
	@Override
	public Integer getPARENT_ID() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>T_DIRECTORY.IS_DIRECTORY</code>.
	 */
	@Override
	public void setIS_DIRECTORY(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>T_DIRECTORY.IS_DIRECTORY</code>.
	 */
	@Column(name = "IS_DIRECTORY", precision = 7)
	@Override
	public Integer getIS_DIRECTORY() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>T_DIRECTORY.name</code>.
	 */
	@Override
	public void setname(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>T_DIRECTORY.name</code>.
	 */
	@Column(name = "name", length = 50)
	@Override
	public String getname() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, Integer, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, Integer, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_DIRECTORY.T_DIRECTORY.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_DIRECTORY.T_DIRECTORY.PARENT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_DIRECTORY.T_DIRECTORY.IS_DIRECTORY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_DIRECTORY.T_DIRECTORY.name;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getPARENT_ID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getIS_DIRECTORY();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_DIRECTORY value1(Integer value) {
		setID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_DIRECTORY value2(Integer value) {
		setPARENT_ID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_DIRECTORY value3(Integer value) {
		setIS_DIRECTORY(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_DIRECTORY value4(String value) {
		setname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_DIRECTORY values(Integer value1, Integer value2, Integer value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(T_DIRECTORY_INTERFACE from) {
		setID(from.getID());
		setPARENT_ID(from.getPARENT_ID());
		setIS_DIRECTORY(from.getIS_DIRECTORY());
		setname(from.getname());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends T_DIRECTORY_INTERFACE> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached T_DIRECTORY
	 */
	public T_DIRECTORY() {
		super(org.jooq.test.oracle3.generatedclasses.tables.T_DIRECTORY.T_DIRECTORY);
	}

	/**
	 * Create a detached, initialised T_DIRECTORY
	 */
	public T_DIRECTORY(Integer ID, Integer PARENT_ID, Integer IS_DIRECTORY, String name) {
		super(org.jooq.test.oracle3.generatedclasses.tables.T_DIRECTORY.T_DIRECTORY);

		setValue(0, ID);
		setValue(1, PARENT_ID);
		setValue(2, IS_DIRECTORY);
		setValue(3, name);
	}
}
