/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.packages.library;


import java.math.BigDecimal;

import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.test.oracle3.generatedclasses.DefaultSchema;
import org.jooq.test.oracle3.generatedclasses.packages.LIBRARY;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PKG_F378 extends AbstractRoutine<BigDecimal> implements Cloneable {

	private static final long serialVersionUID = 965368310;

	/**
	 * The parameter <code>LIBRARY.PKG_F378.RETURN_VALUE</code>.
	 */
	public static final Parameter<BigDecimal> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>LIBRARY.PKG_F378.I</code>.
	 */
	public static final Parameter<BigDecimal> I = createParameter("I", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>LIBRARY.PKG_F378.IO</code>.
	 */
	public static final Parameter<BigDecimal> IO = createParameter("IO", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>LIBRARY.PKG_F378.O</code>.
	 */
	public static final Parameter<BigDecimal> O = createParameter("O", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * Create a new routine call instance
	 */
	public PKG_F378() {
		super("PKG_F378", DefaultSchema.DEFAULT_SCHEMA, LIBRARY.LIBRARY, org.jooq.impl.SQLDataType.NUMERIC);

		setReturnParameter(RETURN_VALUE);
		addInParameter(I);
		addInOutParameter(IO);
		addOutParameter(O);
	}

	/**
	 * Set the <code>I</code> parameter IN value to the routine
	 */
	public void setI(Number value) {
		setNumber(I, value);
	}

	/**
	 * Set the <code>IO</code> parameter IN value to the routine
	 */
	public void setIO(Number value) {
		setNumber(IO, value);
	}

	/**
	 * Get the <code>IO</code> parameter OUT value from the routine
	 */
	public BigDecimal getIO() {
		return getValue(IO);
	}

	/**
	 * Get the <code>O</code> parameter OUT value from the routine
	 */
	public BigDecimal getO() {
		return getValue(O);
	}
}
