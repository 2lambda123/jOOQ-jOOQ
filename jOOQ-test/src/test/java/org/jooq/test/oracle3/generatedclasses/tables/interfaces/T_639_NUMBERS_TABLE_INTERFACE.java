/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables.interfaces;


import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "T_639_NUMBERS_TABLE")
public interface T_639_NUMBERS_TABLE_INTERFACE extends Cloneable, Serializable {

	/**
	 * Setter for <code>T_639_NUMBERS_TABLE.ID</code>.
	 */
	public void setID(Integer value);

	/**
	 * Getter for <code>T_639_NUMBERS_TABLE.ID</code>.
	 */
	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	public Integer getID();

	/**
	 * Setter for <code>T_639_NUMBERS_TABLE.BYTE</code>.
	 */
	public void setBYTE(Byte value);

	/**
	 * Getter for <code>T_639_NUMBERS_TABLE.BYTE</code>.
	 */
	@Column(name = "BYTE", precision = 2)
	public Byte getBYTE();

	/**
	 * Setter for <code>T_639_NUMBERS_TABLE.SHORT</code>.
	 */
	public void setSHORT(Short value);

	/**
	 * Getter for <code>T_639_NUMBERS_TABLE.SHORT</code>.
	 */
	@Column(name = "SHORT", precision = 4)
	public Short getSHORT();

	/**
	 * Setter for <code>T_639_NUMBERS_TABLE.INTEGER</code>.
	 */
	public void setINTEGER(Integer value);

	/**
	 * Getter for <code>T_639_NUMBERS_TABLE.INTEGER</code>.
	 */
	@Column(name = "INTEGER", precision = 7)
	public Integer getINTEGER();

	/**
	 * Setter for <code>T_639_NUMBERS_TABLE.LONG</code>.
	 */
	public void setLONG(Long value);

	/**
	 * Getter for <code>T_639_NUMBERS_TABLE.LONG</code>.
	 */
	@Column(name = "LONG", precision = 18)
	public Long getLONG();

	/**
	 * Setter for <code>T_639_NUMBERS_TABLE.BYTE_DECIMAL</code>.
	 */
	public void setBYTE_DECIMAL(Byte value);

	/**
	 * Getter for <code>T_639_NUMBERS_TABLE.BYTE_DECIMAL</code>.
	 */
	@Column(name = "BYTE_DECIMAL", precision = 2)
	public Byte getBYTE_DECIMAL();

	/**
	 * Setter for <code>T_639_NUMBERS_TABLE.SHORT_DECIMAL</code>.
	 */
	public void setSHORT_DECIMAL(Short value);

	/**
	 * Getter for <code>T_639_NUMBERS_TABLE.SHORT_DECIMAL</code>.
	 */
	@Column(name = "SHORT_DECIMAL", precision = 4)
	public Short getSHORT_DECIMAL();

	/**
	 * Setter for <code>T_639_NUMBERS_TABLE.INTEGER_DECIMAL</code>.
	 */
	public void setINTEGER_DECIMAL(Integer value);

	/**
	 * Getter for <code>T_639_NUMBERS_TABLE.INTEGER_DECIMAL</code>.
	 */
	@Column(name = "INTEGER_DECIMAL", precision = 9)
	public Integer getINTEGER_DECIMAL();

	/**
	 * Setter for <code>T_639_NUMBERS_TABLE.LONG_DECIMAL</code>.
	 */
	public void setLONG_DECIMAL(Long value);

	/**
	 * Getter for <code>T_639_NUMBERS_TABLE.LONG_DECIMAL</code>.
	 */
	@Column(name = "LONG_DECIMAL", precision = 18)
	public Long getLONG_DECIMAL();

	/**
	 * Setter for <code>T_639_NUMBERS_TABLE.BIG_INTEGER</code>.
	 */
	public void setBIG_INTEGER(BigInteger value);

	/**
	 * Getter for <code>T_639_NUMBERS_TABLE.BIG_INTEGER</code>.
	 */
	@Column(name = "BIG_INTEGER", precision = 22)
	public BigInteger getBIG_INTEGER();

	/**
	 * Setter for <code>T_639_NUMBERS_TABLE.BIG_DECIMAL</code>.
	 */
	public void setBIG_DECIMAL(BigDecimal value);

	/**
	 * Getter for <code>T_639_NUMBERS_TABLE.BIG_DECIMAL</code>.
	 */
	@Column(name = "BIG_DECIMAL", precision = 22, scale = 5)
	public BigDecimal getBIG_DECIMAL();

	/**
	 * Setter for <code>T_639_NUMBERS_TABLE.FLOAT</code>.
	 */
	public void setFLOAT(Double value);

	/**
	 * Getter for <code>T_639_NUMBERS_TABLE.FLOAT</code>.
	 */
	@Column(name = "FLOAT", precision = 126)
	public Double getFLOAT();

	/**
	 * Setter for <code>T_639_NUMBERS_TABLE.REAL</code>.
	 */
	public void setREAL(Double value);

	/**
	 * Getter for <code>T_639_NUMBERS_TABLE.REAL</code>.
	 */
	@Column(name = "REAL", precision = 63)
	public Double getREAL();

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * Load data from another generated Record/POJO implementing the common interface T_639_NUMBERS_TABLE_INTERFACE
	 */
	public void from(org.jooq.test.oracle3.generatedclasses.tables.interfaces.T_639_NUMBERS_TABLE_INTERFACE from);

	/**
	 * Copy data into another generated Record/POJO implementing the common interface T_639_NUMBERS_TABLE_INTERFACE
	 */
	public <E extends org.jooq.test.oracle3.generatedclasses.tables.interfaces.T_639_NUMBERS_TABLE_INTERFACE> E into(E into);
}
