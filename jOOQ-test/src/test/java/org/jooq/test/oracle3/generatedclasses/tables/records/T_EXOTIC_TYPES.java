/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables.records;


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.test.oracle3.generatedclasses.tables.interfaces.T_EXOTIC_TYPES_INTERFACE;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "T_EXOTIC_TYPES")
public class T_EXOTIC_TYPES extends UpdatableRecordImpl<T_EXOTIC_TYPES> implements Cloneable, Record3<Integer, String, byte[]>, T_EXOTIC_TYPES_INTERFACE {

	private static final long serialVersionUID = 1318130565;

	/**
	 * Setter for <code>T_EXOTIC_TYPES.ID</code>.
	 */
	@Override
	public void setID(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>T_EXOTIC_TYPES.ID</code>.
	 */
	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	@Override
	public Integer getID() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>T_EXOTIC_TYPES.UU</code>.
	 */
	@Override
	public void setUU(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>T_EXOTIC_TYPES.UU</code>.
	 */
	@Column(name = "UU", length = 36)
	@Override
	public String getUU() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>T_EXOTIC_TYPES.JAVA_IO_SERIALIZABLE</code>.
	 */
	@Override
	public void setJAVA_IO_SERIALIZABLE(byte[] value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>T_EXOTIC_TYPES.JAVA_IO_SERIALIZABLE</code>.
	 */
	@Column(name = "JAVA_IO_SERIALIZABLE")
	@Override
	public byte[] getJAVA_IO_SERIALIZABLE() {
		return (byte[]) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, byte[]> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, byte[]> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES.UU;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field3() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES.JAVA_IO_SERIALIZABLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUU();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value3() {
		return getJAVA_IO_SERIALIZABLE();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_EXOTIC_TYPES value1(Integer value) {
		setID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_EXOTIC_TYPES value2(String value) {
		setUU(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_EXOTIC_TYPES value3(byte[] value) {
		setJAVA_IO_SERIALIZABLE(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_EXOTIC_TYPES values(Integer value1, String value2, byte[] value3) {
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(T_EXOTIC_TYPES_INTERFACE from) {
		setID(from.getID());
		setUU(from.getUU());
		setJAVA_IO_SERIALIZABLE(from.getJAVA_IO_SERIALIZABLE());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends T_EXOTIC_TYPES_INTERFACE> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached T_EXOTIC_TYPES
	 */
	public T_EXOTIC_TYPES() {
		super(org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES);
	}

	/**
	 * Create a detached, initialised T_EXOTIC_TYPES
	 */
	public T_EXOTIC_TYPES(Integer ID, String UU, byte[] JAVA_IO_SERIALIZABLE) {
		super(org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES);

		setValue(0, ID);
		setValue(1, UU);
		setValue(2, JAVA_IO_SERIALIZABLE);
	}
}
