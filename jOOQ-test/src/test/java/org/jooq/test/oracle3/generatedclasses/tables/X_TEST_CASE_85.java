/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.oracle3.generatedclasses.DefaultSchema;
import org.jooq.test.oracle3.generatedclasses.Keys;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class X_TEST_CASE_85 extends TableImpl<org.jooq.test.oracle3.generatedclasses.tables.records.X_TEST_CASE_85> implements Cloneable {

	private static final long serialVersionUID = 1362040154;

	/**
	 * The reference instance of <code>X_TEST_CASE_85</code>
	 */
	public static final X_TEST_CASE_85 X_TEST_CASE_85 = new X_TEST_CASE_85();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<org.jooq.test.oracle3.generatedclasses.tables.records.X_TEST_CASE_85> getRecordType() {
		return org.jooq.test.oracle3.generatedclasses.tables.records.X_TEST_CASE_85.class;
	}

	/**
	 * The column <code>X_TEST_CASE_85.ID</code>.
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.X_TEST_CASE_85, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>X_TEST_CASE_85.X_UNUSED_ID</code>.
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.X_TEST_CASE_85, Integer> X_UNUSED_ID = createField("X_UNUSED_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>X_TEST_CASE_85.X_UNUSED_NAME</code>.
	 */
	public final TableField<org.jooq.test.oracle3.generatedclasses.tables.records.X_TEST_CASE_85, String> X_UNUSED_NAME = createField("X_UNUSED_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

	/**
	 * Create a <code>X_TEST_CASE_85</code> table reference
	 */
	public X_TEST_CASE_85() {
		this("X_TEST_CASE_85", null);
	}

	/**
	 * Create an aliased <code>X_TEST_CASE_85</code> table reference
	 */
	public X_TEST_CASE_85(String alias) {
		this(alias, X_TEST_CASE_85);
	}

	private X_TEST_CASE_85(String alias, Table<org.jooq.test.oracle3.generatedclasses.tables.records.X_TEST_CASE_85> aliased) {
		this(alias, aliased, null);
	}

	private X_TEST_CASE_85(String alias, Table<org.jooq.test.oracle3.generatedclasses.tables.records.X_TEST_CASE_85> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<org.jooq.test.oracle3.generatedclasses.tables.records.X_TEST_CASE_85> getPrimaryKey() {
		return Keys.PK_X_TEST_CASE_85;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<org.jooq.test.oracle3.generatedclasses.tables.records.X_TEST_CASE_85>> getKeys() {
		return Arrays.<UniqueKey<org.jooq.test.oracle3.generatedclasses.tables.records.X_TEST_CASE_85>>asList(Keys.PK_X_TEST_CASE_85);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<org.jooq.test.oracle3.generatedclasses.tables.records.X_TEST_CASE_85, ?>> getReferences() {
		return Arrays.<ForeignKey<org.jooq.test.oracle3.generatedclasses.tables.records.X_TEST_CASE_85, ?>>asList(Keys.FK_X_TEST_CASE_85);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public X_TEST_CASE_85 as(String alias) {
		return new X_TEST_CASE_85(alias, this);
	}

	/**
	 * Rename this table
	 */
	public X_TEST_CASE_85 rename(String name) {
		return new X_TEST_CASE_85(name, null);
	}
}
