/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables.records;


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.test.oracle3.generatedclasses.tables.interfaces.T_725_LOB_TEST_INTERFACE;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "T_725_LOB_TEST")
public class T_725_LOB_TEST extends UpdatableRecordImpl<T_725_LOB_TEST> implements Cloneable, Record2<Integer, byte[]>, T_725_LOB_TEST_INTERFACE {

	private static final long serialVersionUID = -1732640402;

	/**
	 * Setter for <code>T_725_LOB_TEST.ID</code>.
	 */
	@Override
	public void setID(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>T_725_LOB_TEST.ID</code>.
	 */
	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	@Override
	public Integer getID() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>T_725_LOB_TEST.LOB</code>.
	 */
	@Override
	public void setLOB(byte[] value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>T_725_LOB_TEST.LOB</code>.
	 */
	@Column(name = "LOB")
	@Override
	public byte[] getLOB() {
		return (byte[]) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, byte[]> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Integer, byte[]> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_725_LOB_TEST.T_725_LOB_TEST.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field2() {
		return org.jooq.test.oracle3.generatedclasses.tables.T_725_LOB_TEST.T_725_LOB_TEST.LOB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value2() {
		return getLOB();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_725_LOB_TEST value1(Integer value) {
		setID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_725_LOB_TEST value2(byte[] value) {
		setLOB(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_725_LOB_TEST values(Integer value1, byte[] value2) {
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(T_725_LOB_TEST_INTERFACE from) {
		setID(from.getID());
		setLOB(from.getLOB());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends T_725_LOB_TEST_INTERFACE> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached T_725_LOB_TEST
	 */
	public T_725_LOB_TEST() {
		super(org.jooq.test.oracle3.generatedclasses.tables.T_725_LOB_TEST.T_725_LOB_TEST);
	}

	/**
	 * Create a detached, initialised T_725_LOB_TEST
	 */
	public T_725_LOB_TEST(Integer ID, byte[] LOB) {
		super(org.jooq.test.oracle3.generatedclasses.tables.T_725_LOB_TEST.T_725_LOB_TEST);

		setValue(0, ID);
		setValue(1, LOB);
	}
}
