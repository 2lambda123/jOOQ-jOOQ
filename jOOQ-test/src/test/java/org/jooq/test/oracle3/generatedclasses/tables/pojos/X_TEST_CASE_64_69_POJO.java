/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables.pojos;


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.test.oracle3.generatedclasses.tables.interfaces.X_TEST_CASE_64_69_INTERFACE;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "X_TEST_CASE_64_69")
public class X_TEST_CASE_64_69_POJO extends ThreadDeath implements Cloneable, X_TEST_CASE_64_69_INTERFACE {

	private static final long serialVersionUID = -953967594;

	private Integer ID;
	private Integer UNUSED_ID;

	public X_TEST_CASE_64_69_POJO() {}

	public X_TEST_CASE_64_69_POJO(X_TEST_CASE_64_69_POJO value) {
		this.ID = value.ID;
		this.UNUSED_ID = value.UNUSED_ID;
	}

	public X_TEST_CASE_64_69_POJO(
		Integer ID,
		Integer UNUSED_ID
	) {
		this.ID = ID;
		this.UNUSED_ID = UNUSED_ID;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 7)
	@Override
	public Integer getID() {
		return this.ID;
	}

	@Override
	public void setID(Integer ID) {
		this.ID = ID;
	}

	@Column(name = "UNUSED_ID", precision = 7)
	@Override
	public Integer getUNUSED_ID() {
		return this.UNUSED_ID;
	}

	@Override
	public void setUNUSED_ID(Integer UNUSED_ID) {
		this.UNUSED_ID = UNUSED_ID;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("X_TEST_CASE_64_69_POJO (");

		sb.append(ID);
		sb.append(", ").append(UNUSED_ID);

		sb.append(")");
		return sb.toString();
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(X_TEST_CASE_64_69_INTERFACE from) {
		setID(from.getID());
		setUNUSED_ID(from.getUNUSED_ID());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends X_TEST_CASE_64_69_INTERFACE> E into(E into) {
		into.from(this);
		return into;
	}
}
