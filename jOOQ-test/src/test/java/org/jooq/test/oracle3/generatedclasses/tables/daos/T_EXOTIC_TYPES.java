/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle3.generatedclasses.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.test.oracle3.generatedclasses.tables.pojos.T_EXOTIC_TYPES_POJO;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class T_EXOTIC_TYPES extends DAOImpl<org.jooq.test.oracle3.generatedclasses.tables.records.T_EXOTIC_TYPES, T_EXOTIC_TYPES_POJO, Integer> implements Cloneable {

	/**
	 * Create a new T_EXOTIC_TYPES without any configuration
	 */
	public T_EXOTIC_TYPES() {
		super(org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES, T_EXOTIC_TYPES_POJO.class);
	}

	/**
	 * Create a new T_EXOTIC_TYPES with an attached configuration
	 */
	public T_EXOTIC_TYPES(Configuration configuration) {
		super(org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES, T_EXOTIC_TYPES_POJO.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(T_EXOTIC_TYPES_POJO object) {
		return object.getID();
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	public List<T_EXOTIC_TYPES_POJO> fetchByID(Integer... values) {
		return fetch(org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	public T_EXOTIC_TYPES_POJO fetchOneByID(Integer value) {
		return fetchOne(org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES.ID, value);
	}

	/**
	 * Fetch records that have <code>UU IN (values)</code>
	 */
	public List<T_EXOTIC_TYPES_POJO> fetchByUU(String... values) {
		return fetch(org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES.UU, values);
	}

	/**
	 * Fetch records that have <code>JAVA_IO_SERIALIZABLE IN (values)</code>
	 */
	public List<T_EXOTIC_TYPES_POJO> fetchByJAVA_IO_SERIALIZABLE(byte[]... values) {
		return fetch(org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES.JAVA_IO_SERIALIZABLE, values);
	}

	/**
	 * Fetch records that have <code>PLAIN_SQL_CONVERTER_XML IN (values)</code>
	 */
	public List<T_EXOTIC_TYPES_POJO> fetchByPLAIN_SQL_CONVERTER_XML(String... values) {
		return fetch(org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES.PLAIN_SQL_CONVERTER_XML, values);
	}

	/**
	 * Fetch records that have <code>PLAIN_SQL_BINDING_XML IN (values)</code>
	 */
	public List<T_EXOTIC_TYPES_POJO> fetchByPLAIN_SQL_BINDING_XML(String... values) {
		return fetch(org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES.PLAIN_SQL_BINDING_XML, values);
	}

	/**
	 * Fetch records that have <code>ORACLE_XML_AS_IS IN (values)</code>
	 */
	public List<T_EXOTIC_TYPES_POJO> fetchByORACLE_XML_AS_IS(Object... values) {
		return fetch(org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES.ORACLE_XML_AS_IS, values);
	}

	/**
	 * Fetch records that have <code>ORACLE_XML_AS_DOCUMENT IN (values)</code>
	 */
	public List<T_EXOTIC_TYPES_POJO> fetchByORACLE_XML_AS_DOCUMENT(Object... values) {
		return fetch(org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES.ORACLE_XML_AS_DOCUMENT, values);
	}

	/**
	 * Fetch records that have <code>ORACLE_XML_AS_SQLXML IN (values)</code>
	 */
	public List<T_EXOTIC_TYPES_POJO> fetchByORACLE_XML_AS_SQLXML(Object... values) {
		return fetch(org.jooq.test.oracle3.generatedclasses.tables.T_EXOTIC_TYPES.T_EXOTIC_TYPES.ORACLE_XML_AS_SQLXML, values);
	}
}
