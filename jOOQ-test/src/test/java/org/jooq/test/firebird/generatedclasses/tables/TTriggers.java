/**
 * This class is generated by jOOQ
 */
package org.jooq.test.firebird.generatedclasses.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.firebird.generatedclasses.DefaultSchema;
import org.jooq.test.firebird.generatedclasses.Keys;
import org.jooq.test.firebird.generatedclasses.tables.records.TTriggersRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TTriggers extends TableImpl<TTriggersRecord> {

	private static final long serialVersionUID = 1286777498;

	/**
	 * The reference instance of <code>T_TRIGGERS</code>
	 */
	public static final TTriggers T_TRIGGERS = new TTriggers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TTriggersRecord> getRecordType() {
		return TTriggersRecord.class;
	}

	/**
	 * The column <code>T_TRIGGERS.ID_GENERATED</code>.
	 */
	public final TableField<TTriggersRecord, Integer> ID_GENERATED = createField("ID_GENERATED", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>T_TRIGGERS.ID</code>.
	 */
	public final TableField<TTriggersRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>T_TRIGGERS.COUNTER</code>.
	 */
	public final TableField<TTriggersRecord, Integer> COUNTER = createField("COUNTER", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>T_TRIGGERS</code> table reference
	 */
	public TTriggers() {
		this("T_TRIGGERS", null);
	}

	/**
	 * Create an aliased <code>T_TRIGGERS</code> table reference
	 */
	public TTriggers(String alias) {
		this(alias, T_TRIGGERS);
	}

	private TTriggers(String alias, Table<TTriggersRecord> aliased) {
		this(alias, aliased, null);
	}

	private TTriggers(String alias, Table<TTriggersRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TTriggersRecord> getPrimaryKey() {
		return Keys.PK_T_TRIGGERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TTriggersRecord>> getKeys() {
		return Arrays.<UniqueKey<TTriggersRecord>>asList(Keys.PK_T_TRIGGERS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TTriggers as(String alias) {
		return new TTriggers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TTriggers rename(String name) {
		return new TTriggers(name, null);
	}
}
