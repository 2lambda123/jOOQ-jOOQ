/**
 * This class is generated by jOOQ
 */
package org.jooq.test.sqlite.generatedclasses.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.sqlite.generatedclasses.DefaultSchema;
import org.jooq.test.sqlite.generatedclasses.Keys;
import org.jooq.test.sqlite.generatedclasses.tables.records.TAuthorRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TAuthor extends TableImpl<TAuthorRecord> {

	private static final long serialVersionUID = -1344097108;

	/**
	 * The reference instance of <code>t_author</code>
	 */
	public static final TAuthor T_AUTHOR = new TAuthor();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TAuthorRecord> getRecordType() {
		return TAuthorRecord.class;
	}

	/**
	 * The column <code>t_author.ID</code>.
	 */
	public static final TableField<TAuthorRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), T_AUTHOR, "");

	/**
	 * The column <code>t_author.FIRST_NAME</code>.
	 */
	public static final TableField<TAuthorRecord, String> FIRST_NAME = createField("FIRST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(50), T_AUTHOR, "");

	/**
	 * The column <code>t_author.LAST_NAME</code>.
	 */
	public static final TableField<TAuthorRecord, String> LAST_NAME = createField("LAST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), T_AUTHOR, "");

	/**
	 * The column <code>t_author.DATE_OF_BIRTH</code>.
	 */
	public static final TableField<TAuthorRecord, Date> DATE_OF_BIRTH = createField("DATE_OF_BIRTH", org.jooq.impl.SQLDataType.DATE, T_AUTHOR, "");

	/**
	 * The column <code>t_author.YEAR_OF_BIRTH</code>.
	 */
	public static final TableField<TAuthorRecord, Integer> YEAR_OF_BIRTH = createField("YEAR_OF_BIRTH", org.jooq.impl.SQLDataType.INTEGER, T_AUTHOR, "");

	/**
	 * The column <code>t_author.ADDRESS</code>.
	 */
	public static final TableField<TAuthorRecord, String> ADDRESS = createField("ADDRESS", org.jooq.impl.SQLDataType.VARCHAR.length(50), T_AUTHOR, "");

	/**
	 * No further instances allowed
	 */
	private TAuthor() {
		this("t_author", null);
	}

	private TAuthor(String alias, Table<TAuthorRecord> aliased) {
		this(alias, aliased, null);
	}

	private TAuthor(String alias, Table<TAuthorRecord> aliased, Field<?>[] parameters) {
		super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TAuthorRecord> getPrimaryKey() {
		return Keys.PK_T_AUTHOR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TAuthorRecord>> getKeys() {
		return Arrays.<UniqueKey<TAuthorRecord>>asList(Keys.PK_T_AUTHOR);
	}
}
