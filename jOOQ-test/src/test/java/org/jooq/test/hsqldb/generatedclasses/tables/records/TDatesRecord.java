/**
 * This class is generated by jOOQ
 */
package org.jooq.test.hsqldb.generatedclasses.tables.records;


import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.test.hsqldb.generatedclasses.tables.TDates;
import org.jooq.test.hsqldb.generatedclasses.tables.interfaces.ITDates;
import org.jooq.types.DayToSecond;
import org.jooq.types.YearToMonth;


/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDatesRecord extends UpdatableRecordImpl<TDatesRecord> implements Record8<java.lang.Integer, Date, Time, Timestamp, java.lang.Integer, java.lang.Long, YearToMonth, DayToSecond>, ITDates {

	private static final long serialVersionUID = 1182042808;

	/**
	 * Setter for <code>PUBLIC.T_DATES.ID</code>.
	 */
	@Override
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_DATES.ID</code>.
	 */
	@Override
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.T_DATES.D</code>.
	 */
	@Override
	public void setD(Date value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_DATES.D</code>.
	 */
	@Override
	public Date getD() {
		return (Date) getValue(1);
	}

	/**
	 * Setter for <code>PUBLIC.T_DATES.T</code>.
	 */
	@Override
	public void setT(Time value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_DATES.T</code>.
	 */
	@Override
	public Time getT() {
		return (Time) getValue(2);
	}

	/**
	 * Setter for <code>PUBLIC.T_DATES.TS</code>.
	 */
	@Override
	public void setTs(Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_DATES.TS</code>.
	 */
	@Override
	public Timestamp getTs() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>PUBLIC.T_DATES.D_INT</code>.
	 */
	@Override
	public void setDInt(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_DATES.D_INT</code>.
	 */
	@Override
	public java.lang.Integer getDInt() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>PUBLIC.T_DATES.TS_BIGINT</code>.
	 */
	@Override
	public void setTsBigint(java.lang.Long value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_DATES.TS_BIGINT</code>.
	 */
	@Override
	public java.lang.Long getTsBigint() {
		return (java.lang.Long) getValue(5);
	}

	/**
	 * Setter for <code>PUBLIC.T_DATES.I_Y</code>.
	 */
	@Override
	public void setIY(YearToMonth value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_DATES.I_Y</code>.
	 */
	@Override
	public YearToMonth getIY() {
		return (YearToMonth) getValue(6);
	}

	/**
	 * Setter for <code>PUBLIC.T_DATES.I_D</code>.
	 */
	@Override
	public void setID(DayToSecond value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>PUBLIC.T_DATES.I_D</code>.
	 */
	@Override
	public DayToSecond getID() {
		return (DayToSecond) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<java.lang.Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<java.lang.Integer, Date, Time, Timestamp, java.lang.Integer, java.lang.Long, YearToMonth, DayToSecond> fieldsRow() {
		return (Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<java.lang.Integer, Date, Time, Timestamp, java.lang.Integer, java.lang.Long, YearToMonth, DayToSecond> valuesRow() {
		return (Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<java.lang.Integer> field1() {
		return TDates.T_DATES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Date> field2() {
		return TDates.T_DATES.D;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Time> field3() {
		return TDates.T_DATES.T;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return TDates.T_DATES.TS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<java.lang.Integer> field5() {
		return TDates.T_DATES.D_INT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<java.lang.Long> field6() {
		return TDates.T_DATES.TS_BIGINT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<YearToMonth> field7() {
		return TDates.T_DATES.I_Y;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<DayToSecond> field8() {
		return TDates.T_DATES.I_D;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Date value2() {
		return getD();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Time value3() {
		return getT();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getTs();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getDInt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value6() {
		return getTsBigint();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public YearToMonth value7() {
		return getIY();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DayToSecond value8() {
		return getID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TDatesRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TDatesRecord value2(Date value) {
		setD(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TDatesRecord value3(Time value) {
		setT(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TDatesRecord value4(Timestamp value) {
		setTs(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TDatesRecord value5(java.lang.Integer value) {
		setDInt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TDatesRecord value6(java.lang.Long value) {
		setTsBigint(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TDatesRecord value7(YearToMonth value) {
		setIY(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TDatesRecord value8(DayToSecond value) {
		setID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TDatesRecord values(java.lang.Integer value1, Date value2, Time value3, Timestamp value4, java.lang.Integer value5, java.lang.Long value6, YearToMonth value7, DayToSecond value8) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITDates from) {
		setId(from.getId());
		setD(from.getD());
		setT(from.getT());
		setTs(from.getTs());
		setDInt(from.getDInt());
		setTsBigint(from.getTsBigint());
		setIY(from.getIY());
		setID(from.getID());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITDates> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TDatesRecord
	 */
	public TDatesRecord() {
		super(TDates.T_DATES);
	}

	/**
	 * Create a detached, initialised TDatesRecord
	 */
	public TDatesRecord(java.lang.Integer id, Date d, Time t, Timestamp ts, java.lang.Integer dInt, java.lang.Long tsBigint, YearToMonth iY, DayToSecond iD) {
		super(TDates.T_DATES);

		setValue(0, id);
		setValue(1, d);
		setValue(2, t);
		setValue(3, ts);
		setValue(4, dInt);
		setValue(5, tsBigint);
		setValue(6, iY);
		setValue(7, iD);
	}
}
