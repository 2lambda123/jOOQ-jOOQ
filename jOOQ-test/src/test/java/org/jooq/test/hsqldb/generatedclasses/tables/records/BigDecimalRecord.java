/**
 * This class is generated by jOOQ
 */
package org.jooq.test.hsqldb.generatedclasses.tables.records;


import java.math.BigInteger;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;
import org.jooq.test.hsqldb.generatedclasses.tables.BigDecimal;
import org.jooq.test.hsqldb.generatedclasses.tables.interfaces.IBigDecimal;


/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BigDecimalRecord extends TableRecordImpl<BigDecimalRecord> implements Record2<java.lang.Integer, BigInteger>, IBigDecimal {

	private static final long serialVersionUID = -2062622086;

	/**
	 * Setter for <code>PUBLIC.BIG_DECIMAL.ID</code>.
	 */
	@Override
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>PUBLIC.BIG_DECIMAL.ID</code>.
	 */
	@Override
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>PUBLIC.BIG_DECIMAL.OTHER</code>.
	 */
	@Override
	public void setOther(BigInteger value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>PUBLIC.BIG_DECIMAL.OTHER</code>.
	 */
	@Override
	public BigInteger getOther() {
		return (BigInteger) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<java.lang.Integer, BigInteger> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<java.lang.Integer, BigInteger> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<java.lang.Integer> field1() {
		return BigDecimal.BIG_DECIMAL.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigInteger> field2() {
		return BigDecimal.BIG_DECIMAL.OTHER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigInteger value2() {
		return getOther();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimalRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimalRecord value2(BigInteger value) {
		setOther(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimalRecord values(java.lang.Integer value1, BigInteger value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IBigDecimal from) {
		setId(from.getId());
		setOther(from.getOther());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IBigDecimal> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached BigDecimalRecord
	 */
	public BigDecimalRecord() {
		super(BigDecimal.BIG_DECIMAL);
	}

	/**
	 * Create a detached, initialised BigDecimalRecord
	 */
	public BigDecimalRecord(java.lang.Integer id, BigInteger other) {
		super(BigDecimal.BIG_DECIMAL);

		setValue(0, id);
		setValue(1, other);
	}
}
