/**
 * This class is generated by jOOQ
 */
package org.jooq.test.vertica.generatedclasses.tables;


import java.sql.Date;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.test.vertica.generatedclasses.Public;
import org.jooq.test.vertica.generatedclasses.tables.records.VAuthorRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VAuthor extends TableImpl<VAuthorRecord> {

	private static final long serialVersionUID = -1157537082;

	/**
	 * The reference instance of <code>public.v_author</code>
	 */
	public static final VAuthor V_AUTHOR = new VAuthor();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<VAuthorRecord> getRecordType() {
		return VAuthorRecord.class;
	}

	/**
	 * The column <code>public.v_author.ID</code>.
	 */
	public final TableField<VAuthorRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.v_author.FIRST_NAME</code>.
	 */
	public final TableField<VAuthorRecord, String> FIRST_NAME = createField("FIRST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>public.v_author.LAST_NAME</code>.
	 */
	public final TableField<VAuthorRecord, String> LAST_NAME = createField("LAST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>public.v_author.DATE_OF_BIRTH</code>.
	 */
	public final TableField<VAuthorRecord, Date> DATE_OF_BIRTH = createField("DATE_OF_BIRTH", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * The column <code>public.v_author.YEAR_OF_BIRTH</code>.
	 */
	public final TableField<VAuthorRecord, Integer> YEAR_OF_BIRTH = createField("YEAR_OF_BIRTH", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.v_author.ADDRESS</code>.
	 */
	public final TableField<VAuthorRecord, String> ADDRESS = createField("ADDRESS", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * Create a <code>public.v_author</code> table reference
	 */
	public VAuthor() {
		this("v_author", null);
	}

	/**
	 * Create an aliased <code>public.v_author</code> table reference
	 */
	public VAuthor(String alias) {
		this(alias, V_AUTHOR);
	}

	private VAuthor(String alias, Table<VAuthorRecord> aliased) {
		this(alias, aliased, null);
	}

	private VAuthor(String alias, Table<VAuthorRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public VAuthor as(String alias) {
		return new VAuthor(alias, this);
	}

	/**
	 * Rename this table
	 */
	public VAuthor rename(String name) {
		return new VAuthor(name, null);
	}
}
