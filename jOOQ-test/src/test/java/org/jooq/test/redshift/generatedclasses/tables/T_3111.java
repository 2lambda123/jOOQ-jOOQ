/**
 * This class is generated by jOOQ
 */
package org.jooq.test.redshift.generatedclasses.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.all.converters.T_3111_Bool1Converter;
import org.jooq.test.all.converters.T_3111_Bool2Converter;
import org.jooq.test.all.converters.T_3111_InverseConverter;
import org.jooq.test.redshift.generatedclasses.Keys;
import org.jooq.test.redshift.generatedclasses.Public;
import org.jooq.test.redshift.generatedclasses.tables.records.T_3111Record;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class T_3111 extends TableImpl<T_3111Record> {

	private static final long serialVersionUID = 1796287866;

	/**
	 * The reference instance of <code>public.t_3111</code>
	 */
	public static final T_3111 T_3111 = new T_3111();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<T_3111Record> getRecordType() {
		return T_3111Record.class;
	}

	/**
	 * The column <code>public.t_3111.id</code>.
	 */
	public final TableField<T_3111Record, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.t_3111.inverse</code>.
	 */
	public final TableField<T_3111Record, Integer> INVERSE = createField("inverse", org.jooq.impl.SQLDataType.INTEGER, this, "", new T_3111_InverseConverter());

	/**
	 * The column <code>public.t_3111.bool1</code>.
	 */
	public final TableField<T_3111Record, Integer> BOOL1 = createField("bool1", org.jooq.impl.SQLDataType.BOOLEAN, this, "", new T_3111_Bool1Converter());

	/**
	 * The column <code>public.t_3111.bool2</code>.
	 */
	public final TableField<T_3111Record, Integer> BOOL2 = createField("bool2", org.jooq.impl.SQLDataType.BOOLEAN, this, "", new T_3111_Bool2Converter());

	/**
	 * Create a <code>public.t_3111</code> table reference
	 */
	public T_3111() {
		this("t_3111", null);
	}

	/**
	 * Create an aliased <code>public.t_3111</code> table reference
	 */
	public T_3111(String alias) {
		this(alias, T_3111);
	}

	private T_3111(String alias, Table<T_3111Record> aliased) {
		this(alias, aliased, null);
	}

	private T_3111(String alias, Table<T_3111Record> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<T_3111Record> getPrimaryKey() {
		return Keys.PK_T_3111;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<T_3111Record>> getKeys() {
		return Arrays.<UniqueKey<T_3111Record>>asList(Keys.PK_T_3111);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_3111 as(String alias) {
		return new T_3111(alias, this);
	}

	/**
	 * Rename this table
	 */
	public T_3111 rename(String name) {
		return new T_3111(name, null);
	}
}
