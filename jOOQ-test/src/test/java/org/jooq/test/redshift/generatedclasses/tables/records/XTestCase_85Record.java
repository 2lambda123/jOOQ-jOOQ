/**
 * This class is generated by jOOQ
 */
package org.jooq.test.redshift.generatedclasses.tables.records;


import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;
import org.jooq.test.redshift.generatedclasses.tables.XTestCase_85;
import org.jooq.test.redshift.generatedclasses.tables.interfaces.IXTestCase_85;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XTestCase_85Record extends TableRecordImpl<XTestCase_85Record> implements Record3<Integer, Integer, Object>, IXTestCase_85 {

	private static final long serialVersionUID = -645392708;

	/**
	 * Setter for <code>public.x_test_case_85.id</code>.
	 */
	public XTestCase_85Record setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.x_test_case_85.id</code>.
	 */
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.x_test_case_85.x_unused_id</code>.
	 */
	public XTestCase_85Record setXUnusedId(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.x_test_case_85.x_unused_id</code>.
	 */
	@Override
	public Integer getXUnusedId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.x_test_case_85.x_unused_name</code>.
	 */
	public XTestCase_85Record setXUnusedName(Object value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.x_test_case_85.x_unused_name</code>.
	 */
	@Override
	public Object getXUnusedName() {
		return (Object) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Object> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, Object> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return XTestCase_85.X_TEST_CASE_85.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return XTestCase_85.X_TEST_CASE_85.X_UNUSED_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Object> field3() {
		return XTestCase_85.X_TEST_CASE_85.X_UNUSED_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getXUnusedId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Object value3() {
		return getXUnusedName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public XTestCase_85Record value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public XTestCase_85Record value2(Integer value) {
		setXUnusedId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public XTestCase_85Record value3(Object value) {
		setXUnusedName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public XTestCase_85Record values(Integer value1, Integer value2, Object value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached XTestCase_85Record
	 */
	public XTestCase_85Record() {
		super(XTestCase_85.X_TEST_CASE_85);
	}

	/**
	 * Create a detached, initialised XTestCase_85Record
	 */
	public XTestCase_85Record(Integer id, Integer xUnusedId, Object xUnusedName) {
		super(XTestCase_85.X_TEST_CASE_85);

		setValue(0, id);
		setValue(1, xUnusedId);
		setValue(2, xUnusedName);
	}
}
