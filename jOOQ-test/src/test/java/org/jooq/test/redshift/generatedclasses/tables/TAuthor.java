/**
 * This class is generated by jOOQ
 */
package org.jooq.test.redshift.generatedclasses.tables;


import java.sql.Date;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.test.redshift.generatedclasses.Public;
import org.jooq.test.redshift.generatedclasses.tables.records.TAuthorRecord;


/**
 * An entity holding authors of books
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TAuthor extends TableImpl<TAuthorRecord> {

	private static final long serialVersionUID = 1589699062;

	/**
	 * The reference instance of <code>public.t_author</code>
	 */
	public static final TAuthor T_AUTHOR = new TAuthor();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TAuthorRecord> getRecordType() {
		return TAuthorRecord.class;
	}

	/**
	 * The column <code>public.t_author.id</code>. The author ID
	 */
	public final TableField<TAuthorRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "The author ID");

	/**
	 * The column <code>public.t_author.first_name</code>. The author's first name
	 */
	public final TableField<TAuthorRecord, Object> FIRST_NAME = createField("first_name", org.jooq.impl.DefaultDataType.getDefaultDataType("character varying"), this, "The author's first name");

	/**
	 * The column <code>public.t_author.last_name</code>. The author's last name
	 */
	public final TableField<TAuthorRecord, Object> LAST_NAME = createField("last_name", org.jooq.impl.DefaultDataType.getDefaultDataType("character varying"), this, "The author's last name");

	/**
	 * The column <code>public.t_author.date_of_birth</code>. The author's date of birth
	 */
	public final TableField<TAuthorRecord, Date> DATE_OF_BIRTH = createField("date_of_birth", org.jooq.impl.SQLDataType.DATE, this, "The author's date of birth");

	/**
	 * The column <code>public.t_author.year_of_birth</code>. The author's year of birth
	 */
	public final TableField<TAuthorRecord, Integer> YEAR_OF_BIRTH = createField("year_of_birth", org.jooq.impl.SQLDataType.INTEGER, this, "The author's year of birth");

	/**
	 * The column <code>public.t_author.address</code>. The author's address
	 */
	public final TableField<TAuthorRecord, Object> ADDRESS = createField("address", org.jooq.impl.DefaultDataType.getDefaultDataType("character varying"), this, "The author's address");

	/**
	 * Create a <code>public.t_author</code> table reference
	 */
	public TAuthor() {
		this("t_author", null);
	}

	/**
	 * Create an aliased <code>public.t_author</code> table reference
	 */
	public TAuthor(String alias) {
		this(alias, T_AUTHOR);
	}

	private TAuthor(String alias, Table<TAuthorRecord> aliased) {
		this(alias, aliased, null);
	}

	private TAuthor(String alias, Table<TAuthorRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "An entity holding authors of books");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TAuthor as(String alias) {
		return new TAuthor(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TAuthor rename(String name) {
		return new TAuthor(name, null);
	}
}
