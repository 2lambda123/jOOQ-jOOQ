/**
 * This class is generated by jOOQ
 */
package org.jooq.test.redshift.generatedclasses.tables;


import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.test.redshift.generatedclasses.Public;
import org.jooq.test.redshift.generatedclasses.tables.records.XTestCase_85Record;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XTestCase_85 extends TableImpl<XTestCase_85Record> {

	private static final long serialVersionUID = -1178678210;

	/**
	 * The reference instance of <code>public.x_test_case_85</code>
	 */
	public static final XTestCase_85 X_TEST_CASE_85 = new XTestCase_85();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<XTestCase_85Record> getRecordType() {
		return XTestCase_85Record.class;
	}

	/**
	 * The column <code>public.x_test_case_85.id</code>.
	 */
	public final TableField<XTestCase_85Record, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.x_test_case_85.x_unused_id</code>.
	 */
	public final TableField<XTestCase_85Record, Integer> X_UNUSED_ID = createField("x_unused_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.x_test_case_85.x_unused_name</code>.
	 */
	public final TableField<XTestCase_85Record, Object> X_UNUSED_NAME = createField("x_unused_name", org.jooq.impl.DefaultDataType.getDefaultDataType("character varying"), this, "");

	/**
	 * Create a <code>public.x_test_case_85</code> table reference
	 */
	public XTestCase_85() {
		this("x_test_case_85", null);
	}

	/**
	 * Create an aliased <code>public.x_test_case_85</code> table reference
	 */
	public XTestCase_85(String alias) {
		this(alias, X_TEST_CASE_85);
	}

	private XTestCase_85(String alias, Table<XTestCase_85Record> aliased) {
		this(alias, aliased, null);
	}

	private XTestCase_85(String alias, Table<XTestCase_85Record> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public XTestCase_85 as(String alias) {
		return new XTestCase_85(alias, this);
	}

	/**
	 * Rename this table
	 */
	public XTestCase_85 rename(String name) {
		return new XTestCase_85(name, null);
	}
}
