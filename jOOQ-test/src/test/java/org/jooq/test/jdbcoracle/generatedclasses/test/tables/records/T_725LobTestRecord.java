/**
 * This class is generated by jOOQ
 */
package org.jooq.test.jdbcoracle.generatedclasses.test.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.test.jdbcoracle.generatedclasses.test.tables.T_725LobTest;
import org.jooq.test.jdbcoracle.generatedclasses.test.tables.interfaces.IT_725LobTest;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class T_725LobTestRecord extends UpdatableRecordImpl<T_725LobTestRecord> implements Record6<Integer, byte[], String, byte[], String, byte[]>, IT_725LobTest {

	private static final long serialVersionUID = 981907337;

	/**
	 * Setter for <code>TEST.T_725_LOB_TEST.ID</code>.
	 */
	@Override
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>TEST.T_725_LOB_TEST.ID</code>.
	 */
	@Override
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>TEST.T_725_LOB_TEST.LOB</code>.
	 */
	@Override
	public void setLob(byte[] value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>TEST.T_725_LOB_TEST.LOB</code>.
	 */
	@Override
	public byte[] getLob() {
		return (byte[]) getValue(1);
	}

	/**
	 * Setter for <code>TEST.T_725_LOB_TEST.USER_JAVA_SQL_CLOB</code>.
	 */
	@Override
	public void setUserJavaSqlClob(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>TEST.T_725_LOB_TEST.USER_JAVA_SQL_CLOB</code>.
	 */
	@Override
	public String getUserJavaSqlClob() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>TEST.T_725_LOB_TEST.USER_JAVA_SQL_BLOB</code>.
	 */
	@Override
	public void setUserJavaSqlBlob(byte[] value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>TEST.T_725_LOB_TEST.USER_JAVA_SQL_BLOB</code>.
	 */
	@Override
	public byte[] getUserJavaSqlBlob() {
		return (byte[]) getValue(3);
	}

	/**
	 * Setter for <code>TEST.T_725_LOB_TEST.JOOQ_JAVA_SQL_CLOB</code>.
	 */
	@Override
	public void setJooqJavaSqlClob(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>TEST.T_725_LOB_TEST.JOOQ_JAVA_SQL_CLOB</code>.
	 */
	@Override
	public String getJooqJavaSqlClob() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>TEST.T_725_LOB_TEST.JOOQ_JAVA_SQL_BLOB</code>.
	 */
	@Override
	public void setJooqJavaSqlBlob(byte[] value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>TEST.T_725_LOB_TEST.JOOQ_JAVA_SQL_BLOB</code>.
	 */
	@Override
	public byte[] getJooqJavaSqlBlob() {
		return (byte[]) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, byte[], String, byte[], String, byte[]> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, byte[], String, byte[], String, byte[]> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return T_725LobTest.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field2() {
		return T_725LobTest.LOB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return T_725LobTest.USER_JAVA_SQL_CLOB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field4() {
		return T_725LobTest.USER_JAVA_SQL_BLOB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return T_725LobTest.JOOQ_JAVA_SQL_CLOB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field6() {
		return T_725LobTest.JOOQ_JAVA_SQL_BLOB;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value2() {
		return getLob();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getUserJavaSqlClob();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value4() {
		return getUserJavaSqlBlob();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getJooqJavaSqlClob();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value6() {
		return getJooqJavaSqlBlob();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_725LobTestRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_725LobTestRecord value2(byte[] value) {
		setLob(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_725LobTestRecord value3(String value) {
		setUserJavaSqlClob(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_725LobTestRecord value4(byte[] value) {
		setUserJavaSqlBlob(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_725LobTestRecord value5(String value) {
		setJooqJavaSqlClob(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_725LobTestRecord value6(byte[] value) {
		setJooqJavaSqlBlob(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public T_725LobTestRecord values(Integer value1, byte[] value2, String value3, byte[] value4, String value5, byte[] value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(IT_725LobTest from) {
		setId(from.getId());
		setLob(from.getLob());
		setUserJavaSqlClob(from.getUserJavaSqlClob());
		setUserJavaSqlBlob(from.getUserJavaSqlBlob());
		setJooqJavaSqlClob(from.getJooqJavaSqlClob());
		setJooqJavaSqlBlob(from.getJooqJavaSqlBlob());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends IT_725LobTest> E into(E into) {
		into.from(this);
		return into;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached T_725LobTestRecord
	 */
	public T_725LobTestRecord() {
		super(T_725LobTest.T_725_LOB_TEST);
	}

	/**
	 * Create a detached, initialised T_725LobTestRecord
	 */
	public T_725LobTestRecord(Integer id, byte[] lob, String userJavaSqlClob, byte[] userJavaSqlBlob, String jooqJavaSqlClob, byte[] jooqJavaSqlBlob) {
		super(T_725LobTest.T_725_LOB_TEST);

		setValue(0, id);
		setValue(1, lob);
		setValue(2, userJavaSqlClob);
		setValue(3, userJavaSqlBlob);
		setValue(4, jooqJavaSqlClob);
		setValue(5, jooqJavaSqlBlob);
	}
}
