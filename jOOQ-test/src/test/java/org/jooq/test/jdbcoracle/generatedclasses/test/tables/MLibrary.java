/**
 * This class is generated by jOOQ
 */
package org.jooq.test.jdbcoracle.generatedclasses.test.tables;


import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.test.jdbcoracle.generatedclasses.test.Test;
import org.jooq.test.jdbcoracle.generatedclasses.test.tables.records.MLibraryRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MLibrary extends TableImpl<MLibraryRecord> {

	private static final long serialVersionUID = 1838879233;

	/**
	 * The reference instance of <code>TEST.M_LIBRARY</code>
	 */
	public static final MLibrary M_LIBRARY = new MLibrary();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MLibraryRecord> getRecordType() {
		return MLibraryRecord.class;
	}

	/**
	 * The column <code>TEST.M_LIBRARY.AUTHOR</code>.
	 */
	public static final TableField<MLibraryRecord, String> AUTHOR = createField("AUTHOR", org.jooq.impl.SQLDataType.VARCHAR.length(101), M_LIBRARY, "");

	/**
	 * The column <code>TEST.M_LIBRARY.TITLE</code>.
	 */
	public static final TableField<MLibraryRecord, String> TITLE = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(400), M_LIBRARY, "");

	/**
	 * No further instances allowed
	 */
	private MLibrary() {
		this("M_LIBRARY", null);
	}

	private MLibrary(String alias, Table<MLibraryRecord> aliased) {
		this(alias, aliased, null);
	}

	private MLibrary(String alias, Table<MLibraryRecord> aliased, Field<?>[] parameters) {
		super(alias, Test.TEST, aliased, parameters, "");
	}
}
