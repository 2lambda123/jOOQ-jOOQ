/**
 * This class is generated by jOOQ
 */
package org.jooq.test.jdbcoracle.generatedclasses.test.tables.pojos;


import java.math.BigDecimal;

import org.jooq.test.jdbcoracle.generatedclasses.test.tables.interfaces.ITReserved;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TReserved implements ITReserved {

	private static final long serialVersionUID = 648745333;

	private BigDecimal abstract_;
	private BigDecimal case_;
	private BigDecimal catch_;
	private BigDecimal class_;
	private BigDecimal def;
	private BigDecimal do_;
	private BigDecimal else_;
	private BigDecimal extends_;
	private BigDecimal false_;
	private BigDecimal final_;
	private BigDecimal finally_;
	private BigDecimal for_;
	private BigDecimal forsome;
	private BigDecimal if_;
	private BigDecimal implicit;
	private BigDecimal import_;
	private BigDecimal lazy;
	private BigDecimal match;
	private BigDecimal new_;
	private BigDecimal null_;
	private BigDecimal object;
	private BigDecimal override;
	private BigDecimal package_;
	private BigDecimal private_;
	private BigDecimal protected_;
	private BigDecimal return_;
	private BigDecimal sealed;
	private BigDecimal super_;
	private BigDecimal this_;
	private BigDecimal throw_;
	private BigDecimal trait;
	private BigDecimal try_;
	private BigDecimal true_;
	private BigDecimal type;
	private BigDecimal val;
	private BigDecimal var;
	private BigDecimal while_;
	private BigDecimal with;
	private BigDecimal yield;

	public TReserved() {}

	public TReserved(TReserved value) {
		this.abstract_ = value.abstract_;
		this.case_ = value.case_;
		this.catch_ = value.catch_;
		this.class_ = value.class_;
		this.def = value.def;
		this.do_ = value.do_;
		this.else_ = value.else_;
		this.extends_ = value.extends_;
		this.false_ = value.false_;
		this.final_ = value.final_;
		this.finally_ = value.finally_;
		this.for_ = value.for_;
		this.forsome = value.forsome;
		this.if_ = value.if_;
		this.implicit = value.implicit;
		this.import_ = value.import_;
		this.lazy = value.lazy;
		this.match = value.match;
		this.new_ = value.new_;
		this.null_ = value.null_;
		this.object = value.object;
		this.override = value.override;
		this.package_ = value.package_;
		this.private_ = value.private_;
		this.protected_ = value.protected_;
		this.return_ = value.return_;
		this.sealed = value.sealed;
		this.super_ = value.super_;
		this.this_ = value.this_;
		this.throw_ = value.throw_;
		this.trait = value.trait;
		this.try_ = value.try_;
		this.true_ = value.true_;
		this.type = value.type;
		this.val = value.val;
		this.var = value.var;
		this.while_ = value.while_;
		this.with = value.with;
		this.yield = value.yield;
	}

	public TReserved(
		BigDecimal abstract_,
		BigDecimal case_,
		BigDecimal catch_,
		BigDecimal class_,
		BigDecimal def,
		BigDecimal do_,
		BigDecimal else_,
		BigDecimal extends_,
		BigDecimal false_,
		BigDecimal final_,
		BigDecimal finally_,
		BigDecimal for_,
		BigDecimal forsome,
		BigDecimal if_,
		BigDecimal implicit,
		BigDecimal import_,
		BigDecimal lazy,
		BigDecimal match,
		BigDecimal new_,
		BigDecimal null_,
		BigDecimal object,
		BigDecimal override,
		BigDecimal package_,
		BigDecimal private_,
		BigDecimal protected_,
		BigDecimal return_,
		BigDecimal sealed,
		BigDecimal super_,
		BigDecimal this_,
		BigDecimal throw_,
		BigDecimal trait,
		BigDecimal try_,
		BigDecimal true_,
		BigDecimal type,
		BigDecimal val,
		BigDecimal var,
		BigDecimal while_,
		BigDecimal with,
		BigDecimal yield
	) {
		this.abstract_ = abstract_;
		this.case_ = case_;
		this.catch_ = catch_;
		this.class_ = class_;
		this.def = def;
		this.do_ = do_;
		this.else_ = else_;
		this.extends_ = extends_;
		this.false_ = false_;
		this.final_ = final_;
		this.finally_ = finally_;
		this.for_ = for_;
		this.forsome = forsome;
		this.if_ = if_;
		this.implicit = implicit;
		this.import_ = import_;
		this.lazy = lazy;
		this.match = match;
		this.new_ = new_;
		this.null_ = null_;
		this.object = object;
		this.override = override;
		this.package_ = package_;
		this.private_ = private_;
		this.protected_ = protected_;
		this.return_ = return_;
		this.sealed = sealed;
		this.super_ = super_;
		this.this_ = this_;
		this.throw_ = throw_;
		this.trait = trait;
		this.try_ = try_;
		this.true_ = true_;
		this.type = type;
		this.val = val;
		this.var = var;
		this.while_ = while_;
		this.with = with;
		this.yield = yield;
	}

	@Override
	public BigDecimal getAbstract() {
		return this.abstract_;
	}

	@Override
	public void setAbstract(BigDecimal abstract_) {
		this.abstract_ = abstract_;
	}

	@Override
	public BigDecimal getCase() {
		return this.case_;
	}

	@Override
	public void setCase(BigDecimal case_) {
		this.case_ = case_;
	}

	@Override
	public BigDecimal getCatch() {
		return this.catch_;
	}

	@Override
	public void setCatch(BigDecimal catch_) {
		this.catch_ = catch_;
	}

	@Override
	public BigDecimal getClass_() {
		return this.class_;
	}

	@Override
	public void setClass_(BigDecimal class_) {
		this.class_ = class_;
	}

	@Override
	public BigDecimal getDef() {
		return this.def;
	}

	@Override
	public void setDef(BigDecimal def) {
		this.def = def;
	}

	@Override
	public BigDecimal getDo() {
		return this.do_;
	}

	@Override
	public void setDo(BigDecimal do_) {
		this.do_ = do_;
	}

	@Override
	public BigDecimal getElse() {
		return this.else_;
	}

	@Override
	public void setElse(BigDecimal else_) {
		this.else_ = else_;
	}

	@Override
	public BigDecimal getExtends() {
		return this.extends_;
	}

	@Override
	public void setExtends(BigDecimal extends_) {
		this.extends_ = extends_;
	}

	@Override
	public BigDecimal getFalse() {
		return this.false_;
	}

	@Override
	public void setFalse(BigDecimal false_) {
		this.false_ = false_;
	}

	@Override
	public BigDecimal getFinal() {
		return this.final_;
	}

	@Override
	public void setFinal(BigDecimal final_) {
		this.final_ = final_;
	}

	@Override
	public BigDecimal getFinally() {
		return this.finally_;
	}

	@Override
	public void setFinally(BigDecimal finally_) {
		this.finally_ = finally_;
	}

	@Override
	public BigDecimal getFor() {
		return this.for_;
	}

	@Override
	public void setFor(BigDecimal for_) {
		this.for_ = for_;
	}

	@Override
	public BigDecimal getForsome() {
		return this.forsome;
	}

	@Override
	public void setForsome(BigDecimal forsome) {
		this.forsome = forsome;
	}

	@Override
	public BigDecimal getIf() {
		return this.if_;
	}

	@Override
	public void setIf(BigDecimal if_) {
		this.if_ = if_;
	}

	@Override
	public BigDecimal getImplicit() {
		return this.implicit;
	}

	@Override
	public void setImplicit(BigDecimal implicit) {
		this.implicit = implicit;
	}

	@Override
	public BigDecimal getImport() {
		return this.import_;
	}

	@Override
	public void setImport(BigDecimal import_) {
		this.import_ = import_;
	}

	@Override
	public BigDecimal getLazy() {
		return this.lazy;
	}

	@Override
	public void setLazy(BigDecimal lazy) {
		this.lazy = lazy;
	}

	@Override
	public BigDecimal getMatch() {
		return this.match;
	}

	@Override
	public void setMatch(BigDecimal match) {
		this.match = match;
	}

	@Override
	public BigDecimal getNew() {
		return this.new_;
	}

	@Override
	public void setNew(BigDecimal new_) {
		this.new_ = new_;
	}

	@Override
	public BigDecimal getNull() {
		return this.null_;
	}

	@Override
	public void setNull(BigDecimal null_) {
		this.null_ = null_;
	}

	@Override
	public BigDecimal getObject() {
		return this.object;
	}

	@Override
	public void setObject(BigDecimal object) {
		this.object = object;
	}

	@Override
	public BigDecimal getOverride() {
		return this.override;
	}

	@Override
	public void setOverride(BigDecimal override) {
		this.override = override;
	}

	@Override
	public BigDecimal getPackage() {
		return this.package_;
	}

	@Override
	public void setPackage(BigDecimal package_) {
		this.package_ = package_;
	}

	@Override
	public BigDecimal getPrivate() {
		return this.private_;
	}

	@Override
	public void setPrivate(BigDecimal private_) {
		this.private_ = private_;
	}

	@Override
	public BigDecimal getProtected() {
		return this.protected_;
	}

	@Override
	public void setProtected(BigDecimal protected_) {
		this.protected_ = protected_;
	}

	@Override
	public BigDecimal getReturn() {
		return this.return_;
	}

	@Override
	public void setReturn(BigDecimal return_) {
		this.return_ = return_;
	}

	@Override
	public BigDecimal getSealed() {
		return this.sealed;
	}

	@Override
	public void setSealed(BigDecimal sealed) {
		this.sealed = sealed;
	}

	@Override
	public BigDecimal getSuper() {
		return this.super_;
	}

	@Override
	public void setSuper(BigDecimal super_) {
		this.super_ = super_;
	}

	@Override
	public BigDecimal getThis() {
		return this.this_;
	}

	@Override
	public void setThis(BigDecimal this_) {
		this.this_ = this_;
	}

	@Override
	public BigDecimal getThrow() {
		return this.throw_;
	}

	@Override
	public void setThrow(BigDecimal throw_) {
		this.throw_ = throw_;
	}

	@Override
	public BigDecimal getTrait() {
		return this.trait;
	}

	@Override
	public void setTrait(BigDecimal trait) {
		this.trait = trait;
	}

	@Override
	public BigDecimal getTry() {
		return this.try_;
	}

	@Override
	public void setTry(BigDecimal try_) {
		this.try_ = try_;
	}

	@Override
	public BigDecimal getTrue() {
		return this.true_;
	}

	@Override
	public void setTrue(BigDecimal true_) {
		this.true_ = true_;
	}

	@Override
	public BigDecimal getType() {
		return this.type;
	}

	@Override
	public void setType(BigDecimal type) {
		this.type = type;
	}

	@Override
	public BigDecimal getVal() {
		return this.val;
	}

	@Override
	public void setVal(BigDecimal val) {
		this.val = val;
	}

	@Override
	public BigDecimal getVar() {
		return this.var;
	}

	@Override
	public void setVar(BigDecimal var) {
		this.var = var;
	}

	@Override
	public BigDecimal getWhile() {
		return this.while_;
	}

	@Override
	public void setWhile(BigDecimal while_) {
		this.while_ = while_;
	}

	@Override
	public BigDecimal getWith() {
		return this.with;
	}

	@Override
	public void setWith(BigDecimal with) {
		this.with = with;
	}

	@Override
	public BigDecimal getYield() {
		return this.yield;
	}

	@Override
	public void setYield(BigDecimal yield) {
		this.yield = yield;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITReserved from) {
		setAbstract(from.getAbstract());
		setCase(from.getCase());
		setCatch(from.getCatch());
		setClass_(from.getClass_());
		setDef(from.getDef());
		setDo(from.getDo());
		setElse(from.getElse());
		setExtends(from.getExtends());
		setFalse(from.getFalse());
		setFinal(from.getFinal());
		setFinally(from.getFinally());
		setFor(from.getFor());
		setForsome(from.getForsome());
		setIf(from.getIf());
		setImplicit(from.getImplicit());
		setImport(from.getImport());
		setLazy(from.getLazy());
		setMatch(from.getMatch());
		setNew(from.getNew());
		setNull(from.getNull());
		setObject(from.getObject());
		setOverride(from.getOverride());
		setPackage(from.getPackage());
		setPrivate(from.getPrivate());
		setProtected(from.getProtected());
		setReturn(from.getReturn());
		setSealed(from.getSealed());
		setSuper(from.getSuper());
		setThis(from.getThis());
		setThrow(from.getThrow());
		setTrait(from.getTrait());
		setTry(from.getTry());
		setTrue(from.getTrue());
		setType(from.getType());
		setVal(from.getVal());
		setVar(from.getVar());
		setWhile(from.getWhile());
		setWith(from.getWith());
		setYield(from.getYield());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITReserved> E into(E into) {
		into.from(this);
		return into;
	}
}
