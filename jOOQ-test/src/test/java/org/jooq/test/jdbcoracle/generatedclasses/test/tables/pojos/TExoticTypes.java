/**
 * This class is generated by jOOQ
 */
package org.jooq.test.jdbcoracle.generatedclasses.test.tables.pojos;


import java.util.UUID;

import org.jooq.test.jdbcoracle.generatedclasses.test.tables.interfaces.ITExoticTypes;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TExoticTypes implements ITExoticTypes {

	private static final long serialVersionUID = 1395573952;

	private Integer id;
	private UUID    uu;
	private byte[]  javaIoSerializable;
	private String  plainSqlConverterXml;
	private String  plainSqlBindingXml;
	private Object  oracleXmlAsIs;
	private Object  oracleXmlAsDocument;
	private Object  oracleXmlAsSqlxml;

	public TExoticTypes() {}

	public TExoticTypes(TExoticTypes value) {
		this.id = value.id;
		this.uu = value.uu;
		this.javaIoSerializable = value.javaIoSerializable;
		this.plainSqlConverterXml = value.plainSqlConverterXml;
		this.plainSqlBindingXml = value.plainSqlBindingXml;
		this.oracleXmlAsIs = value.oracleXmlAsIs;
		this.oracleXmlAsDocument = value.oracleXmlAsDocument;
		this.oracleXmlAsSqlxml = value.oracleXmlAsSqlxml;
	}

	public TExoticTypes(
		Integer id,
		UUID    uu,
		byte[]  javaIoSerializable,
		String  plainSqlConverterXml,
		String  plainSqlBindingXml,
		Object  oracleXmlAsIs,
		Object  oracleXmlAsDocument,
		Object  oracleXmlAsSqlxml
	) {
		this.id = id;
		this.uu = uu;
		this.javaIoSerializable = javaIoSerializable;
		this.plainSqlConverterXml = plainSqlConverterXml;
		this.plainSqlBindingXml = plainSqlBindingXml;
		this.oracleXmlAsIs = oracleXmlAsIs;
		this.oracleXmlAsDocument = oracleXmlAsDocument;
		this.oracleXmlAsSqlxml = oracleXmlAsSqlxml;
	}

	@Override
	public Integer getId() {
		return this.id;
	}

	@Override
	public void setId(Integer id) {
		this.id = id;
	}

	@Override
	public UUID getUu() {
		return this.uu;
	}

	@Override
	public void setUu(UUID uu) {
		this.uu = uu;
	}

	@Override
	public byte[] getJavaIoSerializable() {
		return this.javaIoSerializable;
	}

	@Override
	public void setJavaIoSerializable(byte[] javaIoSerializable) {
		this.javaIoSerializable = javaIoSerializable;
	}

	@Override
	public String getPlainSqlConverterXml() {
		return this.plainSqlConverterXml;
	}

	@Override
	public void setPlainSqlConverterXml(String plainSqlConverterXml) {
		this.plainSqlConverterXml = plainSqlConverterXml;
	}

	@Override
	public String getPlainSqlBindingXml() {
		return this.plainSqlBindingXml;
	}

	@Override
	public void setPlainSqlBindingXml(String plainSqlBindingXml) {
		this.plainSqlBindingXml = plainSqlBindingXml;
	}

	@Override
	public Object getOracleXmlAsIs() {
		return this.oracleXmlAsIs;
	}

	@Override
	public void setOracleXmlAsIs(Object oracleXmlAsIs) {
		this.oracleXmlAsIs = oracleXmlAsIs;
	}

	@Override
	public Object getOracleXmlAsDocument() {
		return this.oracleXmlAsDocument;
	}

	@Override
	public void setOracleXmlAsDocument(Object oracleXmlAsDocument) {
		this.oracleXmlAsDocument = oracleXmlAsDocument;
	}

	@Override
	public Object getOracleXmlAsSqlxml() {
		return this.oracleXmlAsSqlxml;
	}

	@Override
	public void setOracleXmlAsSqlxml(Object oracleXmlAsSqlxml) {
		this.oracleXmlAsSqlxml = oracleXmlAsSqlxml;
	}

	// -------------------------------------------------------------------------
	// FROM and INTO
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void from(ITExoticTypes from) {
		setId(from.getId());
		setUu(from.getUu());
		setJavaIoSerializable(from.getJavaIoSerializable());
		setPlainSqlConverterXml(from.getPlainSqlConverterXml());
		setPlainSqlBindingXml(from.getPlainSqlBindingXml());
		setOracleXmlAsIs(from.getOracleXmlAsIs());
		setOracleXmlAsDocument(from.getOracleXmlAsDocument());
		setOracleXmlAsSqlxml(from.getOracleXmlAsSqlxml());
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public <E extends ITExoticTypes> E into(E into) {
		into.from(this);
		return into;
	}
}
