/**
 * This class is generated by jOOQ
 */
package org.jooq.test.jdbcoracle.generatedclasses.test.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.jdbcoracle.generatedclasses.test.Keys;
import org.jooq.test.jdbcoracle.generatedclasses.test.Test;
import org.jooq.test.jdbcoracle.generatedclasses.test.tables.records.TDirectoryRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDirectory extends TableImpl<TDirectoryRecord> {

	private static final long serialVersionUID = -1535641019;

	/**
	 * The reference instance of <code>TEST.T_DIRECTORY</code>
	 */
	public static final TDirectory T_DIRECTORY = new TDirectory();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TDirectoryRecord> getRecordType() {
		return TDirectoryRecord.class;
	}

	/**
	 * The column <code>TEST.T_DIRECTORY.ID</code>.
	 */
	public static final TableField<TDirectoryRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER, T_DIRECTORY, "");

	/**
	 * The column <code>TEST.T_DIRECTORY.PARENT_ID</code>.
	 */
	public static final TableField<TDirectoryRecord, Integer> PARENT_ID = createField("PARENT_ID", org.jooq.impl.SQLDataType.INTEGER, T_DIRECTORY, "");

	/**
	 * The column <code>TEST.T_DIRECTORY.IS_DIRECTORY</code>.
	 */
	public static final TableField<TDirectoryRecord, Integer> IS_DIRECTORY = createField("IS_DIRECTORY", org.jooq.impl.SQLDataType.INTEGER, T_DIRECTORY, "");

	/**
	 * The column <code>TEST.T_DIRECTORY.name</code>.
	 */
	public static final TableField<TDirectoryRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50), T_DIRECTORY, "");

	/**
	 * No further instances allowed
	 */
	private TDirectory() {
		this("T_DIRECTORY", null);
	}

	private TDirectory(String alias, Table<TDirectoryRecord> aliased) {
		this(alias, aliased, null);
	}

	private TDirectory(String alias, Table<TDirectoryRecord> aliased, Field<?>[] parameters) {
		super(alias, Test.TEST, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TDirectoryRecord> getPrimaryKey() {
		return Keys.PK_T_DIRECTORY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TDirectoryRecord>> getKeys() {
		return Arrays.<UniqueKey<TDirectoryRecord>>asList(Keys.PK_T_DIRECTORY);
	}
}
