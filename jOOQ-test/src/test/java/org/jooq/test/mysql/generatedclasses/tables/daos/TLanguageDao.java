/**
 * This class is generated by jOOQ
 */
package org.jooq.test.mysql.generatedclasses.tables.daos;


import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.test.mysql.generatedclasses.tables.TLanguage;
import org.jooq.test.mysql.generatedclasses.tables.records.TLanguageRecord;


/**
 * An entity holding language master data
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLanguageDao extends DAOImpl<TLanguageRecord, org.jooq.test.mysql.generatedclasses.tables.pojos.TLanguage, Integer> {

	/**
	 * Create a new TLanguageDao without any configuration
	 */
	public TLanguageDao() {
		super(TLanguage.T_LANGUAGE, org.jooq.test.mysql.generatedclasses.tables.pojos.TLanguage.class);
	}

	/**
	 * Create a new TLanguageDao with an attached configuration
	 */
	public TLanguageDao(Configuration configuration) {
		super(TLanguage.T_LANGUAGE, org.jooq.test.mysql.generatedclasses.tables.pojos.TLanguage.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(org.jooq.test.mysql.generatedclasses.tables.pojos.TLanguage object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>CD IN (values)</code>
	 */
	public List<org.jooq.test.mysql.generatedclasses.tables.pojos.TLanguage> fetchByCd(String... values) {
		return fetch(TLanguage.CD, values);
	}

	/**
	 * Fetch records that have <code>DESCRIPTION IN (values)</code>
	 */
	public List<org.jooq.test.mysql.generatedclasses.tables.pojos.TLanguage> fetchByDescription(String... values) {
		return fetch(TLanguage.DESCRIPTION, values);
	}

	/**
	 * Fetch records that have <code>description_english IN (values)</code>
	 */
	public List<org.jooq.test.mysql.generatedclasses.tables.pojos.TLanguage> fetchByDescriptionEnglish(String... values) {
		return fetch(TLanguage.DESCRIPTION_ENGLISH, values);
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	public List<org.jooq.test.mysql.generatedclasses.tables.pojos.TLanguage> fetchById(Integer... values) {
		return fetch(TLanguage.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	public org.jooq.test.mysql.generatedclasses.tables.pojos.TLanguage fetchOneById(Integer value) {
		return fetchOne(TLanguage.ID, value);
	}
}
