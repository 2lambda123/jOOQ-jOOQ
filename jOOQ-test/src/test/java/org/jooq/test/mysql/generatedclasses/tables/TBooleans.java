/**
 * This class is generated by jOOQ
 */
package org.jooq.test.mysql.generatedclasses.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.all.converters.Boolean_10;
import org.jooq.test.all.converters.Boolean_10_Converter;
import org.jooq.test.all.converters.Boolean_TF_LC;
import org.jooq.test.all.converters.Boolean_TF_LC_Converter;
import org.jooq.test.all.converters.Boolean_TF_UC;
import org.jooq.test.all.converters.Boolean_TF_UC_Converter;
import org.jooq.test.all.converters.Boolean_YES_NO_LC;
import org.jooq.test.all.converters.Boolean_YES_NO_LC_Converter;
import org.jooq.test.all.converters.Boolean_YES_NO_UC;
import org.jooq.test.all.converters.Boolean_YES_NO_UC_Converter;
import org.jooq.test.all.converters.Boolean_YN_LC;
import org.jooq.test.all.converters.Boolean_YN_LC_Converter;
import org.jooq.test.all.converters.Boolean_YN_UC;
import org.jooq.test.all.converters.Boolean_YN_UC_Converter;
import org.jooq.test.mysql.generatedclasses.Keys;
import org.jooq.test.mysql.generatedclasses.Test;
import org.jooq.test.mysql.generatedclasses.tables.records.TBooleansRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TBooleans extends TableImpl<TBooleansRecord> {

	private static final long serialVersionUID = -331323273;

	/**
	 * The reference instance of <code>test.t_booleans</code>
	 */
	public static final TBooleans T_BOOLEANS = new TBooleans();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TBooleansRecord> getRecordType() {
		return TBooleansRecord.class;
	}

	/**
	 * The column <code>test.t_booleans.id</code>.
	 */
	public static final TableField<TBooleansRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), T_BOOLEANS, "");

	/**
	 * The column <code>test.t_booleans.one_zero</code>.
	 */
	public static final TableField<TBooleansRecord, Boolean_10> ONE_ZERO = createField("one_zero", org.jooq.impl.SQLDataType.INTEGER, T_BOOLEANS, "", new Boolean_10_Converter());

	/**
	 * The column <code>test.t_booleans.true_false_lc</code>.
	 */
	public static final TableField<TBooleansRecord, Boolean_TF_LC> TRUE_FALSE_LC = createField("true_false_lc", org.jooq.impl.SQLDataType.VARCHAR.length(5), T_BOOLEANS, "", new Boolean_TF_LC_Converter());

	/**
	 * The column <code>test.t_booleans.true_false_uc</code>.
	 */
	public static final TableField<TBooleansRecord, Boolean_TF_UC> TRUE_FALSE_UC = createField("true_false_uc", org.jooq.impl.SQLDataType.VARCHAR.length(5), T_BOOLEANS, "", new Boolean_TF_UC_Converter());

	/**
	 * The column <code>test.t_booleans.yes_no_lc</code>.
	 */
	public static final TableField<TBooleansRecord, Boolean_YES_NO_LC> YES_NO_LC = createField("yes_no_lc", org.jooq.impl.SQLDataType.VARCHAR.length(3), T_BOOLEANS, "", new Boolean_YES_NO_LC_Converter());

	/**
	 * The column <code>test.t_booleans.yes_no_uc</code>.
	 */
	public static final TableField<TBooleansRecord, Boolean_YES_NO_UC> YES_NO_UC = createField("yes_no_uc", org.jooq.impl.SQLDataType.VARCHAR.length(3), T_BOOLEANS, "", new Boolean_YES_NO_UC_Converter());

	/**
	 * The column <code>test.t_booleans.y_n_lc</code>.
	 */
	public static final TableField<TBooleansRecord, Boolean_YN_LC> Y_N_LC = createField("y_n_lc", org.jooq.impl.SQLDataType.CHAR.length(1), T_BOOLEANS, "", new Boolean_YN_LC_Converter());

	/**
	 * The column <code>test.t_booleans.y_n_uc</code>.
	 */
	public static final TableField<TBooleansRecord, Boolean_YN_UC> Y_N_UC = createField("y_n_uc", org.jooq.impl.SQLDataType.CHAR.length(1), T_BOOLEANS, "", new Boolean_YN_UC_Converter());

	/**
	 * The column <code>test.t_booleans.vc_boolean</code>.
	 */
	public static final TableField<TBooleansRecord, Boolean> VC_BOOLEAN = createField("vc_boolean", org.jooq.impl.SQLDataType.BOOLEAN, T_BOOLEANS, "");

	/**
	 * The column <code>test.t_booleans.c_boolean</code>.
	 */
	public static final TableField<TBooleansRecord, Boolean> C_BOOLEAN = createField("c_boolean", org.jooq.impl.SQLDataType.BOOLEAN, T_BOOLEANS, "");

	/**
	 * The column <code>test.t_booleans.n_boolean</code>.
	 */
	public static final TableField<TBooleansRecord, Boolean> N_BOOLEAN = createField("n_boolean", org.jooq.impl.SQLDataType.BOOLEAN, T_BOOLEANS, "");

	/**
	 * No further instances allowed
	 */
	private TBooleans() {
		this("t_booleans", null);
	}

	private TBooleans(String alias, Table<TBooleansRecord> aliased) {
		this(alias, aliased, null);
	}

	private TBooleans(String alias, Table<TBooleansRecord> aliased, Field<?>[] parameters) {
		super(alias, Test.TEST, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TBooleansRecord> getPrimaryKey() {
		return Keys.KEY_T_BOOLEANS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TBooleansRecord>> getKeys() {
		return Arrays.<UniqueKey<TBooleansRecord>>asList(Keys.KEY_T_BOOLEANS_PRIMARY);
	}
}
