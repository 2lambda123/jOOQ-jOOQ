/**
 * This class is generated by jOOQ
 */
package org.jooq.test.mysql.generatedclasses.tables;


import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.test.mysql.generatedclasses.Keys;
import org.jooq.test.mysql.generatedclasses.Test;
import org.jooq.test.mysql.generatedclasses.tables.records.XUnusedRecord;


/**
 * An unused table in the same schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XUnused extends TableImpl<XUnusedRecord> {

	private static final long serialVersionUID = -446449670;

	/**
	 * The reference instance of <code>test.x_unused</code>
	 */
	public static final XUnused X_UNUSED = new XUnused();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<XUnusedRecord> getRecordType() {
		return XUnusedRecord.class;
	}

	/**
	 * The column <code>test.x_unused.ID</code>.
	 */
	public static final TableField<XUnusedRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), X_UNUSED, "");

	/**
	 * The column <code>test.x_unused.NAME</code>.
	 */
	public static final TableField<XUnusedRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), X_UNUSED, "");

	/**
	 * The column <code>test.x_unused.BIG_INTEGER</code>.
	 */
	public static final TableField<XUnusedRecord, BigInteger> BIG_INTEGER = createField("BIG_INTEGER", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(25), X_UNUSED, "");

	/**
	 * The column <code>test.x_unused.ID_REF</code>.
	 */
	public static final TableField<XUnusedRecord, Integer> ID_REF = createField("ID_REF", org.jooq.impl.SQLDataType.INTEGER, X_UNUSED, "");

	/**
	 * The column <code>test.x_unused.NAME_REF</code>.
	 */
	public static final TableField<XUnusedRecord, String> NAME_REF = createField("NAME_REF", org.jooq.impl.SQLDataType.VARCHAR.length(10), X_UNUSED, "");

	/**
	 * The column <code>test.x_unused.CLASS</code>.
	 */
	public static final TableField<XUnusedRecord, Integer> CLASS = createField("CLASS", org.jooq.impl.SQLDataType.INTEGER, X_UNUSED, "");

	/**
	 * The column <code>test.x_unused.FIELDS</code>.
	 */
	public static final TableField<XUnusedRecord, Integer> FIELDS = createField("FIELDS", org.jooq.impl.SQLDataType.INTEGER, X_UNUSED, "");

	/**
	 * The column <code>test.x_unused.CONFIGURATION</code>.
	 */
	public static final TableField<XUnusedRecord, Integer> CONFIGURATION = createField("CONFIGURATION", org.jooq.impl.SQLDataType.INTEGER, X_UNUSED, "");

	/**
	 * The column <code>test.x_unused.U_D_T</code>.
	 */
	public static final TableField<XUnusedRecord, Integer> U_D_T = createField("U_D_T", org.jooq.impl.SQLDataType.INTEGER, X_UNUSED, "");

	/**
	 * The column <code>test.x_unused.META_DATA</code>.
	 */
	public static final TableField<XUnusedRecord, Integer> META_DATA = createField("META_DATA", org.jooq.impl.SQLDataType.INTEGER, X_UNUSED, "");

	/**
	 * The column <code>test.x_unused.TYPE0</code>.
	 */
	public static final TableField<XUnusedRecord, Integer> TYPE0 = createField("TYPE0", org.jooq.impl.SQLDataType.INTEGER, X_UNUSED, "");

	/**
	 * The column <code>test.x_unused.PRIMARY_KEY</code>.
	 */
	public static final TableField<XUnusedRecord, Integer> PRIMARY_KEY = createField("PRIMARY_KEY", org.jooq.impl.SQLDataType.INTEGER, X_UNUSED, "");

	/**
	 * The column <code>test.x_unused.PRIMARYKEY</code>.
	 */
	public static final TableField<XUnusedRecord, Integer> PRIMARYKEY = createField("PRIMARYKEY", org.jooq.impl.SQLDataType.INTEGER, X_UNUSED, "");

	/**
	 * The column <code>test.x_unused.FIELD 737</code>.
	 */
	public static final TableField<XUnusedRecord, BigDecimal> FIELD_737 = createField("FIELD 737", org.jooq.impl.SQLDataType.DECIMAL.precision(25, 2), X_UNUSED, "");

	/**
	 * No further instances allowed
	 */
	private XUnused() {
		this("x_unused", null);
	}

	private XUnused(String alias, Table<XUnusedRecord> aliased) {
		this(alias, aliased, null);
	}

	private XUnused(String alias, Table<XUnusedRecord> aliased, Field<?>[] parameters) {
		super(alias, Test.TEST, aliased, parameters, "An unused table in the same schema.");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<XUnusedRecord> getPrimaryKey() {
		return Keys.KEY_X_UNUSED_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<XUnusedRecord>> getKeys() {
		return Arrays.<UniqueKey<XUnusedRecord>>asList(Keys.KEY_X_UNUSED_PRIMARY, Keys.KEY_X_UNUSED_UK_X_UNUSED_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<XUnusedRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<XUnusedRecord, ?>>asList(Keys.FK_X_UNUSED_SELF);
	}
}
