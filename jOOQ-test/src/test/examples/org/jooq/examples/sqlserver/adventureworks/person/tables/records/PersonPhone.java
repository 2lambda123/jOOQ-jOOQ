/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.person.tables.records;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "PersonPhone", schema = "Person", uniqueConstraints = {
	@javax.persistence.UniqueConstraint(columnNames = {"BusinessEntityID", "PhoneNumber", "PhoneNumberTypeID"})
})
public class PersonPhone extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.person.tables.records.PersonPhone> implements org.jooq.Record4<java.lang.Integer, java.lang.String, java.lang.Integer, java.sql.Timestamp> {

	private static final long serialVersionUID = -645956204;

	/**
	 * Setter for <code>Person.PersonPhone.BusinessEntityID</code>. 
	 */
	public void setBusinessEntityID(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>Person.PersonPhone.BusinessEntityID</code>. 
	 */
	@javax.persistence.Column(name = "BusinessEntityID", nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getBusinessEntityID() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>Person.PersonPhone.PhoneNumber</code>. 
	 */
	public void setPhoneNumber(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>Person.PersonPhone.PhoneNumber</code>. 
	 */
	@javax.persistence.Column(name = "PhoneNumber", nullable = false, length = 25)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 25)
	public java.lang.String getPhoneNumber() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>Person.PersonPhone.PhoneNumberTypeID</code>. 
	 */
	public void setPhoneNumberTypeID(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>Person.PersonPhone.PhoneNumberTypeID</code>. 
	 */
	@javax.persistence.Column(name = "PhoneNumberTypeID", nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getPhoneNumberTypeID() {
		return (java.lang.Integer) getValue(2);
	}

	/**
	 * Setter for <code>Person.PersonPhone.ModifiedDate</code>. 
	 */
	public void setModifiedDate(java.sql.Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>Person.PersonPhone.ModifiedDate</code>. 
	 */
	@javax.persistence.Column(name = "ModifiedDate", nullable = false)
	@javax.validation.constraints.NotNull
	public java.sql.Timestamp getModifiedDate() {
		return (java.sql.Timestamp) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record3<java.lang.Integer, java.lang.String, java.lang.Integer> key() {
		return (org.jooq.Record3) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.String, java.lang.Integer, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.String, java.lang.Integer, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.PersonPhone.PersonPhone.BusinessEntityID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.PersonPhone.PersonPhone.PhoneNumber;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.PersonPhone.PersonPhone.PhoneNumberTypeID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field4() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.PersonPhone.PersonPhone.ModifiedDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getBusinessEntityID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getPhoneNumber();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return getPhoneNumberTypeID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value4() {
		return getModifiedDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonPhone value1(java.lang.Integer value) {
		setBusinessEntityID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonPhone value2(java.lang.String value) {
		setPhoneNumber(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonPhone value3(java.lang.Integer value) {
		setPhoneNumberTypeID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonPhone value4(java.sql.Timestamp value) {
		setModifiedDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonPhone values(java.lang.Integer value1, java.lang.String value2, java.lang.Integer value3, java.sql.Timestamp value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PersonPhone
	 */
	public PersonPhone() {
		super(org.jooq.examples.sqlserver.adventureworks.person.tables.PersonPhone.PersonPhone);
	}

	/**
	 * Create a detached, initialised PersonPhone
	 */
	public PersonPhone(java.lang.Integer BusinessEntityID, java.lang.String PhoneNumber, java.lang.Integer PhoneNumberTypeID, java.sql.Timestamp ModifiedDate) {
		super(org.jooq.examples.sqlserver.adventureworks.person.tables.PersonPhone.PersonPhone);

		setValue(0, BusinessEntityID);
		setValue(1, PhoneNumber);
		setValue(2, PhoneNumberTypeID);
		setValue(3, ModifiedDate);
	}
}
