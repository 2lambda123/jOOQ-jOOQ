/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.person.tables.records;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "AddressType", schema = "Person")
public class AddressType extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.person.tables.records.AddressType> implements org.jooq.Record4<java.lang.Integer, java.lang.String, java.util.UUID, java.sql.Timestamp> {

	private static final long serialVersionUID = -1648787458;

	/**
	 * Setter for <code>Person.AddressType.AddressTypeID</code>. 
	 */
	public void setAddressTypeID(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>Person.AddressType.AddressTypeID</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "AddressTypeID", unique = true, nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getAddressTypeID() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>Person.AddressType.Name</code>. 
	 */
	public void setName(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>Person.AddressType.Name</code>. 
	 */
	@javax.persistence.Column(name = "Name", nullable = false, length = 50)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 50)
	public java.lang.String getName() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>Person.AddressType.rowguid</code>. 
	 */
	public void setrowguid(java.util.UUID value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>Person.AddressType.rowguid</code>. 
	 */
	@javax.persistence.Column(name = "rowguid", nullable = false)
	@javax.validation.constraints.NotNull
	public java.util.UUID getrowguid() {
		return (java.util.UUID) getValue(2);
	}

	/**
	 * Setter for <code>Person.AddressType.ModifiedDate</code>. 
	 */
	public void setModifiedDate(java.sql.Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>Person.AddressType.ModifiedDate</code>. 
	 */
	@javax.persistence.Column(name = "ModifiedDate", nullable = false)
	@javax.validation.constraints.NotNull
	public java.sql.Timestamp getModifiedDate() {
		return (java.sql.Timestamp) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.String, java.util.UUID, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.lang.Integer, java.lang.String, java.util.UUID, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.AddressType.AddressType.AddressTypeID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.AddressType.AddressType.Name;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field3() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.AddressType.AddressType.rowguid;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field4() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.AddressType.AddressType.ModifiedDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getAddressTypeID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value3() {
		return getrowguid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value4() {
		return getModifiedDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AddressType value1(java.lang.Integer value) {
		setAddressTypeID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AddressType value2(java.lang.String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AddressType value3(java.util.UUID value) {
		setrowguid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AddressType value4(java.sql.Timestamp value) {
		setModifiedDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AddressType values(java.lang.Integer value1, java.lang.String value2, java.util.UUID value3, java.sql.Timestamp value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AddressType
	 */
	public AddressType() {
		super(org.jooq.examples.sqlserver.adventureworks.person.tables.AddressType.AddressType);
	}

	/**
	 * Create a detached, initialised AddressType
	 */
	public AddressType(java.lang.Integer AddressTypeID, java.lang.String Name, java.util.UUID rowguid, java.sql.Timestamp ModifiedDate) {
		super(org.jooq.examples.sqlserver.adventureworks.person.tables.AddressType.AddressType);

		setValue(0, AddressTypeID);
		setValue(1, Name);
		setValue(2, rowguid);
		setValue(3, ModifiedDate);
	}
}
