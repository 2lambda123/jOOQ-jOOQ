/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.person.tables.records;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "Address", schema = "Person")
public class Address extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.person.tables.records.Address> implements org.jooq.Record9<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Object, java.util.UUID, java.sql.Timestamp> {

	private static final long serialVersionUID = 1231798118;

	/**
	 * Setter for <code>Person.Address.AddressID</code>. 
	 */
	public void setAddressID(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>Person.Address.AddressID</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "AddressID", unique = true, nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getAddressID() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>Person.Address.AddressLine1</code>. 
	 */
	public void setAddressLine1(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>Person.Address.AddressLine1</code>. 
	 */
	@javax.persistence.Column(name = "AddressLine1", nullable = false, length = 60)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 60)
	public java.lang.String getAddressLine1() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>Person.Address.AddressLine2</code>. 
	 */
	public void setAddressLine2(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>Person.Address.AddressLine2</code>. 
	 */
	@javax.persistence.Column(name = "AddressLine2", length = 60)
	@javax.validation.constraints.Size(max = 60)
	public java.lang.String getAddressLine2() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>Person.Address.City</code>. 
	 */
	public void setCity(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>Person.Address.City</code>. 
	 */
	@javax.persistence.Column(name = "City", nullable = false, length = 30)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 30)
	public java.lang.String getCity() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>Person.Address.StateProvinceID</code>. 
	 */
	public void setStateProvinceID(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>Person.Address.StateProvinceID</code>. 
	 */
	@javax.persistence.Column(name = "StateProvinceID", nullable = false, precision = 10)
	@javax.validation.constraints.NotNull
	public java.lang.Integer getStateProvinceID() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>Person.Address.PostalCode</code>. 
	 */
	public void setPostalCode(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>Person.Address.PostalCode</code>. 
	 */
	@javax.persistence.Column(name = "PostalCode", nullable = false, length = 15)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 15)
	public java.lang.String getPostalCode() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>Person.Address.SpatialLocation</code>. 
	 */
	public void setSpatialLocation(java.lang.Object value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>Person.Address.SpatialLocation</code>. 
	 */
	@javax.persistence.Column(name = "SpatialLocation")
	public java.lang.Object getSpatialLocation() {
		return (java.lang.Object) getValue(6);
	}

	/**
	 * Setter for <code>Person.Address.rowguid</code>. 
	 */
	public void setrowguid(java.util.UUID value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>Person.Address.rowguid</code>. 
	 */
	@javax.persistence.Column(name = "rowguid", nullable = false)
	@javax.validation.constraints.NotNull
	public java.util.UUID getrowguid() {
		return (java.util.UUID) getValue(7);
	}

	/**
	 * Setter for <code>Person.Address.ModifiedDate</code>. 
	 */
	public void setModifiedDate(java.sql.Timestamp value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>Person.Address.ModifiedDate</code>. 
	 */
	@javax.persistence.Column(name = "ModifiedDate", nullable = false)
	@javax.validation.constraints.NotNull
	public java.sql.Timestamp getModifiedDate() {
		return (java.sql.Timestamp) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Object, java.util.UUID, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row9<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.Object, java.util.UUID, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.Address.Address.AddressID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.Address.Address.AddressLine1;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.Address.Address.AddressLine2;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.Address.Address.City;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.Address.Address.StateProvinceID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.Address.Address.PostalCode;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Object> field7() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.Address.Address.SpatialLocation;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field8() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.Address.Address.rowguid;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field9() {
		return org.jooq.examples.sqlserver.adventureworks.person.tables.Address.Address.ModifiedDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getAddressID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getAddressLine1();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getAddressLine2();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getCity();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getStateProvinceID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getPostalCode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Object value7() {
		return getSpatialLocation();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value8() {
		return getrowguid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value9() {
		return getModifiedDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Address value1(java.lang.Integer value) {
		setAddressID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Address value2(java.lang.String value) {
		setAddressLine1(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Address value3(java.lang.String value) {
		setAddressLine2(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Address value4(java.lang.String value) {
		setCity(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Address value5(java.lang.Integer value) {
		setStateProvinceID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Address value6(java.lang.String value) {
		setPostalCode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Address value7(java.lang.Object value) {
		setSpatialLocation(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Address value8(java.util.UUID value) {
		setrowguid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Address value9(java.sql.Timestamp value) {
		setModifiedDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Address values(java.lang.Integer value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, java.lang.Integer value5, java.lang.String value6, java.lang.Object value7, java.util.UUID value8, java.sql.Timestamp value9) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached Address
	 */
	public Address() {
		super(org.jooq.examples.sqlserver.adventureworks.person.tables.Address.Address);
	}

	/**
	 * Create a detached, initialised Address
	 */
	public Address(java.lang.Integer AddressID, java.lang.String AddressLine1, java.lang.String AddressLine2, java.lang.String City, java.lang.Integer StateProvinceID, java.lang.String PostalCode, java.lang.Object SpatialLocation, java.util.UUID rowguid, java.sql.Timestamp ModifiedDate) {
		super(org.jooq.examples.sqlserver.adventureworks.person.tables.Address.Address);

		setValue(0, AddressID);
		setValue(1, AddressLine1);
		setValue(2, AddressLine2);
		setValue(3, City);
		setValue(4, StateProvinceID);
		setValue(5, PostalCode);
		setValue(6, SpatialLocation);
		setValue(7, rowguid);
		setValue(8, ModifiedDate);
	}
}
