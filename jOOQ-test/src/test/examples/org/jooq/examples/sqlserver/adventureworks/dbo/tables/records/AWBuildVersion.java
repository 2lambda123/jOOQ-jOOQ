/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.dbo.tables.records;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "AWBuildVersion", schema = "dbo")
public class AWBuildVersion extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.dbo.tables.records.AWBuildVersion> implements org.jooq.Record4<org.jooq.types.UByte, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> {

	private static final long serialVersionUID = 2116414480;

	/**
	 * Setter for <code>dbo.AWBuildVersion.SystemInformationID</code>. 
	 */
	public void setSystemInformationID(org.jooq.types.UByte value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>dbo.AWBuildVersion.SystemInformationID</code>. 
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "SystemInformationID", unique = true, nullable = false, precision = 3)
	@javax.validation.constraints.NotNull
	public org.jooq.types.UByte getSystemInformationID() {
		return (org.jooq.types.UByte) getValue(0);
	}

	/**
	 * Setter for <code>dbo.AWBuildVersion.Database Version</code>. 
	 */
	public void setDatabase_Version(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>dbo.AWBuildVersion.Database Version</code>. 
	 */
	@javax.persistence.Column(name = "Database Version", nullable = false, length = 25)
	@javax.validation.constraints.NotNull
	@javax.validation.constraints.Size(max = 25)
	public java.lang.String getDatabase_Version() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>dbo.AWBuildVersion.VersionDate</code>. 
	 */
	public void setVersionDate(java.sql.Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>dbo.AWBuildVersion.VersionDate</code>. 
	 */
	@javax.persistence.Column(name = "VersionDate", nullable = false)
	@javax.validation.constraints.NotNull
	public java.sql.Timestamp getVersionDate() {
		return (java.sql.Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>dbo.AWBuildVersion.ModifiedDate</code>. 
	 */
	public void setModifiedDate(java.sql.Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>dbo.AWBuildVersion.ModifiedDate</code>. 
	 */
	@javax.persistence.Column(name = "ModifiedDate", nullable = false)
	@javax.validation.constraints.NotNull
	public java.sql.Timestamp getModifiedDate() {
		return (java.sql.Timestamp) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<org.jooq.types.UByte> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<org.jooq.types.UByte, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<org.jooq.types.UByte, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.jooq.types.UByte> field1() {
		return org.jooq.examples.sqlserver.adventureworks.dbo.tables.AWBuildVersion.AWBuildVersion.SystemInformationID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return org.jooq.examples.sqlserver.adventureworks.dbo.tables.AWBuildVersion.AWBuildVersion.Database_Version;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field3() {
		return org.jooq.examples.sqlserver.adventureworks.dbo.tables.AWBuildVersion.AWBuildVersion.VersionDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field4() {
		return org.jooq.examples.sqlserver.adventureworks.dbo.tables.AWBuildVersion.AWBuildVersion.ModifiedDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.types.UByte value1() {
		return getSystemInformationID();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getDatabase_Version();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value3() {
		return getVersionDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value4() {
		return getModifiedDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AWBuildVersion value1(org.jooq.types.UByte value) {
		setSystemInformationID(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AWBuildVersion value2(java.lang.String value) {
		setDatabase_Version(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AWBuildVersion value3(java.sql.Timestamp value) {
		setVersionDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AWBuildVersion value4(java.sql.Timestamp value) {
		setModifiedDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AWBuildVersion values(org.jooq.types.UByte value1, java.lang.String value2, java.sql.Timestamp value3, java.sql.Timestamp value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AWBuildVersion
	 */
	public AWBuildVersion() {
		super(org.jooq.examples.sqlserver.adventureworks.dbo.tables.AWBuildVersion.AWBuildVersion);
	}

	/**
	 * Create a detached, initialised AWBuildVersion
	 */
	public AWBuildVersion(org.jooq.types.UByte SystemInformationID, java.lang.String Database_Version, java.sql.Timestamp VersionDate, java.sql.Timestamp ModifiedDate) {
		super(org.jooq.examples.sqlserver.adventureworks.dbo.tables.AWBuildVersion.AWBuildVersion);

		setValue(0, SystemInformationID);
		setValue(1, Database_Version);
		setValue(2, VersionDate);
		setValue(3, ModifiedDate);
	}
}
