<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<jooq:configuration xmlns:jooq="http://www.jooq.org/xsd/jooq-codegen-2.1.0.xsd">
    <jooq:jdbc>
        <jooq:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</jooq:driver>
        <jooq:url>jdbc:sqlserver://localhost:1433;databaseName=test;integratedSecurity=true</jooq:url>
        <jooq:schema>dbo</jooq:schema>
        <jooq:user></jooq:user>
        <jooq:password></jooq:password>
    </jooq:jdbc>
    <jooq:generator>
        <jooq:name>org.jooq.util.DefaultGenerator</jooq:name>
        <jooq:strategy/>
        <jooq:database>
            <jooq:name>org.jooq.util.sqlserver.SQLServerDatabase</jooq:name>
            <jooq:includes>t_.*|x_.*|v_.*|p_.*|f_.*|(f|p)[0-9]+|s_.*</jooq:includes>
            <jooq:excludes>t_book_details</jooq:excludes>
            <jooq:dateAsTimestamp>false</jooq:dateAsTimestamp>
            <jooq:customTypes>
                <jooq:customType>
            		<jooq:name>org.jooq.test._.converters.Boolean_10</jooq:name>
            		<jooq:converter>org.jooq.test._.converters.Boolean_10_Converter</jooq:converter>
            	</jooq:customType>
            	<jooq:customType>
            		<jooq:name>org.jooq.test._.converters.Boolean_TF_LC</jooq:name>
            		<jooq:converter>org.jooq.test._.converters.Boolean_TF_LC_Converter</jooq:converter>
            	</jooq:customType>
            	<jooq:customType>
            		<jooq:name>org.jooq.test._.converters.Boolean_TF_UC</jooq:name>
            		<jooq:converter>org.jooq.test._.converters.Boolean_TF_UC_Converter</jooq:converter>
            	</jooq:customType>
            	<jooq:customType>
            		<jooq:name>org.jooq.test._.converters.Boolean_YN_LC</jooq:name>
            		<jooq:converter>org.jooq.test._.converters.Boolean_YN_LC_Converter</jooq:converter>
            	</jooq:customType>
            	<jooq:customType>
            		<jooq:name>org.jooq.test._.converters.Boolean_YN_UC</jooq:name>
            		<jooq:converter>org.jooq.test._.converters.Boolean_YN_UC_Converter</jooq:converter>
            	</jooq:customType>
            	<jooq:customType>
            		<jooq:name>org.jooq.test._.converters.Boolean_YES_NO_LC</jooq:name>
            		<jooq:converter>org.jooq.test._.converters.Boolean_YES_NO_LC_Converter</jooq:converter>
            	</jooq:customType>
            	<jooq:customType>
            		<jooq:name>org.jooq.test._.converters.Boolean_YES_NO_UC</jooq:name>
            		<jooq:converter>org.jooq.test._.converters.Boolean_YES_NO_UC_Converter</jooq:converter>
            	</jooq:customType>
            </jooq:customTypes>

            <jooq:forcedTypes>
                <jooq:forcedType>
                    <jooq:name>BIT</jooq:name>
                    <jooq:expressions>(?i:(.*?.)?T_BOOLEANS.(VC|C|N)_BOOLEAN)</jooq:expressions>
                </jooq:forcedType>

                <!-- 
                  [#2352] Map some vendor-specific type names
                  -->
                <jooq:forcedType>
                    <jooq:name>VARCHAR</jooq:name>
                    <jooq:expressions>.*1.*</jooq:expressions>
                    <jooq:types>(?i:datetimeoffset)</jooq:types>
                </jooq:forcedType>
                <jooq:forcedType>
                    <jooq:name>DATETIMEOFFSET</jooq:name>
                    <jooq:expressions>.*2.*</jooq:expressions>
                    <jooq:types>(?i:datetimeoffset)</jooq:types>
                </jooq:forcedType>
                <jooq:forcedType>
                    <jooq:name>DATE</jooq:name>
                    <jooq:types>(?i:datetimeoffset)</jooq:types>
                </jooq:forcedType>

                <!-- 
                  [#963] SQL Server doesn't support what other
                  databases consider a SIGNED TINYINT
                  -->
                <jooq:forcedType>
                    <jooq:name>SIGNED TINYINT</jooq:name>
                    <jooq:expressions>(?i:(.*?.)?T_639_NUMBERS_TABLE.BYTE)</jooq:expressions>
                </jooq:forcedType>
                                
                <!-- [#2477] Check if unsigned types work correctly -->
                <jooq:forcedType>
                    <jooq:name>TINYINTUNSIGNED</jooq:name>
                    <jooq:expressions>(?i:(.*?.)?T_UNSIGNED.U_BYTE)</jooq:expressions>
                </jooq:forcedType>
                <jooq:forcedType>
                    <jooq:name>SMALLINTUNSIGNED</jooq:name>
                    <jooq:expressions>(?i:(.*?.)?T_UNSIGNED.U_SHORT)</jooq:expressions>
                </jooq:forcedType>
                <jooq:forcedType>
                    <jooq:name>INTEGERUNSIGNED</jooq:name>
                    <jooq:expressions>(?i:(.*?.)?T_UNSIGNED.U_INT)</jooq:expressions>
                </jooq:forcedType>
                <jooq:forcedType>
                    <jooq:name>BIGINTUNSIGNED</jooq:name>
                    <jooq:expressions>(?i:(.*?.)?T_UNSIGNED.U_LONG)</jooq:expressions>
                </jooq:forcedType>
                
                <jooq:forcedType>
                    <jooq:name>org.jooq.test._.converters.Boolean_YES_NO_LC</jooq:name>
                    <jooq:expressions>(?i:(.*?.)?T_BOOLEANS.YES_NO_LC)</jooq:expressions>
                </jooq:forcedType>
                <jooq:forcedType>
                    <jooq:name>org.jooq.test._.converters.Boolean_YES_NO_UC</jooq:name>
                    <jooq:expressions>(?i:(.*?.)?T_BOOLEANS.YES_NO_UC)</jooq:expressions>
                </jooq:forcedType>
                <jooq:forcedType>
                    <jooq:name>org.jooq.test._.converters.Boolean_YN_LC</jooq:name>
                    <jooq:expressions>(?i:(.*?.)?T_BOOLEANS.Y_N_LC)</jooq:expressions>
                </jooq:forcedType>
                <jooq:forcedType>
                    <jooq:name>org.jooq.test._.converters.Boolean_YN_UC</jooq:name>
                    <jooq:expressions>(?i:(.*?.)?T_BOOLEANS.Y_N_UC)</jooq:expressions>
                </jooq:forcedType>
                <jooq:forcedType>
                    <jooq:name>org.jooq.test._.converters.Boolean_TF_LC</jooq:name>
                    <jooq:expressions>(?i:(.*?.)?T_BOOLEANS.TRUE_FALSE_LC)</jooq:expressions>
                </jooq:forcedType>
                <jooq:forcedType>
                    <jooq:name>org.jooq.test._.converters.Boolean_TF_UC</jooq:name>
                    <jooq:expressions>(?i:(.*?.)?T_BOOLEANS.TRUE_FALSE_UC)</jooq:expressions>
                </jooq:forcedType>
                <jooq:forcedType>
                    <jooq:name>org.jooq.test._.converters.Boolean_10</jooq:name>
                    <jooq:expressions>(?i:(.*?.)?T_BOOLEANS.ONE_ZERO)</jooq:expressions>
                </jooq:forcedType>
            </jooq:forcedTypes>
        </jooq:database>
        <jooq:generate>
            <jooq:relations>true</jooq:relations>
            <jooq:deprecated>true</jooq:deprecated>
            <jooq:instanceFields>true</jooq:instanceFields>
            <jooq:unsignedTypes>true</jooq:unsignedTypes>
            <jooq:generatedAnnotation>false</jooq:generatedAnnotation>
        </jooq:generate>
        <jooq:target>
            <jooq:packageName>org.jooq.test.sqlserver.generatedclasses</jooq:packageName>
            <jooq:directory>./src</jooq:directory>
        </jooq:target>
    </jooq:generator>
</jooq:configuration>
