/**
 * This class is generated by jOOQ
 */
package org.jooq.example.db.oracle.sp.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.example.db.oracle.sp.Keys;
import org.jooq.example.db.oracle.sp.Sp;
import org.jooq.example.db.oracle.sp.tables.records.BooksRecord;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Books extends TableImpl<BooksRecord> {

	private static final long serialVersionUID = 1393352507;

	/**
	 * The reference instance of <code>SP.BOOKS</code>
	 */
	public static final Books BOOKS = new Books();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<BooksRecord> getRecordType() {
		return BooksRecord.class;
	}

	/**
	 * The column <code>SP.BOOKS.ID</code>.
	 */
	public final TableField<BooksRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>SP.BOOKS.TITLE</code>.
	 */
	public final TableField<BooksRecord, String> TITLE = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>SP.BOOKS.LANGUAGE</code>.
	 */
	public final TableField<BooksRecord, String> LANGUAGE = createField("LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR.length(2).nullable(false), this, "");

	/**
	 * The column <code>SP.BOOKS.AUTHOR_ID</code>.
	 */
	public final TableField<BooksRecord, Integer> AUTHOR_ID = createField("AUTHOR_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>SP.BOOKS</code> table reference
	 */
	public Books() {
		this("BOOKS", null);
	}

	/**
	 * Create an aliased <code>SP.BOOKS</code> table reference
	 */
	public Books(String alias) {
		this(alias, BOOKS);
	}

	private Books(String alias, Table<BooksRecord> aliased) {
		this(alias, aliased, null);
	}

	private Books(String alias, Table<BooksRecord> aliased, Field<?>[] parameters) {
		super(alias, Sp.SP, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<BooksRecord> getPrimaryKey() {
		return Keys.SYS_C0018822;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<BooksRecord>> getKeys() {
		return Arrays.<UniqueKey<BooksRecord>>asList(Keys.SYS_C0018822);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<BooksRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<BooksRecord, ?>>asList(Keys.FK_AUTHOR_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Books as(String alias) {
		return new Books(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Books rename(String name) {
		return new Books(name, null);
	}
}
