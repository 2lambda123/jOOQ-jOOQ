/**
 * This class is generated by jOOQ
 */
package org.jooq.example.db.oracle.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.5.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Books extends org.jooq.impl.TableImpl<org.jooq.example.db.oracle.tables.records.BooksRecord> {

	private static final long serialVersionUID = 2023471954;

	/**
	 * The singleton instance of <code>SP.BOOKS</code>
	 */
	public static final org.jooq.example.db.oracle.tables.Books BOOKS = new org.jooq.example.db.oracle.tables.Books();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.example.db.oracle.tables.records.BooksRecord> getRecordType() {
		return org.jooq.example.db.oracle.tables.records.BooksRecord.class;
	}

	/**
	 * The column <code>SP.BOOKS.ID</code>.
	 */
	public final org.jooq.TableField<org.jooq.example.db.oracle.tables.records.BooksRecord, java.lang.Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>SP.BOOKS.TITLE</code>.
	 */
	public final org.jooq.TableField<org.jooq.example.db.oracle.tables.records.BooksRecord, java.lang.String> TITLE = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(400).nullable(false), this, "");

	/**
	 * The column <code>SP.BOOKS.LANGUAGE</code>.
	 */
	public final org.jooq.TableField<org.jooq.example.db.oracle.tables.records.BooksRecord, java.lang.String> LANGUAGE = createField("LANGUAGE", org.jooq.impl.SQLDataType.VARCHAR.length(8).nullable(false), this, "");

	/**
	 * The column <code>SP.BOOKS.AUTHOR_ID</code>.
	 */
	public final org.jooq.TableField<org.jooq.example.db.oracle.tables.records.BooksRecord, java.lang.Integer> AUTHOR_ID = createField("AUTHOR_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>SP.BOOKS</code> table reference
	 */
	public Books() {
		this("BOOKS", null);
	}

	/**
	 * Create an aliased <code>SP.BOOKS</code> table reference
	 */
	public Books(java.lang.String alias) {
		this(alias, org.jooq.example.db.oracle.tables.Books.BOOKS);
	}

	private Books(java.lang.String alias, org.jooq.Table<org.jooq.example.db.oracle.tables.records.BooksRecord> aliased) {
		this(alias, aliased, null);
	}

	private Books(java.lang.String alias, org.jooq.Table<org.jooq.example.db.oracle.tables.records.BooksRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.jooq.example.db.oracle.Sp.SP, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<org.jooq.example.db.oracle.tables.records.BooksRecord> getPrimaryKey() {
		return org.jooq.example.db.oracle.Keys.SYS_C00143203;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<org.jooq.example.db.oracle.tables.records.BooksRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.jooq.example.db.oracle.tables.records.BooksRecord>>asList(org.jooq.example.db.oracle.Keys.SYS_C00143203);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<org.jooq.example.db.oracle.tables.records.BooksRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.jooq.example.db.oracle.tables.records.BooksRecord, ?>>asList(org.jooq.example.db.oracle.Keys.FK_AUTHOR_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.example.db.oracle.tables.Books as(java.lang.String alias) {
		return new org.jooq.example.db.oracle.tables.Books(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.jooq.example.db.oracle.tables.Books rename(java.lang.String name) {
		return new org.jooq.example.db.oracle.tables.Books(name, null);
	}
}
