/**
 * This class is generated by jOOQ
 */
package org.jooq.example.db.oracle.mdsys.packages;


import java.math.BigDecimal;
import java.math.BigInteger;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.example.db.oracle.mdsys.Mdsys;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.CheckBounds;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.GetDimArray;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.GetOrds;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.InitElement;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.Interact1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.Interact2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.Interact3;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.Relate1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.Relate2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.Relate3;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.Relate5;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.Relate6;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoAlphaShape;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoArcDensify1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoArcDensify2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoArea1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoArea2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoArea3;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoArea4;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoBuffer1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoBuffer2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoBuffer3;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoBuffer4;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoCentroid1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoCentroid2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoClosestPoints;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoConcavehull1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoConcavehull2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoConcavehullBoundary;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoConvexhull1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoConvexhull2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoDifference1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoDifference2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoDistance1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoDistance2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoDistance3;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoDistance4;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoG3dconv1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoG3dconv2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoInsertLogFilter;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoIntersection1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoIntersection2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoLength1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoLength2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoLength3;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoLength4;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoMaxMbrOrdinate1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoMaxMbrOrdinate2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoMbr1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoMbr2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoMinMbrOrdinate1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoMinMbrOrdinate2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoPointonsurface1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoPointonsurface2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoPolyDifference;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoPolyIntersection;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoPolyUnion;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoPolyXor;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoTriangulate;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoUnion1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoUnion2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoVolume;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoXor1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.SdoXor2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.ValidateGeometry1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.ValidateGeometry2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.ValidateGeometry3;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.ValidateGeometryWithContext1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.ValidateGeometryWithContext2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.ValidateLayer1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.ValidateLayer2;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.ValidateLayerWithContext;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.WithinDistance1;
import org.jooq.example.db.oracle.mdsys.packages.sdo_geom.WithinDistance2;
import org.jooq.example.db.oracle.mdsys.udt.records.SdoGeometryRecord;
import org.jooq.impl.PackageImpl;


/**
 * Convenience access to all stored procedures and functions in SDO_GEOM
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SdoGeom extends PackageImpl {

	private static final long serialVersionUID = 1738381434;

	/**
	 * The reference instance of <code>MDSYS.SDO_GEOM</code>
	 */
	public static final SdoGeom SDO_GEOM = new SdoGeom();

	/**
	 * Call <code>MDSYS.SDO_GEOM.CHECK_BOUNDS</code>
	 */
	public static BigInteger checkBounds(Configuration configuration, String tablename, Number gid, BigInteger eseq, BigInteger seq, Number coordwidth, Number dim1lb, Number dim1ub, Number dim2lb, Number dim2ub) {
		CheckBounds f = new CheckBounds();
		f.setTablename(tablename);
		f.setGid(gid);
		f.setEseq(eseq);
		f.setSeq(seq);
		f.setCoordwidth(coordwidth);
		f.setDim1lb(dim1lb);
		f.setDim1ub(dim1ub);
		f.setDim2lb(dim2lb);
		f.setDim2ub(dim2ub);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.CHECK_BOUNDS</code> as a field
	 */
	public static Field<BigInteger> checkBounds(String tablename, Number gid, BigInteger eseq, BigInteger seq, Number coordwidth, Number dim1lb, Number dim1ub, Number dim2lb, Number dim2ub) {
		CheckBounds f = new CheckBounds();
		f.setTablename(tablename);
		f.setGid(gid);
		f.setEseq(eseq);
		f.setSeq(seq);
		f.setCoordwidth(coordwidth);
		f.setDim1lb(dim1lb);
		f.setDim1ub(dim1ub);
		f.setDim2lb(dim2lb);
		f.setDim2ub(dim2ub);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.CHECK_BOUNDS</code> as a field
	 */
	public static Field<BigInteger> checkBounds(Field<String> tablename, Field<? extends Number> gid, Field<BigInteger> eseq, Field<BigInteger> seq, Field<? extends Number> coordwidth, Field<? extends Number> dim1lb, Field<? extends Number> dim1ub, Field<? extends Number> dim2lb, Field<? extends Number> dim2ub) {
		CheckBounds f = new CheckBounds();
		f.setTablename(tablename);
		f.setGid(gid);
		f.setEseq(eseq);
		f.setSeq(seq);
		f.setCoordwidth(coordwidth);
		f.setDim1lb(dim1lb);
		f.setDim1ub(dim1ub);
		f.setDim2lb(dim2lb);
		f.setDim2ub(dim2ub);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.GET_DIM_ARRAY</code>
	 */
	public static Object getDimArray(Configuration configuration, SdoGeometryRecord geom, Number tol) {
		GetDimArray f = new GetDimArray();
		f.setGeom(geom);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.GET_DIM_ARRAY</code> as a field
	 */
	public static Field<Object> getDimArray(SdoGeometryRecord geom, Number tol) {
		GetDimArray f = new GetDimArray();
		f.setGeom(geom);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.GET_DIM_ARRAY</code> as a field
	 */
	public static Field<Object> getDimArray(Field<SdoGeometryRecord> geom, Field<? extends Number> tol) {
		GetDimArray f = new GetDimArray();
		f.setGeom(geom);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.GET_ORDS</code>
	 */
	public static GetOrds getOrds(Configuration configuration, String tablename, Number gid, BigInteger eseq, BigInteger seq, BigInteger columnindex) {
		GetOrds p = new GetOrds();
		p.setTablename(tablename);
		p.setGid(gid);
		p.setEseq(eseq);
		p.setSeq(seq);
		p.setColumnindex(columnindex);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.INIT_ELEMENT</code>
	 */
	public static BigInteger initElement(Configuration configuration, String layer, Number gid) {
		InitElement f = new InitElement();
		f.setLayer(layer);
		f.setGid(gid);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.INIT_ELEMENT</code> as a field
	 */
	public static Field<BigInteger> initElement(String layer, Number gid) {
		InitElement f = new InitElement();
		f.setLayer(layer);
		f.setGid(gid);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.INIT_ELEMENT</code> as a field
	 */
	public static Field<BigInteger> initElement(Field<String> layer, Field<? extends Number> gid) {
		InitElement f = new InitElement();
		f.setLayer(layer);
		f.setGid(gid);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.INTERACT</code>
	 */
	public static String interact1(Configuration configuration, String layer, Number gid1, Number gid2) {
		Interact1 f = new Interact1();
		f.setLayer(layer);
		f.setGid1(gid1);
		f.setGid2(gid2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.INTERACT</code> as a field
	 */
	public static Field<String> interact1(String layer, Number gid1, Number gid2) {
		Interact1 f = new Interact1();
		f.setLayer(layer);
		f.setGid1(gid1);
		f.setGid2(gid2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.INTERACT</code> as a field
	 */
	public static Field<String> interact1(Field<String> layer, Field<? extends Number> gid1, Field<? extends Number> gid2) {
		Interact1 f = new Interact1();
		f.setLayer(layer);
		f.setGid1(gid1);
		f.setGid2(gid2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.INTERACT</code>
	 */
	public static String interact2(Configuration configuration, String layer1, Number gid1, String layer2, Number gid2) {
		Interact2 f = new Interact2();
		f.setLayer1(layer1);
		f.setGid1(gid1);
		f.setLayer2(layer2);
		f.setGid2(gid2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.INTERACT</code> as a field
	 */
	public static Field<String> interact2(String layer1, Number gid1, String layer2, Number gid2) {
		Interact2 f = new Interact2();
		f.setLayer1(layer1);
		f.setGid1(gid1);
		f.setLayer2(layer2);
		f.setGid2(gid2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.INTERACT</code> as a field
	 */
	public static Field<String> interact2(Field<String> layer1, Field<? extends Number> gid1, Field<String> layer2, Field<? extends Number> gid2) {
		Interact2 f = new Interact2();
		f.setLayer1(layer1);
		f.setGid1(gid1);
		f.setLayer2(layer2);
		f.setGid2(gid2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.INTERACT</code>
	 */
	public static String interact3(Configuration configuration, String layer1, Number gid1, Number xTolerance, Number yTolerance, Number v000, Number v001, Number v002, Number v003, Number v004, Number v005, Number v006, Number v007, Number v008, Number v009, Number v010, Number v011, Number v012, Number v013, Number v014, Number v015, Number v016, Number v017, Number v018, Number v019, Number v020, Number v021, Number v022, Number v023, Number v024, Number v025, Number v026, Number v027, Number v028, Number v029, Number v030, Number v031, Number v032, Number v033, Number v034, Number v035, Number v036, Number v037, Number v038, Number v039, Number v040, Number v041, Number v042, Number v043, Number v044, Number v045, Number v046, Number v047, Number v048, Number v049, Number v050, Number v051, Number v052, Number v053, Number v054, Number v055, Number v056, Number v057, Number v058, Number v059, Number v060, Number v061, Number v062, Number v063, Number v064, Number v065, Number v066, Number v067, Number v068, Number v069, Number v070, Number v071, Number v072, Number v073, Number v074, Number v075, Number v076, Number v077, Number v078, Number v079, Number v080, Number v081, Number v082, Number v083, Number v084, Number v085, Number v086, Number v087, Number v088, Number v089, Number v090, Number v091, Number v092, Number v093, Number v094, Number v095, Number v096, Number v097, Number v098, Number v099, Number v100, Number v101, Number v102, Number v103, Number v104, Number v105, Number v106, Number v107, Number v108, Number v109, Number v110, Number v111, Number v112, Number v113, Number v114, Number v115, Number v116, Number v117, Number v118, Number v119, Number v120, Number v121, Number v122, Number v123, Number v124, Number v125, Number v126, Number v127, Number v128, Number v129, Number v130, Number v131, Number v132, Number v133, Number v134, Number v135, Number v136, Number v137, Number v138, Number v139, Number v140, Number v141, Number v142, Number v143, Number v144, Number v145, Number v146, Number v147, Number v148, Number v149, Number v150, Number v151, Number v152, Number v153, Number v154, Number v155, Number v156, Number v157, Number v158, Number v159, Number v160, Number v161, Number v162, Number v163, Number v164, Number v165, Number v166, Number v167, Number v168, Number v169, Number v170, Number v171, Number v172, Number v173, Number v174, Number v175, Number v176, Number v177, Number v178, Number v179, Number v180, Number v181, Number v182, Number v183, Number v184, Number v185, Number v186, Number v187, Number v188, Number v189, Number v190, Number v191, Number v192, Number v193, Number v194, Number v195, Number v196, Number v197, Number v198, Number v199, Number v200, Number v201, Number v202, Number v203, Number v204, Number v205, Number v206, Number v207, Number v208, Number v209, Number v210, Number v211, Number v212, Number v213, Number v214, Number v215, Number v216, Number v217, Number v218, Number v219, Number v220, Number v221, Number v222, Number v223, Number v224, Number v225, Number v226, Number v227, Number v228, Number v229, Number v230, Number v231, Number v232, Number v233, Number v234, Number v235, Number v236, Number v237, Number v238, Number v239, Number v240, Number v241, Number v242, Number v243, Number v244, Number v245, Number v246, Number v247, Number v248, Number v249) {
		Interact3 f = new Interact3();
		f.setLayer1(layer1);
		f.setGid1(gid1);
		f.setXTolerance(xTolerance);
		f.setYTolerance(yTolerance);
		f.setV000(v000);
		f.setV001(v001);
		f.setV002(v002);
		f.setV003(v003);
		f.setV004(v004);
		f.setV005(v005);
		f.setV006(v006);
		f.setV007(v007);
		f.setV008(v008);
		f.setV009(v009);
		f.setV010(v010);
		f.setV011(v011);
		f.setV012(v012);
		f.setV013(v013);
		f.setV014(v014);
		f.setV015(v015);
		f.setV016(v016);
		f.setV017(v017);
		f.setV018(v018);
		f.setV019(v019);
		f.setV020(v020);
		f.setV021(v021);
		f.setV022(v022);
		f.setV023(v023);
		f.setV024(v024);
		f.setV025(v025);
		f.setV026(v026);
		f.setV027(v027);
		f.setV028(v028);
		f.setV029(v029);
		f.setV030(v030);
		f.setV031(v031);
		f.setV032(v032);
		f.setV033(v033);
		f.setV034(v034);
		f.setV035(v035);
		f.setV036(v036);
		f.setV037(v037);
		f.setV038(v038);
		f.setV039(v039);
		f.setV040(v040);
		f.setV041(v041);
		f.setV042(v042);
		f.setV043(v043);
		f.setV044(v044);
		f.setV045(v045);
		f.setV046(v046);
		f.setV047(v047);
		f.setV048(v048);
		f.setV049(v049);
		f.setV050(v050);
		f.setV051(v051);
		f.setV052(v052);
		f.setV053(v053);
		f.setV054(v054);
		f.setV055(v055);
		f.setV056(v056);
		f.setV057(v057);
		f.setV058(v058);
		f.setV059(v059);
		f.setV060(v060);
		f.setV061(v061);
		f.setV062(v062);
		f.setV063(v063);
		f.setV064(v064);
		f.setV065(v065);
		f.setV066(v066);
		f.setV067(v067);
		f.setV068(v068);
		f.setV069(v069);
		f.setV070(v070);
		f.setV071(v071);
		f.setV072(v072);
		f.setV073(v073);
		f.setV074(v074);
		f.setV075(v075);
		f.setV076(v076);
		f.setV077(v077);
		f.setV078(v078);
		f.setV079(v079);
		f.setV080(v080);
		f.setV081(v081);
		f.setV082(v082);
		f.setV083(v083);
		f.setV084(v084);
		f.setV085(v085);
		f.setV086(v086);
		f.setV087(v087);
		f.setV088(v088);
		f.setV089(v089);
		f.setV090(v090);
		f.setV091(v091);
		f.setV092(v092);
		f.setV093(v093);
		f.setV094(v094);
		f.setV095(v095);
		f.setV096(v096);
		f.setV097(v097);
		f.setV098(v098);
		f.setV099(v099);
		f.setV100(v100);
		f.setV101(v101);
		f.setV102(v102);
		f.setV103(v103);
		f.setV104(v104);
		f.setV105(v105);
		f.setV106(v106);
		f.setV107(v107);
		f.setV108(v108);
		f.setV109(v109);
		f.setV110(v110);
		f.setV111(v111);
		f.setV112(v112);
		f.setV113(v113);
		f.setV114(v114);
		f.setV115(v115);
		f.setV116(v116);
		f.setV117(v117);
		f.setV118(v118);
		f.setV119(v119);
		f.setV120(v120);
		f.setV121(v121);
		f.setV122(v122);
		f.setV123(v123);
		f.setV124(v124);
		f.setV125(v125);
		f.setV126(v126);
		f.setV127(v127);
		f.setV128(v128);
		f.setV129(v129);
		f.setV130(v130);
		f.setV131(v131);
		f.setV132(v132);
		f.setV133(v133);
		f.setV134(v134);
		f.setV135(v135);
		f.setV136(v136);
		f.setV137(v137);
		f.setV138(v138);
		f.setV139(v139);
		f.setV140(v140);
		f.setV141(v141);
		f.setV142(v142);
		f.setV143(v143);
		f.setV144(v144);
		f.setV145(v145);
		f.setV146(v146);
		f.setV147(v147);
		f.setV148(v148);
		f.setV149(v149);
		f.setV150(v150);
		f.setV151(v151);
		f.setV152(v152);
		f.setV153(v153);
		f.setV154(v154);
		f.setV155(v155);
		f.setV156(v156);
		f.setV157(v157);
		f.setV158(v158);
		f.setV159(v159);
		f.setV160(v160);
		f.setV161(v161);
		f.setV162(v162);
		f.setV163(v163);
		f.setV164(v164);
		f.setV165(v165);
		f.setV166(v166);
		f.setV167(v167);
		f.setV168(v168);
		f.setV169(v169);
		f.setV170(v170);
		f.setV171(v171);
		f.setV172(v172);
		f.setV173(v173);
		f.setV174(v174);
		f.setV175(v175);
		f.setV176(v176);
		f.setV177(v177);
		f.setV178(v178);
		f.setV179(v179);
		f.setV180(v180);
		f.setV181(v181);
		f.setV182(v182);
		f.setV183(v183);
		f.setV184(v184);
		f.setV185(v185);
		f.setV186(v186);
		f.setV187(v187);
		f.setV188(v188);
		f.setV189(v189);
		f.setV190(v190);
		f.setV191(v191);
		f.setV192(v192);
		f.setV193(v193);
		f.setV194(v194);
		f.setV195(v195);
		f.setV196(v196);
		f.setV197(v197);
		f.setV198(v198);
		f.setV199(v199);
		f.setV200(v200);
		f.setV201(v201);
		f.setV202(v202);
		f.setV203(v203);
		f.setV204(v204);
		f.setV205(v205);
		f.setV206(v206);
		f.setV207(v207);
		f.setV208(v208);
		f.setV209(v209);
		f.setV210(v210);
		f.setV211(v211);
		f.setV212(v212);
		f.setV213(v213);
		f.setV214(v214);
		f.setV215(v215);
		f.setV216(v216);
		f.setV217(v217);
		f.setV218(v218);
		f.setV219(v219);
		f.setV220(v220);
		f.setV221(v221);
		f.setV222(v222);
		f.setV223(v223);
		f.setV224(v224);
		f.setV225(v225);
		f.setV226(v226);
		f.setV227(v227);
		f.setV228(v228);
		f.setV229(v229);
		f.setV230(v230);
		f.setV231(v231);
		f.setV232(v232);
		f.setV233(v233);
		f.setV234(v234);
		f.setV235(v235);
		f.setV236(v236);
		f.setV237(v237);
		f.setV238(v238);
		f.setV239(v239);
		f.setV240(v240);
		f.setV241(v241);
		f.setV242(v242);
		f.setV243(v243);
		f.setV244(v244);
		f.setV245(v245);
		f.setV246(v246);
		f.setV247(v247);
		f.setV248(v248);
		f.setV249(v249);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.INTERACT</code> as a field
	 */
	public static Field<String> interact3(String layer1, Number gid1, Number xTolerance, Number yTolerance, Number v000, Number v001, Number v002, Number v003, Number v004, Number v005, Number v006, Number v007, Number v008, Number v009, Number v010, Number v011, Number v012, Number v013, Number v014, Number v015, Number v016, Number v017, Number v018, Number v019, Number v020, Number v021, Number v022, Number v023, Number v024, Number v025, Number v026, Number v027, Number v028, Number v029, Number v030, Number v031, Number v032, Number v033, Number v034, Number v035, Number v036, Number v037, Number v038, Number v039, Number v040, Number v041, Number v042, Number v043, Number v044, Number v045, Number v046, Number v047, Number v048, Number v049, Number v050, Number v051, Number v052, Number v053, Number v054, Number v055, Number v056, Number v057, Number v058, Number v059, Number v060, Number v061, Number v062, Number v063, Number v064, Number v065, Number v066, Number v067, Number v068, Number v069, Number v070, Number v071, Number v072, Number v073, Number v074, Number v075, Number v076, Number v077, Number v078, Number v079, Number v080, Number v081, Number v082, Number v083, Number v084, Number v085, Number v086, Number v087, Number v088, Number v089, Number v090, Number v091, Number v092, Number v093, Number v094, Number v095, Number v096, Number v097, Number v098, Number v099, Number v100, Number v101, Number v102, Number v103, Number v104, Number v105, Number v106, Number v107, Number v108, Number v109, Number v110, Number v111, Number v112, Number v113, Number v114, Number v115, Number v116, Number v117, Number v118, Number v119, Number v120, Number v121, Number v122, Number v123, Number v124, Number v125, Number v126, Number v127, Number v128, Number v129, Number v130, Number v131, Number v132, Number v133, Number v134, Number v135, Number v136, Number v137, Number v138, Number v139, Number v140, Number v141, Number v142, Number v143, Number v144, Number v145, Number v146, Number v147, Number v148, Number v149, Number v150, Number v151, Number v152, Number v153, Number v154, Number v155, Number v156, Number v157, Number v158, Number v159, Number v160, Number v161, Number v162, Number v163, Number v164, Number v165, Number v166, Number v167, Number v168, Number v169, Number v170, Number v171, Number v172, Number v173, Number v174, Number v175, Number v176, Number v177, Number v178, Number v179, Number v180, Number v181, Number v182, Number v183, Number v184, Number v185, Number v186, Number v187, Number v188, Number v189, Number v190, Number v191, Number v192, Number v193, Number v194, Number v195, Number v196, Number v197, Number v198, Number v199, Number v200, Number v201, Number v202, Number v203, Number v204, Number v205, Number v206, Number v207, Number v208, Number v209, Number v210, Number v211, Number v212, Number v213, Number v214, Number v215, Number v216, Number v217, Number v218, Number v219, Number v220, Number v221, Number v222, Number v223, Number v224, Number v225, Number v226, Number v227, Number v228, Number v229, Number v230, Number v231, Number v232, Number v233, Number v234, Number v235, Number v236, Number v237, Number v238, Number v239, Number v240, Number v241, Number v242, Number v243, Number v244, Number v245, Number v246, Number v247, Number v248, Number v249) {
		Interact3 f = new Interact3();
		f.setLayer1(layer1);
		f.setGid1(gid1);
		f.setXTolerance(xTolerance);
		f.setYTolerance(yTolerance);
		f.setV000(v000);
		f.setV001(v001);
		f.setV002(v002);
		f.setV003(v003);
		f.setV004(v004);
		f.setV005(v005);
		f.setV006(v006);
		f.setV007(v007);
		f.setV008(v008);
		f.setV009(v009);
		f.setV010(v010);
		f.setV011(v011);
		f.setV012(v012);
		f.setV013(v013);
		f.setV014(v014);
		f.setV015(v015);
		f.setV016(v016);
		f.setV017(v017);
		f.setV018(v018);
		f.setV019(v019);
		f.setV020(v020);
		f.setV021(v021);
		f.setV022(v022);
		f.setV023(v023);
		f.setV024(v024);
		f.setV025(v025);
		f.setV026(v026);
		f.setV027(v027);
		f.setV028(v028);
		f.setV029(v029);
		f.setV030(v030);
		f.setV031(v031);
		f.setV032(v032);
		f.setV033(v033);
		f.setV034(v034);
		f.setV035(v035);
		f.setV036(v036);
		f.setV037(v037);
		f.setV038(v038);
		f.setV039(v039);
		f.setV040(v040);
		f.setV041(v041);
		f.setV042(v042);
		f.setV043(v043);
		f.setV044(v044);
		f.setV045(v045);
		f.setV046(v046);
		f.setV047(v047);
		f.setV048(v048);
		f.setV049(v049);
		f.setV050(v050);
		f.setV051(v051);
		f.setV052(v052);
		f.setV053(v053);
		f.setV054(v054);
		f.setV055(v055);
		f.setV056(v056);
		f.setV057(v057);
		f.setV058(v058);
		f.setV059(v059);
		f.setV060(v060);
		f.setV061(v061);
		f.setV062(v062);
		f.setV063(v063);
		f.setV064(v064);
		f.setV065(v065);
		f.setV066(v066);
		f.setV067(v067);
		f.setV068(v068);
		f.setV069(v069);
		f.setV070(v070);
		f.setV071(v071);
		f.setV072(v072);
		f.setV073(v073);
		f.setV074(v074);
		f.setV075(v075);
		f.setV076(v076);
		f.setV077(v077);
		f.setV078(v078);
		f.setV079(v079);
		f.setV080(v080);
		f.setV081(v081);
		f.setV082(v082);
		f.setV083(v083);
		f.setV084(v084);
		f.setV085(v085);
		f.setV086(v086);
		f.setV087(v087);
		f.setV088(v088);
		f.setV089(v089);
		f.setV090(v090);
		f.setV091(v091);
		f.setV092(v092);
		f.setV093(v093);
		f.setV094(v094);
		f.setV095(v095);
		f.setV096(v096);
		f.setV097(v097);
		f.setV098(v098);
		f.setV099(v099);
		f.setV100(v100);
		f.setV101(v101);
		f.setV102(v102);
		f.setV103(v103);
		f.setV104(v104);
		f.setV105(v105);
		f.setV106(v106);
		f.setV107(v107);
		f.setV108(v108);
		f.setV109(v109);
		f.setV110(v110);
		f.setV111(v111);
		f.setV112(v112);
		f.setV113(v113);
		f.setV114(v114);
		f.setV115(v115);
		f.setV116(v116);
		f.setV117(v117);
		f.setV118(v118);
		f.setV119(v119);
		f.setV120(v120);
		f.setV121(v121);
		f.setV122(v122);
		f.setV123(v123);
		f.setV124(v124);
		f.setV125(v125);
		f.setV126(v126);
		f.setV127(v127);
		f.setV128(v128);
		f.setV129(v129);
		f.setV130(v130);
		f.setV131(v131);
		f.setV132(v132);
		f.setV133(v133);
		f.setV134(v134);
		f.setV135(v135);
		f.setV136(v136);
		f.setV137(v137);
		f.setV138(v138);
		f.setV139(v139);
		f.setV140(v140);
		f.setV141(v141);
		f.setV142(v142);
		f.setV143(v143);
		f.setV144(v144);
		f.setV145(v145);
		f.setV146(v146);
		f.setV147(v147);
		f.setV148(v148);
		f.setV149(v149);
		f.setV150(v150);
		f.setV151(v151);
		f.setV152(v152);
		f.setV153(v153);
		f.setV154(v154);
		f.setV155(v155);
		f.setV156(v156);
		f.setV157(v157);
		f.setV158(v158);
		f.setV159(v159);
		f.setV160(v160);
		f.setV161(v161);
		f.setV162(v162);
		f.setV163(v163);
		f.setV164(v164);
		f.setV165(v165);
		f.setV166(v166);
		f.setV167(v167);
		f.setV168(v168);
		f.setV169(v169);
		f.setV170(v170);
		f.setV171(v171);
		f.setV172(v172);
		f.setV173(v173);
		f.setV174(v174);
		f.setV175(v175);
		f.setV176(v176);
		f.setV177(v177);
		f.setV178(v178);
		f.setV179(v179);
		f.setV180(v180);
		f.setV181(v181);
		f.setV182(v182);
		f.setV183(v183);
		f.setV184(v184);
		f.setV185(v185);
		f.setV186(v186);
		f.setV187(v187);
		f.setV188(v188);
		f.setV189(v189);
		f.setV190(v190);
		f.setV191(v191);
		f.setV192(v192);
		f.setV193(v193);
		f.setV194(v194);
		f.setV195(v195);
		f.setV196(v196);
		f.setV197(v197);
		f.setV198(v198);
		f.setV199(v199);
		f.setV200(v200);
		f.setV201(v201);
		f.setV202(v202);
		f.setV203(v203);
		f.setV204(v204);
		f.setV205(v205);
		f.setV206(v206);
		f.setV207(v207);
		f.setV208(v208);
		f.setV209(v209);
		f.setV210(v210);
		f.setV211(v211);
		f.setV212(v212);
		f.setV213(v213);
		f.setV214(v214);
		f.setV215(v215);
		f.setV216(v216);
		f.setV217(v217);
		f.setV218(v218);
		f.setV219(v219);
		f.setV220(v220);
		f.setV221(v221);
		f.setV222(v222);
		f.setV223(v223);
		f.setV224(v224);
		f.setV225(v225);
		f.setV226(v226);
		f.setV227(v227);
		f.setV228(v228);
		f.setV229(v229);
		f.setV230(v230);
		f.setV231(v231);
		f.setV232(v232);
		f.setV233(v233);
		f.setV234(v234);
		f.setV235(v235);
		f.setV236(v236);
		f.setV237(v237);
		f.setV238(v238);
		f.setV239(v239);
		f.setV240(v240);
		f.setV241(v241);
		f.setV242(v242);
		f.setV243(v243);
		f.setV244(v244);
		f.setV245(v245);
		f.setV246(v246);
		f.setV247(v247);
		f.setV248(v248);
		f.setV249(v249);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.INTERACT</code> as a field
	 */
	public static Field<String> interact3(Field<String> layer1, Field<? extends Number> gid1, Field<? extends Number> xTolerance, Field<? extends Number> yTolerance, Field<? extends Number> v000, Field<? extends Number> v001, Field<? extends Number> v002, Field<? extends Number> v003, Field<? extends Number> v004, Field<? extends Number> v005, Field<? extends Number> v006, Field<? extends Number> v007, Field<? extends Number> v008, Field<? extends Number> v009, Field<? extends Number> v010, Field<? extends Number> v011, Field<? extends Number> v012, Field<? extends Number> v013, Field<? extends Number> v014, Field<? extends Number> v015, Field<? extends Number> v016, Field<? extends Number> v017, Field<? extends Number> v018, Field<? extends Number> v019, Field<? extends Number> v020, Field<? extends Number> v021, Field<? extends Number> v022, Field<? extends Number> v023, Field<? extends Number> v024, Field<? extends Number> v025, Field<? extends Number> v026, Field<? extends Number> v027, Field<? extends Number> v028, Field<? extends Number> v029, Field<? extends Number> v030, Field<? extends Number> v031, Field<? extends Number> v032, Field<? extends Number> v033, Field<? extends Number> v034, Field<? extends Number> v035, Field<? extends Number> v036, Field<? extends Number> v037, Field<? extends Number> v038, Field<? extends Number> v039, Field<? extends Number> v040, Field<? extends Number> v041, Field<? extends Number> v042, Field<? extends Number> v043, Field<? extends Number> v044, Field<? extends Number> v045, Field<? extends Number> v046, Field<? extends Number> v047, Field<? extends Number> v048, Field<? extends Number> v049, Field<? extends Number> v050, Field<? extends Number> v051, Field<? extends Number> v052, Field<? extends Number> v053, Field<? extends Number> v054, Field<? extends Number> v055, Field<? extends Number> v056, Field<? extends Number> v057, Field<? extends Number> v058, Field<? extends Number> v059, Field<? extends Number> v060, Field<? extends Number> v061, Field<? extends Number> v062, Field<? extends Number> v063, Field<? extends Number> v064, Field<? extends Number> v065, Field<? extends Number> v066, Field<? extends Number> v067, Field<? extends Number> v068, Field<? extends Number> v069, Field<? extends Number> v070, Field<? extends Number> v071, Field<? extends Number> v072, Field<? extends Number> v073, Field<? extends Number> v074, Field<? extends Number> v075, Field<? extends Number> v076, Field<? extends Number> v077, Field<? extends Number> v078, Field<? extends Number> v079, Field<? extends Number> v080, Field<? extends Number> v081, Field<? extends Number> v082, Field<? extends Number> v083, Field<? extends Number> v084, Field<? extends Number> v085, Field<? extends Number> v086, Field<? extends Number> v087, Field<? extends Number> v088, Field<? extends Number> v089, Field<? extends Number> v090, Field<? extends Number> v091, Field<? extends Number> v092, Field<? extends Number> v093, Field<? extends Number> v094, Field<? extends Number> v095, Field<? extends Number> v096, Field<? extends Number> v097, Field<? extends Number> v098, Field<? extends Number> v099, Field<? extends Number> v100, Field<? extends Number> v101, Field<? extends Number> v102, Field<? extends Number> v103, Field<? extends Number> v104, Field<? extends Number> v105, Field<? extends Number> v106, Field<? extends Number> v107, Field<? extends Number> v108, Field<? extends Number> v109, Field<? extends Number> v110, Field<? extends Number> v111, Field<? extends Number> v112, Field<? extends Number> v113, Field<? extends Number> v114, Field<? extends Number> v115, Field<? extends Number> v116, Field<? extends Number> v117, Field<? extends Number> v118, Field<? extends Number> v119, Field<? extends Number> v120, Field<? extends Number> v121, Field<? extends Number> v122, Field<? extends Number> v123, Field<? extends Number> v124, Field<? extends Number> v125, Field<? extends Number> v126, Field<? extends Number> v127, Field<? extends Number> v128, Field<? extends Number> v129, Field<? extends Number> v130, Field<? extends Number> v131, Field<? extends Number> v132, Field<? extends Number> v133, Field<? extends Number> v134, Field<? extends Number> v135, Field<? extends Number> v136, Field<? extends Number> v137, Field<? extends Number> v138, Field<? extends Number> v139, Field<? extends Number> v140, Field<? extends Number> v141, Field<? extends Number> v142, Field<? extends Number> v143, Field<? extends Number> v144, Field<? extends Number> v145, Field<? extends Number> v146, Field<? extends Number> v147, Field<? extends Number> v148, Field<? extends Number> v149, Field<? extends Number> v150, Field<? extends Number> v151, Field<? extends Number> v152, Field<? extends Number> v153, Field<? extends Number> v154, Field<? extends Number> v155, Field<? extends Number> v156, Field<? extends Number> v157, Field<? extends Number> v158, Field<? extends Number> v159, Field<? extends Number> v160, Field<? extends Number> v161, Field<? extends Number> v162, Field<? extends Number> v163, Field<? extends Number> v164, Field<? extends Number> v165, Field<? extends Number> v166, Field<? extends Number> v167, Field<? extends Number> v168, Field<? extends Number> v169, Field<? extends Number> v170, Field<? extends Number> v171, Field<? extends Number> v172, Field<? extends Number> v173, Field<? extends Number> v174, Field<? extends Number> v175, Field<? extends Number> v176, Field<? extends Number> v177, Field<? extends Number> v178, Field<? extends Number> v179, Field<? extends Number> v180, Field<? extends Number> v181, Field<? extends Number> v182, Field<? extends Number> v183, Field<? extends Number> v184, Field<? extends Number> v185, Field<? extends Number> v186, Field<? extends Number> v187, Field<? extends Number> v188, Field<? extends Number> v189, Field<? extends Number> v190, Field<? extends Number> v191, Field<? extends Number> v192, Field<? extends Number> v193, Field<? extends Number> v194, Field<? extends Number> v195, Field<? extends Number> v196, Field<? extends Number> v197, Field<? extends Number> v198, Field<? extends Number> v199, Field<? extends Number> v200, Field<? extends Number> v201, Field<? extends Number> v202, Field<? extends Number> v203, Field<? extends Number> v204, Field<? extends Number> v205, Field<? extends Number> v206, Field<? extends Number> v207, Field<? extends Number> v208, Field<? extends Number> v209, Field<? extends Number> v210, Field<? extends Number> v211, Field<? extends Number> v212, Field<? extends Number> v213, Field<? extends Number> v214, Field<? extends Number> v215, Field<? extends Number> v216, Field<? extends Number> v217, Field<? extends Number> v218, Field<? extends Number> v219, Field<? extends Number> v220, Field<? extends Number> v221, Field<? extends Number> v222, Field<? extends Number> v223, Field<? extends Number> v224, Field<? extends Number> v225, Field<? extends Number> v226, Field<? extends Number> v227, Field<? extends Number> v228, Field<? extends Number> v229, Field<? extends Number> v230, Field<? extends Number> v231, Field<? extends Number> v232, Field<? extends Number> v233, Field<? extends Number> v234, Field<? extends Number> v235, Field<? extends Number> v236, Field<? extends Number> v237, Field<? extends Number> v238, Field<? extends Number> v239, Field<? extends Number> v240, Field<? extends Number> v241, Field<? extends Number> v242, Field<? extends Number> v243, Field<? extends Number> v244, Field<? extends Number> v245, Field<? extends Number> v246, Field<? extends Number> v247, Field<? extends Number> v248, Field<? extends Number> v249) {
		Interact3 f = new Interact3();
		f.setLayer1(layer1);
		f.setGid1(gid1);
		f.setXTolerance(xTolerance);
		f.setYTolerance(yTolerance);
		f.setV000(v000);
		f.setV001(v001);
		f.setV002(v002);
		f.setV003(v003);
		f.setV004(v004);
		f.setV005(v005);
		f.setV006(v006);
		f.setV007(v007);
		f.setV008(v008);
		f.setV009(v009);
		f.setV010(v010);
		f.setV011(v011);
		f.setV012(v012);
		f.setV013(v013);
		f.setV014(v014);
		f.setV015(v015);
		f.setV016(v016);
		f.setV017(v017);
		f.setV018(v018);
		f.setV019(v019);
		f.setV020(v020);
		f.setV021(v021);
		f.setV022(v022);
		f.setV023(v023);
		f.setV024(v024);
		f.setV025(v025);
		f.setV026(v026);
		f.setV027(v027);
		f.setV028(v028);
		f.setV029(v029);
		f.setV030(v030);
		f.setV031(v031);
		f.setV032(v032);
		f.setV033(v033);
		f.setV034(v034);
		f.setV035(v035);
		f.setV036(v036);
		f.setV037(v037);
		f.setV038(v038);
		f.setV039(v039);
		f.setV040(v040);
		f.setV041(v041);
		f.setV042(v042);
		f.setV043(v043);
		f.setV044(v044);
		f.setV045(v045);
		f.setV046(v046);
		f.setV047(v047);
		f.setV048(v048);
		f.setV049(v049);
		f.setV050(v050);
		f.setV051(v051);
		f.setV052(v052);
		f.setV053(v053);
		f.setV054(v054);
		f.setV055(v055);
		f.setV056(v056);
		f.setV057(v057);
		f.setV058(v058);
		f.setV059(v059);
		f.setV060(v060);
		f.setV061(v061);
		f.setV062(v062);
		f.setV063(v063);
		f.setV064(v064);
		f.setV065(v065);
		f.setV066(v066);
		f.setV067(v067);
		f.setV068(v068);
		f.setV069(v069);
		f.setV070(v070);
		f.setV071(v071);
		f.setV072(v072);
		f.setV073(v073);
		f.setV074(v074);
		f.setV075(v075);
		f.setV076(v076);
		f.setV077(v077);
		f.setV078(v078);
		f.setV079(v079);
		f.setV080(v080);
		f.setV081(v081);
		f.setV082(v082);
		f.setV083(v083);
		f.setV084(v084);
		f.setV085(v085);
		f.setV086(v086);
		f.setV087(v087);
		f.setV088(v088);
		f.setV089(v089);
		f.setV090(v090);
		f.setV091(v091);
		f.setV092(v092);
		f.setV093(v093);
		f.setV094(v094);
		f.setV095(v095);
		f.setV096(v096);
		f.setV097(v097);
		f.setV098(v098);
		f.setV099(v099);
		f.setV100(v100);
		f.setV101(v101);
		f.setV102(v102);
		f.setV103(v103);
		f.setV104(v104);
		f.setV105(v105);
		f.setV106(v106);
		f.setV107(v107);
		f.setV108(v108);
		f.setV109(v109);
		f.setV110(v110);
		f.setV111(v111);
		f.setV112(v112);
		f.setV113(v113);
		f.setV114(v114);
		f.setV115(v115);
		f.setV116(v116);
		f.setV117(v117);
		f.setV118(v118);
		f.setV119(v119);
		f.setV120(v120);
		f.setV121(v121);
		f.setV122(v122);
		f.setV123(v123);
		f.setV124(v124);
		f.setV125(v125);
		f.setV126(v126);
		f.setV127(v127);
		f.setV128(v128);
		f.setV129(v129);
		f.setV130(v130);
		f.setV131(v131);
		f.setV132(v132);
		f.setV133(v133);
		f.setV134(v134);
		f.setV135(v135);
		f.setV136(v136);
		f.setV137(v137);
		f.setV138(v138);
		f.setV139(v139);
		f.setV140(v140);
		f.setV141(v141);
		f.setV142(v142);
		f.setV143(v143);
		f.setV144(v144);
		f.setV145(v145);
		f.setV146(v146);
		f.setV147(v147);
		f.setV148(v148);
		f.setV149(v149);
		f.setV150(v150);
		f.setV151(v151);
		f.setV152(v152);
		f.setV153(v153);
		f.setV154(v154);
		f.setV155(v155);
		f.setV156(v156);
		f.setV157(v157);
		f.setV158(v158);
		f.setV159(v159);
		f.setV160(v160);
		f.setV161(v161);
		f.setV162(v162);
		f.setV163(v163);
		f.setV164(v164);
		f.setV165(v165);
		f.setV166(v166);
		f.setV167(v167);
		f.setV168(v168);
		f.setV169(v169);
		f.setV170(v170);
		f.setV171(v171);
		f.setV172(v172);
		f.setV173(v173);
		f.setV174(v174);
		f.setV175(v175);
		f.setV176(v176);
		f.setV177(v177);
		f.setV178(v178);
		f.setV179(v179);
		f.setV180(v180);
		f.setV181(v181);
		f.setV182(v182);
		f.setV183(v183);
		f.setV184(v184);
		f.setV185(v185);
		f.setV186(v186);
		f.setV187(v187);
		f.setV188(v188);
		f.setV189(v189);
		f.setV190(v190);
		f.setV191(v191);
		f.setV192(v192);
		f.setV193(v193);
		f.setV194(v194);
		f.setV195(v195);
		f.setV196(v196);
		f.setV197(v197);
		f.setV198(v198);
		f.setV199(v199);
		f.setV200(v200);
		f.setV201(v201);
		f.setV202(v202);
		f.setV203(v203);
		f.setV204(v204);
		f.setV205(v205);
		f.setV206(v206);
		f.setV207(v207);
		f.setV208(v208);
		f.setV209(v209);
		f.setV210(v210);
		f.setV211(v211);
		f.setV212(v212);
		f.setV213(v213);
		f.setV214(v214);
		f.setV215(v215);
		f.setV216(v216);
		f.setV217(v217);
		f.setV218(v218);
		f.setV219(v219);
		f.setV220(v220);
		f.setV221(v221);
		f.setV222(v222);
		f.setV223(v223);
		f.setV224(v224);
		f.setV225(v225);
		f.setV226(v226);
		f.setV227(v227);
		f.setV228(v228);
		f.setV229(v229);
		f.setV230(v230);
		f.setV231(v231);
		f.setV232(v232);
		f.setV233(v233);
		f.setV234(v234);
		f.setV235(v235);
		f.setV236(v236);
		f.setV237(v237);
		f.setV238(v238);
		f.setV239(v239);
		f.setV240(v240);
		f.setV241(v241);
		f.setV242(v242);
		f.setV243(v243);
		f.setV244(v244);
		f.setV245(v245);
		f.setV246(v246);
		f.setV247(v247);
		f.setV248(v248);
		f.setV249(v249);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.RELATE</code>
	 */
	public static String relate1(Configuration configuration, String layer, Number gid1, String mask, Number gid2) {
		Relate1 f = new Relate1();
		f.setLayer(layer);
		f.setGid1(gid1);
		f.setMask(mask);
		f.setGid2(gid2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.RELATE</code> as a field
	 */
	public static Field<String> relate1(String layer, Number gid1, String mask, Number gid2) {
		Relate1 f = new Relate1();
		f.setLayer(layer);
		f.setGid1(gid1);
		f.setMask(mask);
		f.setGid2(gid2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.RELATE</code> as a field
	 */
	public static Field<String> relate1(Field<String> layer, Field<? extends Number> gid1, Field<String> mask, Field<? extends Number> gid2) {
		Relate1 f = new Relate1();
		f.setLayer(layer);
		f.setGid1(gid1);
		f.setMask(mask);
		f.setGid2(gid2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.RELATE</code>
	 */
	public static String relate2(Configuration configuration, String layer1, Number gid1, String mask, String layer2, Number gid2) {
		Relate2 f = new Relate2();
		f.setLayer1(layer1);
		f.setGid1(gid1);
		f.setMask(mask);
		f.setLayer2(layer2);
		f.setGid2(gid2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.RELATE</code> as a field
	 */
	public static Field<String> relate2(String layer1, Number gid1, String mask, String layer2, Number gid2) {
		Relate2 f = new Relate2();
		f.setLayer1(layer1);
		f.setGid1(gid1);
		f.setMask(mask);
		f.setLayer2(layer2);
		f.setGid2(gid2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.RELATE</code> as a field
	 */
	public static Field<String> relate2(Field<String> layer1, Field<? extends Number> gid1, Field<String> mask, Field<String> layer2, Field<? extends Number> gid2) {
		Relate2 f = new Relate2();
		f.setLayer1(layer1);
		f.setGid1(gid1);
		f.setMask(mask);
		f.setLayer2(layer2);
		f.setGid2(gid2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.RELATE</code>
	 */
	public static String relate3(Configuration configuration, String layer1, Number gid1, Number nord1, String mask, String layer2, Number gid2, Number nord2, Number tolerance1, Number tolerance2) {
		Relate3 f = new Relate3();
		f.setLayer1(layer1);
		f.setGid1(gid1);
		f.setNord1(nord1);
		f.setMask(mask);
		f.setLayer2(layer2);
		f.setGid2(gid2);
		f.setNord2(nord2);
		f.setTolerance1(tolerance1);
		f.setTolerance2(tolerance2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.RELATE</code> as a field
	 */
	public static Field<String> relate3(String layer1, Number gid1, Number nord1, String mask, String layer2, Number gid2, Number nord2, Number tolerance1, Number tolerance2) {
		Relate3 f = new Relate3();
		f.setLayer1(layer1);
		f.setGid1(gid1);
		f.setNord1(nord1);
		f.setMask(mask);
		f.setLayer2(layer2);
		f.setGid2(gid2);
		f.setNord2(nord2);
		f.setTolerance1(tolerance1);
		f.setTolerance2(tolerance2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.RELATE</code> as a field
	 */
	public static Field<String> relate3(Field<String> layer1, Field<? extends Number> gid1, Field<? extends Number> nord1, Field<String> mask, Field<String> layer2, Field<? extends Number> gid2, Field<? extends Number> nord2, Field<? extends Number> tolerance1, Field<? extends Number> tolerance2) {
		Relate3 f = new Relate3();
		f.setLayer1(layer1);
		f.setGid1(gid1);
		f.setNord1(nord1);
		f.setMask(mask);
		f.setLayer2(layer2);
		f.setGid2(gid2);
		f.setNord2(nord2);
		f.setTolerance1(tolerance1);
		f.setTolerance2(tolerance2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.RELATE</code>
	 */
	public static String relate5(Configuration configuration, SdoGeometryRecord geom1, Object dim1, String mask, SdoGeometryRecord geom2, Object dim2) {
		Relate5 f = new Relate5();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setMask(mask);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.RELATE</code> as a field
	 */
	public static Field<String> relate5(SdoGeometryRecord geom1, Object dim1, String mask, SdoGeometryRecord geom2, Object dim2) {
		Relate5 f = new Relate5();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setMask(mask);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.RELATE</code> as a field
	 */
	public static Field<String> relate5(Field<SdoGeometryRecord> geom1, Field<Object> dim1, Field<String> mask, Field<SdoGeometryRecord> geom2, Field<Object> dim2) {
		Relate5 f = new Relate5();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setMask(mask);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.RELATE</code>
	 */
	public static String relate6(Configuration configuration, SdoGeometryRecord geom1, String mask, SdoGeometryRecord geom2, Number tol) {
		Relate6 f = new Relate6();
		f.setGeom1(geom1);
		f.setMask(mask);
		f.setGeom2(geom2);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.RELATE</code> as a field
	 */
	public static Field<String> relate6(SdoGeometryRecord geom1, String mask, SdoGeometryRecord geom2, Number tol) {
		Relate6 f = new Relate6();
		f.setGeom1(geom1);
		f.setMask(mask);
		f.setGeom2(geom2);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.RELATE</code> as a field
	 */
	public static Field<String> relate6(Field<SdoGeometryRecord> geom1, Field<String> mask, Field<SdoGeometryRecord> geom2, Field<? extends Number> tol) {
		Relate6 f = new Relate6();
		f.setGeom1(geom1);
		f.setMask(mask);
		f.setGeom2(geom2);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_ALPHA_SHAPE</code>
	 */
	public static SdoGeometryRecord sdoAlphaShape(Configuration configuration, SdoGeometryRecord geom, Number tol, Number radius, Integer flag) {
		SdoAlphaShape f = new SdoAlphaShape();
		f.setGeom(geom);
		f.setTol(tol);
		f.setRadius(radius);
		f.setFlag(flag);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_ALPHA_SHAPE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoAlphaShape(SdoGeometryRecord geom, Number tol, Number radius, Integer flag) {
		SdoAlphaShape f = new SdoAlphaShape();
		f.setGeom(geom);
		f.setTol(tol);
		f.setRadius(radius);
		f.setFlag(flag);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_ALPHA_SHAPE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoAlphaShape(Field<SdoGeometryRecord> geom, Field<? extends Number> tol, Field<? extends Number> radius, Field<Integer> flag) {
		SdoAlphaShape f = new SdoAlphaShape();
		f.setGeom(geom);
		f.setTol(tol);
		f.setRadius(radius);
		f.setFlag(flag);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_ARC_DENSIFY</code>
	 */
	public static SdoGeometryRecord sdoArcDensify1(Configuration configuration, SdoGeometryRecord geom, Object dim, String params) {
		SdoArcDensify1 f = new SdoArcDensify1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setParams(params);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_ARC_DENSIFY</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoArcDensify1(SdoGeometryRecord geom, Object dim, String params) {
		SdoArcDensify1 f = new SdoArcDensify1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setParams(params);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_ARC_DENSIFY</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoArcDensify1(Field<SdoGeometryRecord> geom, Field<Object> dim, Field<String> params) {
		SdoArcDensify1 f = new SdoArcDensify1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setParams(params);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_ARC_DENSIFY</code>
	 */
	public static SdoGeometryRecord sdoArcDensify2(Configuration configuration, SdoGeometryRecord geom, Number tol, String params) {
		SdoArcDensify2 f = new SdoArcDensify2();
		f.setGeom(geom);
		f.setTol(tol);
		f.setParams(params);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_ARC_DENSIFY</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoArcDensify2(SdoGeometryRecord geom, Number tol, String params) {
		SdoArcDensify2 f = new SdoArcDensify2();
		f.setGeom(geom);
		f.setTol(tol);
		f.setParams(params);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_ARC_DENSIFY</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoArcDensify2(Field<SdoGeometryRecord> geom, Field<? extends Number> tol, Field<String> params) {
		SdoArcDensify2 f = new SdoArcDensify2();
		f.setGeom(geom);
		f.setTol(tol);
		f.setParams(params);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_AREA</code>
	 */
	public static BigDecimal sdoArea1(Configuration configuration, SdoGeometryRecord geom, Object dim) {
		SdoArea1 f = new SdoArea1();
		f.setGeom(geom);
		f.setDim(dim);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_AREA</code> as a field
	 */
	public static Field<BigDecimal> sdoArea1(SdoGeometryRecord geom, Object dim) {
		SdoArea1 f = new SdoArea1();
		f.setGeom(geom);
		f.setDim(dim);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_AREA</code> as a field
	 */
	public static Field<BigDecimal> sdoArea1(Field<SdoGeometryRecord> geom, Field<Object> dim) {
		SdoArea1 f = new SdoArea1();
		f.setGeom(geom);
		f.setDim(dim);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_AREA</code>
	 */
	public static BigDecimal sdoArea2(Configuration configuration, SdoGeometryRecord geom, Number tol) {
		SdoArea2 f = new SdoArea2();
		f.setGeom(geom);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_AREA</code> as a field
	 */
	public static Field<BigDecimal> sdoArea2(SdoGeometryRecord geom, Number tol) {
		SdoArea2 f = new SdoArea2();
		f.setGeom(geom);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_AREA</code> as a field
	 */
	public static Field<BigDecimal> sdoArea2(Field<SdoGeometryRecord> geom, Field<? extends Number> tol) {
		SdoArea2 f = new SdoArea2();
		f.setGeom(geom);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_AREA</code>
	 */
	public static BigDecimal sdoArea3(Configuration configuration, SdoGeometryRecord geom, Object dim, String unit) {
		SdoArea3 f = new SdoArea3();
		f.setGeom(geom);
		f.setDim(dim);
		f.setUnit(unit);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_AREA</code> as a field
	 */
	public static Field<BigDecimal> sdoArea3(SdoGeometryRecord geom, Object dim, String unit) {
		SdoArea3 f = new SdoArea3();
		f.setGeom(geom);
		f.setDim(dim);
		f.setUnit(unit);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_AREA</code> as a field
	 */
	public static Field<BigDecimal> sdoArea3(Field<SdoGeometryRecord> geom, Field<Object> dim, Field<String> unit) {
		SdoArea3 f = new SdoArea3();
		f.setGeom(geom);
		f.setDim(dim);
		f.setUnit(unit);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_AREA</code>
	 */
	public static BigDecimal sdoArea4(Configuration configuration, SdoGeometryRecord geom, Number tol, String unit) {
		SdoArea4 f = new SdoArea4();
		f.setGeom(geom);
		f.setTol(tol);
		f.setUnit(unit);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_AREA</code> as a field
	 */
	public static Field<BigDecimal> sdoArea4(SdoGeometryRecord geom, Number tol, String unit) {
		SdoArea4 f = new SdoArea4();
		f.setGeom(geom);
		f.setTol(tol);
		f.setUnit(unit);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_AREA</code> as a field
	 */
	public static Field<BigDecimal> sdoArea4(Field<SdoGeometryRecord> geom, Field<? extends Number> tol, Field<String> unit) {
		SdoArea4 f = new SdoArea4();
		f.setGeom(geom);
		f.setTol(tol);
		f.setUnit(unit);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_BUFFER</code>
	 */
	public static SdoGeometryRecord sdoBuffer1(Configuration configuration, SdoGeometryRecord geom, Object dim, Number dist) {
		SdoBuffer1 f = new SdoBuffer1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setDist(dist);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_BUFFER</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoBuffer1(SdoGeometryRecord geom, Object dim, Number dist) {
		SdoBuffer1 f = new SdoBuffer1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setDist(dist);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_BUFFER</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoBuffer1(Field<SdoGeometryRecord> geom, Field<Object> dim, Field<? extends Number> dist) {
		SdoBuffer1 f = new SdoBuffer1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setDist(dist);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_BUFFER</code>
	 */
	public static SdoGeometryRecord sdoBuffer2(Configuration configuration, SdoGeometryRecord geom, Number dist, Number tol) {
		SdoBuffer2 f = new SdoBuffer2();
		f.setGeom(geom);
		f.setDist(dist);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_BUFFER</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoBuffer2(SdoGeometryRecord geom, Number dist, Number tol) {
		SdoBuffer2 f = new SdoBuffer2();
		f.setGeom(geom);
		f.setDist(dist);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_BUFFER</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoBuffer2(Field<SdoGeometryRecord> geom, Field<? extends Number> dist, Field<? extends Number> tol) {
		SdoBuffer2 f = new SdoBuffer2();
		f.setGeom(geom);
		f.setDist(dist);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_BUFFER</code>
	 */
	public static SdoGeometryRecord sdoBuffer3(Configuration configuration, SdoGeometryRecord geom, Object dim, Number dist, String params) {
		SdoBuffer3 f = new SdoBuffer3();
		f.setGeom(geom);
		f.setDim(dim);
		f.setDist(dist);
		f.setParams(params);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_BUFFER</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoBuffer3(SdoGeometryRecord geom, Object dim, Number dist, String params) {
		SdoBuffer3 f = new SdoBuffer3();
		f.setGeom(geom);
		f.setDim(dim);
		f.setDist(dist);
		f.setParams(params);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_BUFFER</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoBuffer3(Field<SdoGeometryRecord> geom, Field<Object> dim, Field<? extends Number> dist, Field<String> params) {
		SdoBuffer3 f = new SdoBuffer3();
		f.setGeom(geom);
		f.setDim(dim);
		f.setDist(dist);
		f.setParams(params);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_BUFFER</code>
	 */
	public static SdoGeometryRecord sdoBuffer4(Configuration configuration, SdoGeometryRecord geom, Number dist, Number tol, String params) {
		SdoBuffer4 f = new SdoBuffer4();
		f.setGeom(geom);
		f.setDist(dist);
		f.setTol(tol);
		f.setParams(params);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_BUFFER</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoBuffer4(SdoGeometryRecord geom, Number dist, Number tol, String params) {
		SdoBuffer4 f = new SdoBuffer4();
		f.setGeom(geom);
		f.setDist(dist);
		f.setTol(tol);
		f.setParams(params);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_BUFFER</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoBuffer4(Field<SdoGeometryRecord> geom, Field<? extends Number> dist, Field<? extends Number> tol, Field<String> params) {
		SdoBuffer4 f = new SdoBuffer4();
		f.setGeom(geom);
		f.setDist(dist);
		f.setTol(tol);
		f.setParams(params);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_CENTROID</code>
	 */
	public static SdoGeometryRecord sdoCentroid1(Configuration configuration, SdoGeometryRecord geom1, Object dim1) {
		SdoCentroid1 f = new SdoCentroid1();
		f.setGeom1(geom1);
		f.setDim1(dim1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_CENTROID</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoCentroid1(SdoGeometryRecord geom1, Object dim1) {
		SdoCentroid1 f = new SdoCentroid1();
		f.setGeom1(geom1);
		f.setDim1(dim1);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_CENTROID</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoCentroid1(Field<SdoGeometryRecord> geom1, Field<Object> dim1) {
		SdoCentroid1 f = new SdoCentroid1();
		f.setGeom1(geom1);
		f.setDim1(dim1);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_CENTROID</code>
	 */
	public static SdoGeometryRecord sdoCentroid2(Configuration configuration, SdoGeometryRecord geom1, Number tol) {
		SdoCentroid2 f = new SdoCentroid2();
		f.setGeom1(geom1);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_CENTROID</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoCentroid2(SdoGeometryRecord geom1, Number tol) {
		SdoCentroid2 f = new SdoCentroid2();
		f.setGeom1(geom1);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_CENTROID</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoCentroid2(Field<SdoGeometryRecord> geom1, Field<? extends Number> tol) {
		SdoCentroid2 f = new SdoCentroid2();
		f.setGeom1(geom1);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_CLOSEST_POINTS</code>
	 */
	public static SdoClosestPoints sdoClosestPoints(Configuration configuration, SdoGeometryRecord geom1, SdoGeometryRecord geom2, Number tolerance, String unit) {
		SdoClosestPoints p = new SdoClosestPoints();
		p.setGeom1(geom1);
		p.setGeom2(geom2);
		p.setTolerance(tolerance);
		p.setUnit(unit);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_CONCAVEHULL</code>
	 */
	public static BigDecimal sdoConcavehull1(Configuration configuration, SdoGeometryRecord geom, Number tol) {
		SdoConcavehull1 p = new SdoConcavehull1();
		p.setGeom(geom);
		p.setTol(tol);

		p.execute(configuration);
		return p.getRadius();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_CONCAVEHULL</code>
	 */
	public static SdoGeometryRecord sdoConcavehull2(Configuration configuration, SdoGeometryRecord geom, Number tol) {
		SdoConcavehull2 f = new SdoConcavehull2();
		f.setGeom(geom);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_CONCAVEHULL</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoConcavehull2(SdoGeometryRecord geom, Number tol) {
		SdoConcavehull2 f = new SdoConcavehull2();
		f.setGeom(geom);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_CONCAVEHULL</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoConcavehull2(Field<SdoGeometryRecord> geom, Field<? extends Number> tol) {
		SdoConcavehull2 f = new SdoConcavehull2();
		f.setGeom(geom);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_CONCAVEHULL_BOUNDARY</code>
	 */
	public static SdoGeometryRecord sdoConcavehullBoundary(Configuration configuration, SdoGeometryRecord geom, Number tol, Number length) {
		SdoConcavehullBoundary f = new SdoConcavehullBoundary();
		f.setGeom(geom);
		f.setTol(tol);
		f.setLength(length);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_CONCAVEHULL_BOUNDARY</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoConcavehullBoundary(SdoGeometryRecord geom, Number tol, Number length) {
		SdoConcavehullBoundary f = new SdoConcavehullBoundary();
		f.setGeom(geom);
		f.setTol(tol);
		f.setLength(length);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_CONCAVEHULL_BOUNDARY</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoConcavehullBoundary(Field<SdoGeometryRecord> geom, Field<? extends Number> tol, Field<? extends Number> length) {
		SdoConcavehullBoundary f = new SdoConcavehullBoundary();
		f.setGeom(geom);
		f.setTol(tol);
		f.setLength(length);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_CONVEXHULL</code>
	 */
	public static SdoGeometryRecord sdoConvexhull1(Configuration configuration, SdoGeometryRecord geom1, Object dim1) {
		SdoConvexhull1 f = new SdoConvexhull1();
		f.setGeom1(geom1);
		f.setDim1(dim1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_CONVEXHULL</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoConvexhull1(SdoGeometryRecord geom1, Object dim1) {
		SdoConvexhull1 f = new SdoConvexhull1();
		f.setGeom1(geom1);
		f.setDim1(dim1);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_CONVEXHULL</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoConvexhull1(Field<SdoGeometryRecord> geom1, Field<Object> dim1) {
		SdoConvexhull1 f = new SdoConvexhull1();
		f.setGeom1(geom1);
		f.setDim1(dim1);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_CONVEXHULL</code>
	 */
	public static SdoGeometryRecord sdoConvexhull2(Configuration configuration, SdoGeometryRecord geom1, Number tol) {
		SdoConvexhull2 f = new SdoConvexhull2();
		f.setGeom1(geom1);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_CONVEXHULL</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoConvexhull2(SdoGeometryRecord geom1, Number tol) {
		SdoConvexhull2 f = new SdoConvexhull2();
		f.setGeom1(geom1);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_CONVEXHULL</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoConvexhull2(Field<SdoGeometryRecord> geom1, Field<? extends Number> tol) {
		SdoConvexhull2 f = new SdoConvexhull2();
		f.setGeom1(geom1);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_DIFFERENCE</code>
	 */
	public static SdoGeometryRecord sdoDifference1(Configuration configuration, SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoDifference1 f = new SdoDifference1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_DIFFERENCE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoDifference1(SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoDifference1 f = new SdoDifference1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_DIFFERENCE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoDifference1(Field<SdoGeometryRecord> geom1, Field<Object> dim1, Field<SdoGeometryRecord> geom2, Field<Object> dim2) {
		SdoDifference1 f = new SdoDifference1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_DIFFERENCE</code>
	 */
	public static SdoGeometryRecord sdoDifference2(Configuration configuration, SdoGeometryRecord geom1, SdoGeometryRecord geom2, Number tol) {
		SdoDifference2 f = new SdoDifference2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_DIFFERENCE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoDifference2(SdoGeometryRecord geom1, SdoGeometryRecord geom2, Number tol) {
		SdoDifference2 f = new SdoDifference2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_DIFFERENCE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoDifference2(Field<SdoGeometryRecord> geom1, Field<SdoGeometryRecord> geom2, Field<? extends Number> tol) {
		SdoDifference2 f = new SdoDifference2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_DISTANCE</code>
	 */
	public static BigDecimal sdoDistance1(Configuration configuration, SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoDistance1 f = new SdoDistance1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_DISTANCE</code> as a field
	 */
	public static Field<BigDecimal> sdoDistance1(SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoDistance1 f = new SdoDistance1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_DISTANCE</code> as a field
	 */
	public static Field<BigDecimal> sdoDistance1(Field<SdoGeometryRecord> geom1, Field<Object> dim1, Field<SdoGeometryRecord> geom2, Field<Object> dim2) {
		SdoDistance1 f = new SdoDistance1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_DISTANCE</code>
	 */
	public static BigDecimal sdoDistance2(Configuration configuration, SdoGeometryRecord geom1, SdoGeometryRecord geom2, Number tol) {
		SdoDistance2 f = new SdoDistance2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_DISTANCE</code> as a field
	 */
	public static Field<BigDecimal> sdoDistance2(SdoGeometryRecord geom1, SdoGeometryRecord geom2, Number tol) {
		SdoDistance2 f = new SdoDistance2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_DISTANCE</code> as a field
	 */
	public static Field<BigDecimal> sdoDistance2(Field<SdoGeometryRecord> geom1, Field<SdoGeometryRecord> geom2, Field<? extends Number> tol) {
		SdoDistance2 f = new SdoDistance2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_DISTANCE</code>
	 */
	public static BigDecimal sdoDistance3(Configuration configuration, SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2, String unit) {
		SdoDistance3 f = new SdoDistance3();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);
		f.setUnit(unit);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_DISTANCE</code> as a field
	 */
	public static Field<BigDecimal> sdoDistance3(SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2, String unit) {
		SdoDistance3 f = new SdoDistance3();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);
		f.setUnit(unit);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_DISTANCE</code> as a field
	 */
	public static Field<BigDecimal> sdoDistance3(Field<SdoGeometryRecord> geom1, Field<Object> dim1, Field<SdoGeometryRecord> geom2, Field<Object> dim2, Field<String> unit) {
		SdoDistance3 f = new SdoDistance3();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);
		f.setUnit(unit);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_DISTANCE</code>
	 */
	public static BigDecimal sdoDistance4(Configuration configuration, SdoGeometryRecord geom1, SdoGeometryRecord geom2, Number tol, String unit) {
		SdoDistance4 f = new SdoDistance4();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);
		f.setUnit(unit);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_DISTANCE</code> as a field
	 */
	public static Field<BigDecimal> sdoDistance4(SdoGeometryRecord geom1, SdoGeometryRecord geom2, Number tol, String unit) {
		SdoDistance4 f = new SdoDistance4();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);
		f.setUnit(unit);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_DISTANCE</code> as a field
	 */
	public static Field<BigDecimal> sdoDistance4(Field<SdoGeometryRecord> geom1, Field<SdoGeometryRecord> geom2, Field<? extends Number> tol, Field<String> unit) {
		SdoDistance4 f = new SdoDistance4();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);
		f.setUnit(unit);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_G3DCONV</code>
	 */
	public static SdoGeometryRecord sdoG3dconv1(Configuration configuration, SdoGeometryRecord geom, Object dim) {
		SdoG3dconv1 f = new SdoG3dconv1();
		f.setGeom(geom);
		f.setDim(dim);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_G3DCONV</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoG3dconv1(SdoGeometryRecord geom, Object dim) {
		SdoG3dconv1 f = new SdoG3dconv1();
		f.setGeom(geom);
		f.setDim(dim);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_G3DCONV</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoG3dconv1(Field<SdoGeometryRecord> geom, Field<Object> dim) {
		SdoG3dconv1 f = new SdoG3dconv1();
		f.setGeom(geom);
		f.setDim(dim);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_G3DCONV</code>
	 */
	public static SdoGeometryRecord sdoG3dconv2(Configuration configuration, SdoGeometryRecord geom) {
		SdoG3dconv2 f = new SdoG3dconv2();
		f.setGeom(geom);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_G3DCONV</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoG3dconv2(SdoGeometryRecord geom) {
		SdoG3dconv2 f = new SdoG3dconv2();
		f.setGeom(geom);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_G3DCONV</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoG3dconv2(Field<SdoGeometryRecord> geom) {
		SdoG3dconv2 f = new SdoG3dconv2();
		f.setGeom(geom);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_INSERT_LOG_FILTER</code>
	 */
	public static String sdoInsertLogFilter(Configuration configuration, String indSchema, String indName, String indpartName, Number minX, Number maxX, Number minY, Number maxY, Number minZ, Number maxZ) {
		SdoInsertLogFilter f = new SdoInsertLogFilter();
		f.setIndSchema(indSchema);
		f.setIndName(indName);
		f.setIndpartName(indpartName);
		f.setMinX(minX);
		f.setMaxX(maxX);
		f.setMinY(minY);
		f.setMaxY(maxY);
		f.setMinZ(minZ);
		f.setMaxZ(maxZ);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_INSERT_LOG_FILTER</code> as a field
	 */
	public static Field<String> sdoInsertLogFilter(String indSchema, String indName, String indpartName, Number minX, Number maxX, Number minY, Number maxY, Number minZ, Number maxZ) {
		SdoInsertLogFilter f = new SdoInsertLogFilter();
		f.setIndSchema(indSchema);
		f.setIndName(indName);
		f.setIndpartName(indpartName);
		f.setMinX(minX);
		f.setMaxX(maxX);
		f.setMinY(minY);
		f.setMaxY(maxY);
		f.setMinZ(minZ);
		f.setMaxZ(maxZ);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_INSERT_LOG_FILTER</code> as a field
	 */
	public static Field<String> sdoInsertLogFilter(Field<String> indSchema, Field<String> indName, Field<String> indpartName, Field<? extends Number> minX, Field<? extends Number> maxX, Field<? extends Number> minY, Field<? extends Number> maxY, Field<? extends Number> minZ, Field<? extends Number> maxZ) {
		SdoInsertLogFilter f = new SdoInsertLogFilter();
		f.setIndSchema(indSchema);
		f.setIndName(indName);
		f.setIndpartName(indpartName);
		f.setMinX(minX);
		f.setMaxX(maxX);
		f.setMinY(minY);
		f.setMaxY(maxY);
		f.setMinZ(minZ);
		f.setMaxZ(maxZ);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_INTERSECTION</code>
	 */
	public static SdoGeometryRecord sdoIntersection1(Configuration configuration, SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoIntersection1 f = new SdoIntersection1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_INTERSECTION</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoIntersection1(SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoIntersection1 f = new SdoIntersection1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_INTERSECTION</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoIntersection1(Field<SdoGeometryRecord> geom1, Field<Object> dim1, Field<SdoGeometryRecord> geom2, Field<Object> dim2) {
		SdoIntersection1 f = new SdoIntersection1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_INTERSECTION</code>
	 */
	public static SdoGeometryRecord sdoIntersection2(Configuration configuration, SdoGeometryRecord geom1, SdoGeometryRecord geom2, Number tol) {
		SdoIntersection2 f = new SdoIntersection2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_INTERSECTION</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoIntersection2(SdoGeometryRecord geom1, SdoGeometryRecord geom2, Number tol) {
		SdoIntersection2 f = new SdoIntersection2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_INTERSECTION</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoIntersection2(Field<SdoGeometryRecord> geom1, Field<SdoGeometryRecord> geom2, Field<? extends Number> tol) {
		SdoIntersection2 f = new SdoIntersection2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_LENGTH</code>
	 */
	public static BigDecimal sdoLength1(Configuration configuration, SdoGeometryRecord geom, Object dim, Number countSharedEdges) {
		SdoLength1 f = new SdoLength1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setCountSharedEdges(countSharedEdges);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_LENGTH</code> as a field
	 */
	public static Field<BigDecimal> sdoLength1(SdoGeometryRecord geom, Object dim, Number countSharedEdges) {
		SdoLength1 f = new SdoLength1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setCountSharedEdges(countSharedEdges);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_LENGTH</code> as a field
	 */
	public static Field<BigDecimal> sdoLength1(Field<SdoGeometryRecord> geom, Field<Object> dim, Field<? extends Number> countSharedEdges) {
		SdoLength1 f = new SdoLength1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setCountSharedEdges(countSharedEdges);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_LENGTH</code>
	 */
	public static BigDecimal sdoLength2(Configuration configuration, SdoGeometryRecord geom, Number tol, Number countSharedEdges) {
		SdoLength2 f = new SdoLength2();
		f.setGeom(geom);
		f.setTol(tol);
		f.setCountSharedEdges(countSharedEdges);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_LENGTH</code> as a field
	 */
	public static Field<BigDecimal> sdoLength2(SdoGeometryRecord geom, Number tol, Number countSharedEdges) {
		SdoLength2 f = new SdoLength2();
		f.setGeom(geom);
		f.setTol(tol);
		f.setCountSharedEdges(countSharedEdges);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_LENGTH</code> as a field
	 */
	public static Field<BigDecimal> sdoLength2(Field<SdoGeometryRecord> geom, Field<? extends Number> tol, Field<? extends Number> countSharedEdges) {
		SdoLength2 f = new SdoLength2();
		f.setGeom(geom);
		f.setTol(tol);
		f.setCountSharedEdges(countSharedEdges);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_LENGTH</code>
	 */
	public static BigDecimal sdoLength3(Configuration configuration, SdoGeometryRecord geom, Object dim, String unit, Number countSharedEdges) {
		SdoLength3 f = new SdoLength3();
		f.setGeom(geom);
		f.setDim(dim);
		f.setUnit(unit);
		f.setCountSharedEdges(countSharedEdges);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_LENGTH</code> as a field
	 */
	public static Field<BigDecimal> sdoLength3(SdoGeometryRecord geom, Object dim, String unit, Number countSharedEdges) {
		SdoLength3 f = new SdoLength3();
		f.setGeom(geom);
		f.setDim(dim);
		f.setUnit(unit);
		f.setCountSharedEdges(countSharedEdges);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_LENGTH</code> as a field
	 */
	public static Field<BigDecimal> sdoLength3(Field<SdoGeometryRecord> geom, Field<Object> dim, Field<String> unit, Field<? extends Number> countSharedEdges) {
		SdoLength3 f = new SdoLength3();
		f.setGeom(geom);
		f.setDim(dim);
		f.setUnit(unit);
		f.setCountSharedEdges(countSharedEdges);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_LENGTH</code>
	 */
	public static BigDecimal sdoLength4(Configuration configuration, SdoGeometryRecord geom, Number tol, String unit, Number countSharedEdges) {
		SdoLength4 f = new SdoLength4();
		f.setGeom(geom);
		f.setTol(tol);
		f.setUnit(unit);
		f.setCountSharedEdges(countSharedEdges);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_LENGTH</code> as a field
	 */
	public static Field<BigDecimal> sdoLength4(SdoGeometryRecord geom, Number tol, String unit, Number countSharedEdges) {
		SdoLength4 f = new SdoLength4();
		f.setGeom(geom);
		f.setTol(tol);
		f.setUnit(unit);
		f.setCountSharedEdges(countSharedEdges);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_LENGTH</code> as a field
	 */
	public static Field<BigDecimal> sdoLength4(Field<SdoGeometryRecord> geom, Field<? extends Number> tol, Field<String> unit, Field<? extends Number> countSharedEdges) {
		SdoLength4 f = new SdoLength4();
		f.setGeom(geom);
		f.setTol(tol);
		f.setUnit(unit);
		f.setCountSharedEdges(countSharedEdges);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_MAX_MBR_ORDINATE</code>
	 */
	public static BigDecimal sdoMaxMbrOrdinate1(Configuration configuration, SdoGeometryRecord geom, Object dim, Number ordinatePos) {
		SdoMaxMbrOrdinate1 f = new SdoMaxMbrOrdinate1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setOrdinatePos(ordinatePos);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_MAX_MBR_ORDINATE</code> as a field
	 */
	public static Field<BigDecimal> sdoMaxMbrOrdinate1(SdoGeometryRecord geom, Object dim, Number ordinatePos) {
		SdoMaxMbrOrdinate1 f = new SdoMaxMbrOrdinate1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setOrdinatePos(ordinatePos);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_MAX_MBR_ORDINATE</code> as a field
	 */
	public static Field<BigDecimal> sdoMaxMbrOrdinate1(Field<SdoGeometryRecord> geom, Field<Object> dim, Field<? extends Number> ordinatePos) {
		SdoMaxMbrOrdinate1 f = new SdoMaxMbrOrdinate1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setOrdinatePos(ordinatePos);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_MAX_MBR_ORDINATE</code>
	 */
	public static BigDecimal sdoMaxMbrOrdinate2(Configuration configuration, SdoGeometryRecord geom, Number ordinatePos) {
		SdoMaxMbrOrdinate2 f = new SdoMaxMbrOrdinate2();
		f.setGeom(geom);
		f.setOrdinatePos(ordinatePos);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_MAX_MBR_ORDINATE</code> as a field
	 */
	public static Field<BigDecimal> sdoMaxMbrOrdinate2(SdoGeometryRecord geom, Number ordinatePos) {
		SdoMaxMbrOrdinate2 f = new SdoMaxMbrOrdinate2();
		f.setGeom(geom);
		f.setOrdinatePos(ordinatePos);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_MAX_MBR_ORDINATE</code> as a field
	 */
	public static Field<BigDecimal> sdoMaxMbrOrdinate2(Field<SdoGeometryRecord> geom, Field<? extends Number> ordinatePos) {
		SdoMaxMbrOrdinate2 f = new SdoMaxMbrOrdinate2();
		f.setGeom(geom);
		f.setOrdinatePos(ordinatePos);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_MBR</code>
	 */
	public static SdoGeometryRecord sdoMbr1(Configuration configuration, SdoGeometryRecord geom, Object dim) {
		SdoMbr1 f = new SdoMbr1();
		f.setGeom(geom);
		f.setDim(dim);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_MBR</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoMbr1(SdoGeometryRecord geom, Object dim) {
		SdoMbr1 f = new SdoMbr1();
		f.setGeom(geom);
		f.setDim(dim);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_MBR</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoMbr1(Field<SdoGeometryRecord> geom, Field<Object> dim) {
		SdoMbr1 f = new SdoMbr1();
		f.setGeom(geom);
		f.setDim(dim);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_MBR</code>
	 */
	public static SdoGeometryRecord sdoMbr2(Configuration configuration, SdoGeometryRecord geom) {
		SdoMbr2 f = new SdoMbr2();
		f.setGeom(geom);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_MBR</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoMbr2(SdoGeometryRecord geom) {
		SdoMbr2 f = new SdoMbr2();
		f.setGeom(geom);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_MBR</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoMbr2(Field<SdoGeometryRecord> geom) {
		SdoMbr2 f = new SdoMbr2();
		f.setGeom(geom);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_MIN_MBR_ORDINATE</code>
	 */
	public static BigDecimal sdoMinMbrOrdinate1(Configuration configuration, SdoGeometryRecord geom, Object dim, Number ordinatePos) {
		SdoMinMbrOrdinate1 f = new SdoMinMbrOrdinate1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setOrdinatePos(ordinatePos);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_MIN_MBR_ORDINATE</code> as a field
	 */
	public static Field<BigDecimal> sdoMinMbrOrdinate1(SdoGeometryRecord geom, Object dim, Number ordinatePos) {
		SdoMinMbrOrdinate1 f = new SdoMinMbrOrdinate1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setOrdinatePos(ordinatePos);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_MIN_MBR_ORDINATE</code> as a field
	 */
	public static Field<BigDecimal> sdoMinMbrOrdinate1(Field<SdoGeometryRecord> geom, Field<Object> dim, Field<? extends Number> ordinatePos) {
		SdoMinMbrOrdinate1 f = new SdoMinMbrOrdinate1();
		f.setGeom(geom);
		f.setDim(dim);
		f.setOrdinatePos(ordinatePos);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_MIN_MBR_ORDINATE</code>
	 */
	public static BigDecimal sdoMinMbrOrdinate2(Configuration configuration, SdoGeometryRecord geom, Number ordinatePos) {
		SdoMinMbrOrdinate2 f = new SdoMinMbrOrdinate2();
		f.setGeom(geom);
		f.setOrdinatePos(ordinatePos);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_MIN_MBR_ORDINATE</code> as a field
	 */
	public static Field<BigDecimal> sdoMinMbrOrdinate2(SdoGeometryRecord geom, Number ordinatePos) {
		SdoMinMbrOrdinate2 f = new SdoMinMbrOrdinate2();
		f.setGeom(geom);
		f.setOrdinatePos(ordinatePos);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_MIN_MBR_ORDINATE</code> as a field
	 */
	public static Field<BigDecimal> sdoMinMbrOrdinate2(Field<SdoGeometryRecord> geom, Field<? extends Number> ordinatePos) {
		SdoMinMbrOrdinate2 f = new SdoMinMbrOrdinate2();
		f.setGeom(geom);
		f.setOrdinatePos(ordinatePos);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_POINTONSURFACE</code>
	 */
	public static SdoGeometryRecord sdoPointonsurface1(Configuration configuration, SdoGeometryRecord geom1, Object dim1) {
		SdoPointonsurface1 f = new SdoPointonsurface1();
		f.setGeom1(geom1);
		f.setDim1(dim1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_POINTONSURFACE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoPointonsurface1(SdoGeometryRecord geom1, Object dim1) {
		SdoPointonsurface1 f = new SdoPointonsurface1();
		f.setGeom1(geom1);
		f.setDim1(dim1);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_POINTONSURFACE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoPointonsurface1(Field<SdoGeometryRecord> geom1, Field<Object> dim1) {
		SdoPointonsurface1 f = new SdoPointonsurface1();
		f.setGeom1(geom1);
		f.setDim1(dim1);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_POINTONSURFACE</code>
	 */
	public static SdoGeometryRecord sdoPointonsurface2(Configuration configuration, SdoGeometryRecord geom1, Number tol) {
		SdoPointonsurface2 f = new SdoPointonsurface2();
		f.setGeom1(geom1);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_POINTONSURFACE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoPointonsurface2(SdoGeometryRecord geom1, Number tol) {
		SdoPointonsurface2 f = new SdoPointonsurface2();
		f.setGeom1(geom1);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_POINTONSURFACE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoPointonsurface2(Field<SdoGeometryRecord> geom1, Field<? extends Number> tol) {
		SdoPointonsurface2 f = new SdoPointonsurface2();
		f.setGeom1(geom1);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_POLY_DIFFERENCE</code>
	 */
	public static SdoGeometryRecord sdoPolyDifference(Configuration configuration, SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoPolyDifference f = new SdoPolyDifference();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_POLY_DIFFERENCE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoPolyDifference(SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoPolyDifference f = new SdoPolyDifference();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_POLY_DIFFERENCE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoPolyDifference(Field<SdoGeometryRecord> geom1, Field<Object> dim1, Field<SdoGeometryRecord> geom2, Field<Object> dim2) {
		SdoPolyDifference f = new SdoPolyDifference();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_POLY_INTERSECTION</code>
	 */
	public static SdoGeometryRecord sdoPolyIntersection(Configuration configuration, SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoPolyIntersection f = new SdoPolyIntersection();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_POLY_INTERSECTION</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoPolyIntersection(SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoPolyIntersection f = new SdoPolyIntersection();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_POLY_INTERSECTION</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoPolyIntersection(Field<SdoGeometryRecord> geom1, Field<Object> dim1, Field<SdoGeometryRecord> geom2, Field<Object> dim2) {
		SdoPolyIntersection f = new SdoPolyIntersection();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_POLY_UNION</code>
	 */
	public static SdoGeometryRecord sdoPolyUnion(Configuration configuration, SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoPolyUnion f = new SdoPolyUnion();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_POLY_UNION</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoPolyUnion(SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoPolyUnion f = new SdoPolyUnion();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_POLY_UNION</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoPolyUnion(Field<SdoGeometryRecord> geom1, Field<Object> dim1, Field<SdoGeometryRecord> geom2, Field<Object> dim2) {
		SdoPolyUnion f = new SdoPolyUnion();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_POLY_XOR</code>
	 */
	public static SdoGeometryRecord sdoPolyXor(Configuration configuration, SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoPolyXor f = new SdoPolyXor();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_POLY_XOR</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoPolyXor(SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoPolyXor f = new SdoPolyXor();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_POLY_XOR</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoPolyXor(Field<SdoGeometryRecord> geom1, Field<Object> dim1, Field<SdoGeometryRecord> geom2, Field<Object> dim2) {
		SdoPolyXor f = new SdoPolyXor();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_TRIANGULATE</code>
	 */
	public static SdoGeometryRecord sdoTriangulate(Configuration configuration, SdoGeometryRecord geom, Number tol) {
		SdoTriangulate f = new SdoTriangulate();
		f.setGeom(geom);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_TRIANGULATE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoTriangulate(SdoGeometryRecord geom, Number tol) {
		SdoTriangulate f = new SdoTriangulate();
		f.setGeom(geom);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_TRIANGULATE</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoTriangulate(Field<SdoGeometryRecord> geom, Field<? extends Number> tol) {
		SdoTriangulate f = new SdoTriangulate();
		f.setGeom(geom);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_UNION</code>
	 */
	public static SdoGeometryRecord sdoUnion1(Configuration configuration, SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoUnion1 f = new SdoUnion1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_UNION</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoUnion1(SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoUnion1 f = new SdoUnion1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_UNION</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoUnion1(Field<SdoGeometryRecord> geom1, Field<Object> dim1, Field<SdoGeometryRecord> geom2, Field<Object> dim2) {
		SdoUnion1 f = new SdoUnion1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_UNION</code>
	 */
	public static SdoGeometryRecord sdoUnion2(Configuration configuration, SdoGeometryRecord geom1, SdoGeometryRecord geom2, Number tol) {
		SdoUnion2 f = new SdoUnion2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_UNION</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoUnion2(SdoGeometryRecord geom1, SdoGeometryRecord geom2, Number tol) {
		SdoUnion2 f = new SdoUnion2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_UNION</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoUnion2(Field<SdoGeometryRecord> geom1, Field<SdoGeometryRecord> geom2, Field<? extends Number> tol) {
		SdoUnion2 f = new SdoUnion2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_VOLUME</code>
	 */
	public static BigDecimal sdoVolume(Configuration configuration, SdoGeometryRecord geom, Number tol, String unit) {
		SdoVolume f = new SdoVolume();
		f.setGeom(geom);
		f.setTol(tol);
		f.setUnit(unit);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_VOLUME</code> as a field
	 */
	public static Field<BigDecimal> sdoVolume(SdoGeometryRecord geom, Number tol, String unit) {
		SdoVolume f = new SdoVolume();
		f.setGeom(geom);
		f.setTol(tol);
		f.setUnit(unit);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_VOLUME</code> as a field
	 */
	public static Field<BigDecimal> sdoVolume(Field<SdoGeometryRecord> geom, Field<? extends Number> tol, Field<String> unit) {
		SdoVolume f = new SdoVolume();
		f.setGeom(geom);
		f.setTol(tol);
		f.setUnit(unit);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_XOR</code>
	 */
	public static SdoGeometryRecord sdoXor1(Configuration configuration, SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoXor1 f = new SdoXor1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_XOR</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoXor1(SdoGeometryRecord geom1, Object dim1, SdoGeometryRecord geom2, Object dim2) {
		SdoXor1 f = new SdoXor1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_XOR</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoXor1(Field<SdoGeometryRecord> geom1, Field<Object> dim1, Field<SdoGeometryRecord> geom2, Field<Object> dim2) {
		SdoXor1 f = new SdoXor1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setGeom2(geom2);
		f.setDim2(dim2);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.SDO_XOR</code>
	 */
	public static SdoGeometryRecord sdoXor2(Configuration configuration, SdoGeometryRecord geom1, SdoGeometryRecord geom2, Number tol) {
		SdoXor2 f = new SdoXor2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_XOR</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoXor2(SdoGeometryRecord geom1, SdoGeometryRecord geom2, Number tol) {
		SdoXor2 f = new SdoXor2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.SDO_XOR</code> as a field
	 */
	public static Field<SdoGeometryRecord> sdoXor2(Field<SdoGeometryRecord> geom1, Field<SdoGeometryRecord> geom2, Field<? extends Number> tol) {
		SdoXor2 f = new SdoXor2();
		f.setGeom1(geom1);
		f.setGeom2(geom2);
		f.setTol(tol);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY</code>
	 */
	public static String validateGeometry1(Configuration configuration, String layer, Number gid) {
		ValidateGeometry1 f = new ValidateGeometry1();
		f.setLayer(layer);
		f.setGid(gid);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY</code> as a field
	 */
	public static Field<String> validateGeometry1(String layer, Number gid) {
		ValidateGeometry1 f = new ValidateGeometry1();
		f.setLayer(layer);
		f.setGid(gid);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY</code> as a field
	 */
	public static Field<String> validateGeometry1(Field<String> layer, Field<? extends Number> gid) {
		ValidateGeometry1 f = new ValidateGeometry1();
		f.setLayer(layer);
		f.setGid(gid);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY</code>
	 */
	public static String validateGeometry2(Configuration configuration, SdoGeometryRecord thegeometry, Object thediminfo) {
		ValidateGeometry2 f = new ValidateGeometry2();
		f.setThegeometry(thegeometry);
		f.setThediminfo(thediminfo);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY</code> as a field
	 */
	public static Field<String> validateGeometry2(SdoGeometryRecord thegeometry, Object thediminfo) {
		ValidateGeometry2 f = new ValidateGeometry2();
		f.setThegeometry(thegeometry);
		f.setThediminfo(thediminfo);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY</code> as a field
	 */
	public static Field<String> validateGeometry2(Field<SdoGeometryRecord> thegeometry, Field<Object> thediminfo) {
		ValidateGeometry2 f = new ValidateGeometry2();
		f.setThegeometry(thegeometry);
		f.setThediminfo(thediminfo);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY</code>
	 */
	public static String validateGeometry3(Configuration configuration, SdoGeometryRecord thegeometry, Number tolerance) {
		ValidateGeometry3 f = new ValidateGeometry3();
		f.setThegeometry(thegeometry);
		f.setTolerance(tolerance);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY</code> as a field
	 */
	public static Field<String> validateGeometry3(SdoGeometryRecord thegeometry, Number tolerance) {
		ValidateGeometry3 f = new ValidateGeometry3();
		f.setThegeometry(thegeometry);
		f.setTolerance(tolerance);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY</code> as a field
	 */
	public static Field<String> validateGeometry3(Field<SdoGeometryRecord> thegeometry, Field<? extends Number> tolerance) {
		ValidateGeometry3 f = new ValidateGeometry3();
		f.setThegeometry(thegeometry);
		f.setTolerance(tolerance);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT</code>
	 */
	public static String validateGeometryWithContext1(Configuration configuration, SdoGeometryRecord thegeometry, Object thediminfo, String conditional, String flag10g) {
		ValidateGeometryWithContext1 f = new ValidateGeometryWithContext1();
		f.setThegeometry(thegeometry);
		f.setThediminfo(thediminfo);
		f.setConditional(conditional);
		f.setFlag10g(flag10g);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT</code> as a field
	 */
	public static Field<String> validateGeometryWithContext1(SdoGeometryRecord thegeometry, Object thediminfo, String conditional, String flag10g) {
		ValidateGeometryWithContext1 f = new ValidateGeometryWithContext1();
		f.setThegeometry(thegeometry);
		f.setThediminfo(thediminfo);
		f.setConditional(conditional);
		f.setFlag10g(flag10g);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT</code> as a field
	 */
	public static Field<String> validateGeometryWithContext1(Field<SdoGeometryRecord> thegeometry, Field<Object> thediminfo, Field<String> conditional, Field<String> flag10g) {
		ValidateGeometryWithContext1 f = new ValidateGeometryWithContext1();
		f.setThegeometry(thegeometry);
		f.setThediminfo(thediminfo);
		f.setConditional(conditional);
		f.setFlag10g(flag10g);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT</code>
	 */
	public static String validateGeometryWithContext2(Configuration configuration, SdoGeometryRecord thegeometry, Number tolerance, String conditional, String flag10g) {
		ValidateGeometryWithContext2 f = new ValidateGeometryWithContext2();
		f.setThegeometry(thegeometry);
		f.setTolerance(tolerance);
		f.setConditional(conditional);
		f.setFlag10g(flag10g);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT</code> as a field
	 */
	public static Field<String> validateGeometryWithContext2(SdoGeometryRecord thegeometry, Number tolerance, String conditional, String flag10g) {
		ValidateGeometryWithContext2 f = new ValidateGeometryWithContext2();
		f.setThegeometry(thegeometry);
		f.setTolerance(tolerance);
		f.setConditional(conditional);
		f.setFlag10g(flag10g);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.VALIDATE_GEOMETRY_WITH_CONTEXT</code> as a field
	 */
	public static Field<String> validateGeometryWithContext2(Field<SdoGeometryRecord> thegeometry, Field<? extends Number> tolerance, Field<String> conditional, Field<String> flag10g) {
		ValidateGeometryWithContext2 f = new ValidateGeometryWithContext2();
		f.setThegeometry(thegeometry);
		f.setTolerance(tolerance);
		f.setConditional(conditional);
		f.setFlag10g(flag10g);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.VALIDATE_LAYER</code>
	 */
	public static void validateLayer1(Configuration configuration, String layer, String resultTable) {
		ValidateLayer1 p = new ValidateLayer1();
		p.setLayer(layer);
		p.setResultTable(resultTable);

		p.execute(configuration);
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.VALIDATE_LAYER</code>
	 */
	public static void validateLayer2(Configuration configuration, String geomTable, String geomColumn, String pkeyColumn, String resultTable, Number commitInterval) {
		ValidateLayer2 p = new ValidateLayer2();
		p.setGeomTable(geomTable);
		p.setGeomColumn(geomColumn);
		p.setPkeyColumn(pkeyColumn);
		p.setResultTable(resultTable);
		p.setCommitInterval(commitInterval);

		p.execute(configuration);
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.VALIDATE_LAYER_WITH_CONTEXT</code>
	 */
	public static void validateLayerWithContext(Configuration configuration, String geomTable, String geomColumn, String resultTable, Number commitInterval, String conditional, String flag10g) {
		ValidateLayerWithContext p = new ValidateLayerWithContext();
		p.setGeomTable(geomTable);
		p.setGeomColumn(geomColumn);
		p.setResultTable(resultTable);
		p.setCommitInterval(commitInterval);
		p.setConditional(conditional);
		p.setFlag10g(flag10g);

		p.execute(configuration);
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.WITHIN_DISTANCE</code>
	 */
	public static String withinDistance1(Configuration configuration, SdoGeometryRecord geom1, Object dim1, Number dist, SdoGeometryRecord geom2, Object dim2, String units) {
		WithinDistance1 f = new WithinDistance1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setDist(dist);
		f.setGeom2(geom2);
		f.setDim2(dim2);
		f.setUnits(units);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.WITHIN_DISTANCE</code> as a field
	 */
	public static Field<String> withinDistance1(SdoGeometryRecord geom1, Object dim1, Number dist, SdoGeometryRecord geom2, Object dim2, String units) {
		WithinDistance1 f = new WithinDistance1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setDist(dist);
		f.setGeom2(geom2);
		f.setDim2(dim2);
		f.setUnits(units);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.WITHIN_DISTANCE</code> as a field
	 */
	public static Field<String> withinDistance1(Field<SdoGeometryRecord> geom1, Field<Object> dim1, Field<? extends Number> dist, Field<SdoGeometryRecord> geom2, Field<Object> dim2, Field<String> units) {
		WithinDistance1 f = new WithinDistance1();
		f.setGeom1(geom1);
		f.setDim1(dim1);
		f.setDist(dist);
		f.setGeom2(geom2);
		f.setDim2(dim2);
		f.setUnits(units);

		return f.asField();
	}

	/**
	 * Call <code>MDSYS.SDO_GEOM.WITHIN_DISTANCE</code>
	 */
	public static String withinDistance2(Configuration configuration, SdoGeometryRecord geom1, Number dist, SdoGeometryRecord geom2, Number tol, String units) {
		WithinDistance2 f = new WithinDistance2();
		f.setGeom1(geom1);
		f.setDist(dist);
		f.setGeom2(geom2);
		f.setTol(tol);
		f.setUnits(units);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.WITHIN_DISTANCE</code> as a field
	 */
	public static Field<String> withinDistance2(SdoGeometryRecord geom1, Number dist, SdoGeometryRecord geom2, Number tol, String units) {
		WithinDistance2 f = new WithinDistance2();
		f.setGeom1(geom1);
		f.setDist(dist);
		f.setGeom2(geom2);
		f.setTol(tol);
		f.setUnits(units);

		return f.asField();
	}

	/**
	 * Get <code>MDSYS.SDO_GEOM.WITHIN_DISTANCE</code> as a field
	 */
	public static Field<String> withinDistance2(Field<SdoGeometryRecord> geom1, Field<? extends Number> dist, Field<SdoGeometryRecord> geom2, Field<? extends Number> tol, Field<String> units) {
		WithinDistance2 f = new WithinDistance2();
		f.setGeom1(geom1);
		f.setDist(dist);
		f.setGeom2(geom2);
		f.setTol(tol);
		f.setUnits(units);

		return f.asField();
	}

	/**
	 * No further instances allowed
	 */
	private SdoGeom() {
		super("SDO_GEOM", Mdsys.MDSYS);
	}
}
