/**
 * This class is generated by jOOQ
 */
package org.jooq.example.db.oracle.mdsys.packages.sdo_geom;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.example.db.oracle.mdsys.Mdsys;
import org.jooq.example.db.oracle.mdsys.packages.SdoGeom;
import org.jooq.impl.AbstractRoutine;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SdoInsertLogFilter extends AbstractRoutine<String> {

	private static final long serialVersionUID = -761802697;

	/**
	 * The parameter <code>MDSYS.SDO_GEOM.SDO_INSERT_LOG_FILTER.RETURN_VALUE</code>.
	 */
	public static final Parameter<String> RETURN_VALUE = createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.VARCHAR, false);

	/**
	 * The parameter <code>MDSYS.SDO_GEOM.SDO_INSERT_LOG_FILTER.IND_SCHEMA</code>.
	 */
	public static final Parameter<String> IND_SCHEMA = createParameter("IND_SCHEMA", org.jooq.impl.SQLDataType.VARCHAR, false);

	/**
	 * The parameter <code>MDSYS.SDO_GEOM.SDO_INSERT_LOG_FILTER.IND_NAME</code>.
	 */
	public static final Parameter<String> IND_NAME = createParameter("IND_NAME", org.jooq.impl.SQLDataType.VARCHAR, false);

	/**
	 * The parameter <code>MDSYS.SDO_GEOM.SDO_INSERT_LOG_FILTER.INDPART_NAME</code>.
	 */
	public static final Parameter<String> INDPART_NAME = createParameter("INDPART_NAME", org.jooq.impl.SQLDataType.VARCHAR, false);

	/**
	 * The parameter <code>MDSYS.SDO_GEOM.SDO_INSERT_LOG_FILTER.MIN_X</code>.
	 */
	public static final Parameter<BigDecimal> MIN_X = createParameter("MIN_X", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>MDSYS.SDO_GEOM.SDO_INSERT_LOG_FILTER.MAX_X</code>.
	 */
	public static final Parameter<BigDecimal> MAX_X = createParameter("MAX_X", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>MDSYS.SDO_GEOM.SDO_INSERT_LOG_FILTER.MIN_Y</code>.
	 */
	public static final Parameter<BigDecimal> MIN_Y = createParameter("MIN_Y", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>MDSYS.SDO_GEOM.SDO_INSERT_LOG_FILTER.MAX_Y</code>.
	 */
	public static final Parameter<BigDecimal> MAX_Y = createParameter("MAX_Y", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>MDSYS.SDO_GEOM.SDO_INSERT_LOG_FILTER.MIN_Z</code>.
	 */
	public static final Parameter<BigDecimal> MIN_Z = createParameter("MIN_Z", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * The parameter <code>MDSYS.SDO_GEOM.SDO_INSERT_LOG_FILTER.MAX_Z</code>.
	 */
	public static final Parameter<BigDecimal> MAX_Z = createParameter("MAX_Z", org.jooq.impl.SQLDataType.NUMERIC, false);

	/**
	 * Create a new routine call instance
	 */
	public SdoInsertLogFilter() {
		super("SDO_INSERT_LOG_FILTER", Mdsys.MDSYS, SdoGeom.SDO_GEOM, org.jooq.impl.SQLDataType.VARCHAR);

		setReturnParameter(RETURN_VALUE);
		addInParameter(IND_SCHEMA);
		addInParameter(IND_NAME);
		addInParameter(INDPART_NAME);
		addInParameter(MIN_X);
		addInParameter(MAX_X);
		addInParameter(MIN_Y);
		addInParameter(MAX_Y);
		addInParameter(MIN_Z);
		addInParameter(MAX_Z);
	}

	/**
	 * Set the <code>IND_SCHEMA</code> parameter IN value to the routine
	 */
	public void setIndSchema(String value) {
		setValue(IND_SCHEMA, value);
	}

	/**
	 * Set the <code>IND_SCHEMA</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setIndSchema(Field<String> field) {
		setField(IND_SCHEMA, field);
	}

	/**
	 * Set the <code>IND_NAME</code> parameter IN value to the routine
	 */
	public void setIndName(String value) {
		setValue(IND_NAME, value);
	}

	/**
	 * Set the <code>IND_NAME</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setIndName(Field<String> field) {
		setField(IND_NAME, field);
	}

	/**
	 * Set the <code>INDPART_NAME</code> parameter IN value to the routine
	 */
	public void setIndpartName(String value) {
		setValue(INDPART_NAME, value);
	}

	/**
	 * Set the <code>INDPART_NAME</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setIndpartName(Field<String> field) {
		setField(INDPART_NAME, field);
	}

	/**
	 * Set the <code>MIN_X</code> parameter IN value to the routine
	 */
	public void setMinX(Number value) {
		setNumber(MIN_X, value);
	}

	/**
	 * Set the <code>MIN_X</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setMinX(Field<? extends Number> field) {
		setNumber(MIN_X, field);
	}

	/**
	 * Set the <code>MAX_X</code> parameter IN value to the routine
	 */
	public void setMaxX(Number value) {
		setNumber(MAX_X, value);
	}

	/**
	 * Set the <code>MAX_X</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setMaxX(Field<? extends Number> field) {
		setNumber(MAX_X, field);
	}

	/**
	 * Set the <code>MIN_Y</code> parameter IN value to the routine
	 */
	public void setMinY(Number value) {
		setNumber(MIN_Y, value);
	}

	/**
	 * Set the <code>MIN_Y</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setMinY(Field<? extends Number> field) {
		setNumber(MIN_Y, field);
	}

	/**
	 * Set the <code>MAX_Y</code> parameter IN value to the routine
	 */
	public void setMaxY(Number value) {
		setNumber(MAX_Y, value);
	}

	/**
	 * Set the <code>MAX_Y</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setMaxY(Field<? extends Number> field) {
		setNumber(MAX_Y, field);
	}

	/**
	 * Set the <code>MIN_Z</code> parameter IN value to the routine
	 */
	public void setMinZ(Number value) {
		setNumber(MIN_Z, value);
	}

	/**
	 * Set the <code>MIN_Z</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setMinZ(Field<? extends Number> field) {
		setNumber(MIN_Z, field);
	}

	/**
	 * Set the <code>MAX_Z</code> parameter IN value to the routine
	 */
	public void setMaxZ(Number value) {
		setNumber(MAX_Z, value);
	}

	/**
	 * Set the <code>MAX_Z</code> parameter to the function to be used with a {@link org.jooq.Select} statement
	 */
	public void setMaxZ(Field<? extends Number> field) {
		setNumber(MAX_Z, field);
	}
}
