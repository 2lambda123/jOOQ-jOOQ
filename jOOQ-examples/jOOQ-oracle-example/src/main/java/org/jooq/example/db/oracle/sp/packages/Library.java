/**
 * This class is generated by jOOQ
 */
package org.jooq.example.db.oracle.sp.packages;


import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.example.db.oracle.sp.Sp;
import org.jooq.example.db.oracle.sp.packages.library.GetAuthors;
import org.jooq.example.db.oracle.sp.packages.library.GetBookCounts;
import org.jooq.example.db.oracle.sp.packages.library.GetBooks;
import org.jooq.example.db.oracle.sp.udt.records.AuthorsTRecord;
import org.jooq.example.db.oracle.sp.udt.records.BooksTRecord;
import org.jooq.impl.PackageImpl;


/**
 * Convenience access to all stored procedures and functions in LIBRARY
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Library extends PackageImpl {

	private static final long serialVersionUID = -997779045;

	/**
	 * The reference instance of <code>SP.LIBRARY</code>
	 */
	public static final Library LIBRARY = new Library();

	/**
	 * Call <code>SP.LIBRARY.GET_AUTHORS</code>
	 */
	public static AuthorsTRecord getAuthors(Configuration configuration, Number pId, Number pLoadBooks) {
		GetAuthors f = new GetAuthors();
		f.setPId(pId);
		f.setPLoadBooks(pLoadBooks);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SP.LIBRARY.GET_AUTHORS</code> as a field
	 */
	public static Field<AuthorsTRecord> getAuthors(Number pId, Number pLoadBooks) {
		GetAuthors f = new GetAuthors();
		f.setPId(pId);
		f.setPLoadBooks(pLoadBooks);

		return f.asField();
	}

	/**
	 * Get <code>SP.LIBRARY.GET_AUTHORS</code> as a field
	 */
	public static Field<AuthorsTRecord> getAuthors(Field<? extends Number> pId, Field<? extends Number> pLoadBooks) {
		GetAuthors f = new GetAuthors();
		f.setPId(pId);
		f.setPLoadBooks(pLoadBooks);

		return f.asField();
	}

	/**
	 * Call <code>SP.LIBRARY.GET_BOOK_COUNTS</code>
	 */
	public static Object getBookCounts(Configuration configuration, Number pId) {
		GetBookCounts f = new GetBookCounts();
		f.setPId(pId);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SP.LIBRARY.GET_BOOK_COUNTS</code> as a field
	 */
	public static Field<Object> getBookCounts(Number pId) {
		GetBookCounts f = new GetBookCounts();
		f.setPId(pId);

		return f.asField();
	}

	/**
	 * Get <code>SP.LIBRARY.GET_BOOK_COUNTS</code> as a field
	 */
	public static Field<Object> getBookCounts(Field<? extends Number> pId) {
		GetBookCounts f = new GetBookCounts();
		f.setPId(pId);

		return f.asField();
	}

	/**
	 * Call <code>SP.LIBRARY.GET_BOOKS</code>
	 */
	public static BooksTRecord getBooks(Configuration configuration, Number pId) {
		GetBooks f = new GetBooks();
		f.setPId(pId);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>SP.LIBRARY.GET_BOOKS</code> as a field
	 */
	public static Field<BooksTRecord> getBooks(Number pId) {
		GetBooks f = new GetBooks();
		f.setPId(pId);

		return f.asField();
	}

	/**
	 * Get <code>SP.LIBRARY.GET_BOOKS</code> as a field
	 */
	public static Field<BooksTRecord> getBooks(Field<? extends Number> pId) {
		GetBooks f = new GetBooks();
		f.setPId(pId);

		return f.asField();
	}

	/**
	 * No further instances allowed
	 */
	private Library() {
		super("LIBRARY", Sp.SP);
	}
}
