/**
 * This class is generated by jOOQ
 */
package org.jooq.example.db.oracle.sp.udt.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row;
import org.jooq.Row4;
import org.jooq.example.db.oracle.sp.udt.AuthorT;
import org.jooq.example.db.oracle.sp.udt.records.BooksTRecord;
import org.jooq.impl.UDTRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorTRecord extends UDTRecordImpl<AuthorTRecord> implements Record4<Integer, String, String, BooksTRecord> {

	private static final long serialVersionUID = -1157845676;

	/**
	 * Setter for <code>SP.AUTHOR_T.ID</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>SP.AUTHOR_T.ID</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>SP.AUTHOR_T.FIRST_NAME</code>.
	 */
	public void setFirstName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>SP.AUTHOR_T.FIRST_NAME</code>.
	 */
	public String getFirstName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>SP.AUTHOR_T.LAST_NAME</code>.
	 */
	public void setLastName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>SP.AUTHOR_T.LAST_NAME</code>.
	 */
	public String getLastName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>SP.AUTHOR_T.BOOKS</code>.
	 */
	public void setBooks(BooksTRecord value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>SP.AUTHOR_T.BOOKS</code>.
	 */
	public BooksTRecord getBooks() {
		return (BooksTRecord) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, BooksTRecord> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, BooksTRecord> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return AuthorT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return AuthorT.FIRST_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return AuthorT.LAST_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BooksTRecord> field4() {
		return AuthorT.BOOKS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getFirstName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getLastName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BooksTRecord value4() {
		return getBooks();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AuthorTRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AuthorTRecord value2(String value) {
		setFirstName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AuthorTRecord value3(String value) {
		setLastName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AuthorTRecord value4(BooksTRecord value) {
		setBooks(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AuthorTRecord values(Integer value1, String value2, String value3, BooksTRecord value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AuthorTRecord
	 */
	public AuthorTRecord() {
		super(AuthorT.AUTHOR_T);
	}

	/**
	 * Create a detached, initialised AuthorTRecord
	 */
	public AuthorTRecord(Integer id, String firstName, String lastName, BooksTRecord books) {
		super(AuthorT.AUTHOR_T);

		setValue(0, id);
		setValue(1, firstName);
		setValue(2, lastName);
		setValue(3, books);
	}
}
