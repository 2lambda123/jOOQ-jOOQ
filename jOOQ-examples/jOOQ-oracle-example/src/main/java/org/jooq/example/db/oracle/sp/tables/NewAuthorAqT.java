/**
 * This class is generated by jOOQ
 */
package org.jooq.example.db.oracle.sp.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.example.db.oracle.sp.Keys;
import org.jooq.example.db.oracle.sp.Sp;
import org.jooq.example.db.oracle.sp.tables.records.NewAuthorAqTRecord;
import org.jooq.example.db.oracle.sp.udt.records.AuthorTRecord;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NewAuthorAqT extends TableImpl<NewAuthorAqTRecord> {

	private static final long serialVersionUID = -779566099;

	/**
	 * The reference instance of <code>SP.NEW_AUTHOR_AQ_T</code>
	 */
	public static final NewAuthorAqT NEW_AUTHOR_AQ_T = new NewAuthorAqT();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<NewAuthorAqTRecord> getRecordType() {
		return NewAuthorAqTRecord.class;
	}

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.Q_NAME</code>.
	 */
	public final TableField<NewAuthorAqTRecord, String> Q_NAME = createField("Q_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.MSGID</code>.
	 */
	public final TableField<NewAuthorAqTRecord, byte[]> MSGID = createField("MSGID", org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.CORRID</code>.
	 */
	public final TableField<NewAuthorAqTRecord, String> CORRID = createField("CORRID", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.PRIORITY</code>.
	 */
	public final TableField<NewAuthorAqTRecord, BigDecimal> PRIORITY = createField("PRIORITY", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.STATE</code>.
	 */
	public final TableField<NewAuthorAqTRecord, BigDecimal> STATE = createField("STATE", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.DELAY</code>.
	 */
	public final TableField<NewAuthorAqTRecord, Timestamp> DELAY = createField("DELAY", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.EXPIRATION</code>.
	 */
	public final TableField<NewAuthorAqTRecord, BigDecimal> EXPIRATION = createField("EXPIRATION", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.TIME_MANAGER_INFO</code>.
	 */
	public final TableField<NewAuthorAqTRecord, Timestamp> TIME_MANAGER_INFO = createField("TIME_MANAGER_INFO", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.LOCAL_ORDER_NO</code>.
	 */
	public final TableField<NewAuthorAqTRecord, BigDecimal> LOCAL_ORDER_NO = createField("LOCAL_ORDER_NO", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.CHAIN_NO</code>.
	 */
	public final TableField<NewAuthorAqTRecord, BigDecimal> CHAIN_NO = createField("CHAIN_NO", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.CSCN</code>.
	 */
	public final TableField<NewAuthorAqTRecord, BigDecimal> CSCN = createField("CSCN", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.DSCN</code>.
	 */
	public final TableField<NewAuthorAqTRecord, BigDecimal> DSCN = createField("DSCN", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.ENQ_TIME</code>.
	 */
	public final TableField<NewAuthorAqTRecord, Timestamp> ENQ_TIME = createField("ENQ_TIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.ENQ_UID</code>.
	 */
	public final TableField<NewAuthorAqTRecord, String> ENQ_UID = createField("ENQ_UID", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.ENQ_TID</code>.
	 */
	public final TableField<NewAuthorAqTRecord, String> ENQ_TID = createField("ENQ_TID", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.DEQ_TIME</code>.
	 */
	public final TableField<NewAuthorAqTRecord, Timestamp> DEQ_TIME = createField("DEQ_TIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.DEQ_UID</code>.
	 */
	public final TableField<NewAuthorAqTRecord, String> DEQ_UID = createField("DEQ_UID", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.DEQ_TID</code>.
	 */
	public final TableField<NewAuthorAqTRecord, String> DEQ_TID = createField("DEQ_TID", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.RETRY_COUNT</code>.
	 */
	public final TableField<NewAuthorAqTRecord, BigDecimal> RETRY_COUNT = createField("RETRY_COUNT", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.EXCEPTION_QSCHEMA</code>.
	 */
	public final TableField<NewAuthorAqTRecord, String> EXCEPTION_QSCHEMA = createField("EXCEPTION_QSCHEMA", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.EXCEPTION_QUEUE</code>.
	 */
	public final TableField<NewAuthorAqTRecord, String> EXCEPTION_QUEUE = createField("EXCEPTION_QUEUE", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.STEP_NO</code>.
	 */
	public final TableField<NewAuthorAqTRecord, BigDecimal> STEP_NO = createField("STEP_NO", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.RECIPIENT_KEY</code>.
	 */
	public final TableField<NewAuthorAqTRecord, BigDecimal> RECIPIENT_KEY = createField("RECIPIENT_KEY", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.DEQUEUE_MSGID</code>.
	 */
	public final TableField<NewAuthorAqTRecord, byte[]> DEQUEUE_MSGID = createField("DEQUEUE_MSGID", org.jooq.impl.SQLDataType.BLOB, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.SENDER_NAME</code>.
	 */
	public final TableField<NewAuthorAqTRecord, String> SENDER_NAME = createField("SENDER_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.SENDER_ADDRESS</code>.
	 */
	public final TableField<NewAuthorAqTRecord, String> SENDER_ADDRESS = createField("SENDER_ADDRESS", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.SENDER_PROTOCOL</code>.
	 */
	public final TableField<NewAuthorAqTRecord, BigDecimal> SENDER_PROTOCOL = createField("SENDER_PROTOCOL", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.USER_DATA</code>.
	 */
	public final TableField<NewAuthorAqTRecord, AuthorTRecord> USER_DATA = createField("USER_DATA", org.jooq.example.db.oracle.sp.udt.AuthorT.AUTHOR_T.getDataType(), this, "");

	/**
	 * The column <code>SP.NEW_AUTHOR_AQ_T.USER_PROP</code>.
	 */
	public final TableField<NewAuthorAqTRecord, Object> USER_PROP = createField("USER_PROP", org.jooq.impl.DefaultDataType.getDefaultDataType("ANYDATA"), this, "");

	/**
	 * Create a <code>SP.NEW_AUTHOR_AQ_T</code> table reference
	 */
	public NewAuthorAqT() {
		this("NEW_AUTHOR_AQ_T", null);
	}

	/**
	 * Create an aliased <code>SP.NEW_AUTHOR_AQ_T</code> table reference
	 */
	public NewAuthorAqT(String alias) {
		this(alias, NEW_AUTHOR_AQ_T);
	}

	private NewAuthorAqT(String alias, Table<NewAuthorAqTRecord> aliased) {
		this(alias, aliased, null);
	}

	private NewAuthorAqT(String alias, Table<NewAuthorAqTRecord> aliased, Field<?>[] parameters) {
		super(alias, Sp.SP, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<NewAuthorAqTRecord> getPrimaryKey() {
		return Keys.SYS_C0018824;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<NewAuthorAqTRecord>> getKeys() {
		return Arrays.<UniqueKey<NewAuthorAqTRecord>>asList(Keys.SYS_C0018824);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NewAuthorAqT as(String alias) {
		return new NewAuthorAqT(alias, this);
	}

	/**
	 * Rename this table
	 */
	public NewAuthorAqT rename(String name) {
		return new NewAuthorAqT(name, null);
	}
}
