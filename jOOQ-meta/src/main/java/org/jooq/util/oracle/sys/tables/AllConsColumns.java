/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.oracle.sys.Sys;


/**
 * Information about accessible columns in constraint definitions
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllConsColumns extends TableImpl<Record> {

	private static final long serialVersionUID = -183494105;

	/**
	 * The reference instance of <code>SYS.ALL_CONS_COLUMNS</code>
	 */
	public static final AllConsColumns ALL_CONS_COLUMNS = new AllConsColumns();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>SYS.ALL_CONS_COLUMNS.OWNER</code>. Owner of the constraint definition
	 */
	public final TableField<Record, String> OWNER = createField("OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Owner of the constraint definition");

	/**
	 * The column <code>SYS.ALL_CONS_COLUMNS.CONSTRAINT_NAME</code>. Name associated with the constraint definition
	 */
	public final TableField<Record, String> CONSTRAINT_NAME = createField("CONSTRAINT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Name associated with the constraint definition");

	/**
	 * The column <code>SYS.ALL_CONS_COLUMNS.TABLE_NAME</code>. Name associated with table with constraint definition
	 */
	public final TableField<Record, String> TABLE_NAME = createField("TABLE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Name associated with table with constraint definition");

	/**
	 * The column <code>SYS.ALL_CONS_COLUMNS.COLUMN_NAME</code>. Name associated with column or attribute of object column specified in the constraint definition
	 */
	public final TableField<Record, String> COLUMN_NAME = createField("COLUMN_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(4000), this, "Name associated with column or attribute of object column specified in the constraint definition");

	/**
	 * The column <code>SYS.ALL_CONS_COLUMNS.POSITION</code>. Original position of column or attribute in definition
	 */
	public final TableField<Record, BigDecimal> POSITION = createField("POSITION", org.jooq.impl.SQLDataType.NUMERIC, this, "Original position of column or attribute in definition");

	/**
	 * Create a <code>SYS.ALL_CONS_COLUMNS</code> table reference
	 */
	public AllConsColumns() {
		this("ALL_CONS_COLUMNS", null);
	}

	/**
	 * Create an aliased <code>SYS.ALL_CONS_COLUMNS</code> table reference
	 */
	public AllConsColumns(String alias) {
		this(alias, ALL_CONS_COLUMNS);
	}

	private AllConsColumns(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private AllConsColumns(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "Information about accessible columns in constraint definitions");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AllConsColumns as(String alias) {
		return new AllConsColumns(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AllConsColumns rename(String name) {
		return new AllConsColumns(name, null);
	}
}
