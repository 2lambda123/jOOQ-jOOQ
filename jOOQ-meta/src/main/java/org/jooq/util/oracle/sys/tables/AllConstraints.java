/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.oracle.sys.Sys;


/**
 * Constraint definitions on accessible tables
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllConstraints extends TableImpl<Record> {

	private static final long serialVersionUID = -1051879448;

	/**
	 * The reference instance of <code>SYS.ALL_CONSTRAINTS</code>
	 */
	public static final AllConstraints ALL_CONSTRAINTS = new AllConstraints();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.OWNER</code>. Owner of the table
	 */
	public final TableField<Record, String> OWNER = createField("OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(120), this, "Owner of the table");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.CONSTRAINT_NAME</code>. Name associated with constraint definition
	 */
	public final TableField<Record, String> CONSTRAINT_NAME = createField("CONSTRAINT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Name associated with constraint definition");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.CONSTRAINT_TYPE</code>. Type of constraint definition
	 */
	public final TableField<Record, String> CONSTRAINT_TYPE = createField("CONSTRAINT_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(1), this, "Type of constraint definition");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.TABLE_NAME</code>. Name associated with table with constraint definition
	 */
	public final TableField<Record, String> TABLE_NAME = createField("TABLE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Name associated with table with constraint definition");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.SEARCH_CONDITION</code>. Text of search condition for table check
	 */
	public final TableField<Record, String> SEARCH_CONDITION = createField("SEARCH_CONDITION", org.jooq.impl.SQLDataType.CLOB, this, "Text of search condition for table check");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.R_OWNER</code>. Owner of table used in referential constraint
	 */
	public final TableField<Record, String> R_OWNER = createField("R_OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(120), this, "Owner of table used in referential constraint");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.R_CONSTRAINT_NAME</code>. Name of unique constraint definition for referenced table
	 */
	public final TableField<Record, String> R_CONSTRAINT_NAME = createField("R_CONSTRAINT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of unique constraint definition for referenced table");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.DELETE_RULE</code>. The delete rule for a referential constraint
	 */
	public final TableField<Record, String> DELETE_RULE = createField("DELETE_RULE", org.jooq.impl.SQLDataType.VARCHAR.length(9), this, "The delete rule for a referential constraint");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.STATUS</code>. Enforcement status of constraint - ENABLED or DISABLED
	 */
	public final TableField<Record, String> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.VARCHAR.length(8), this, "Enforcement status of constraint - ENABLED or DISABLED");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.DEFERRABLE</code>. Is the constraint deferrable - DEFERRABLE or NOT DEFERRABLE
	 */
	public final TableField<Record, String> DEFERRABLE = createField("DEFERRABLE", org.jooq.impl.SQLDataType.VARCHAR.length(14), this, "Is the constraint deferrable - DEFERRABLE or NOT DEFERRABLE");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.DEFERRED</code>. Is the constraint deferred by default -  DEFERRED or IMMEDIATE
	 */
	public final TableField<Record, String> DEFERRED = createField("DEFERRED", org.jooq.impl.SQLDataType.VARCHAR.length(9), this, "Is the constraint deferred by default -  DEFERRED or IMMEDIATE");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.VALIDATED</code>. Was this constraint system validated? -  VALIDATED or NOT VALIDATED
	 */
	public final TableField<Record, String> VALIDATED = createField("VALIDATED", org.jooq.impl.SQLDataType.VARCHAR.length(13), this, "Was this constraint system validated? -  VALIDATED or NOT VALIDATED");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.GENERATED</code>. Was the constraint name system generated? -  GENERATED NAME or USER NAME
	 */
	public final TableField<Record, String> GENERATED = createField("GENERATED", org.jooq.impl.SQLDataType.VARCHAR.length(14), this, "Was the constraint name system generated? -  GENERATED NAME or USER NAME");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.BAD</code>. Creating this constraint should give ORA-02436.  Rewrite it before 2000 AD.
	 */
	public final TableField<Record, String> BAD = createField("BAD", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "Creating this constraint should give ORA-02436.  Rewrite it before 2000 AD.");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.RELY</code>. If set, this flag will be used in optimizer
	 */
	public final TableField<Record, String> RELY = createField("RELY", org.jooq.impl.SQLDataType.VARCHAR.length(4), this, "If set, this flag will be used in optimizer");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.LAST_CHANGE</code>. The date when this column was last enabled or disabled
	 */
	public final TableField<Record, Date> LAST_CHANGE = createField("LAST_CHANGE", org.jooq.impl.SQLDataType.DATE, this, "The date when this column was last enabled or disabled");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.INDEX_OWNER</code>. The owner of the index used by this constraint
	 */
	public final TableField<Record, String> INDEX_OWNER = createField("INDEX_OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "The owner of the index used by this constraint");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.INDEX_NAME</code>. The index used by this constraint
	 */
	public final TableField<Record, String> INDEX_NAME = createField("INDEX_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "The index used by this constraint");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.INVALID</code>.
	 */
	public final TableField<Record, String> INVALID = createField("INVALID", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "");

	/**
	 * The column <code>SYS.ALL_CONSTRAINTS.VIEW_RELATED</code>.
	 */
	public final TableField<Record, String> VIEW_RELATED = createField("VIEW_RELATED", org.jooq.impl.SQLDataType.VARCHAR.length(14), this, "");

	/**
	 * Create a <code>SYS.ALL_CONSTRAINTS</code> table reference
	 */
	public AllConstraints() {
		this("ALL_CONSTRAINTS", null);
	}

	/**
	 * Create an aliased <code>SYS.ALL_CONSTRAINTS</code> table reference
	 */
	public AllConstraints(String alias) {
		this(alias, ALL_CONSTRAINTS);
	}

	private AllConstraints(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private AllConstraints(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "Constraint definitions on accessible tables");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AllConstraints as(String alias) {
		return new AllConstraints(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AllConstraints rename(String name) {
		return new AllConstraints(name, null);
	}
}
