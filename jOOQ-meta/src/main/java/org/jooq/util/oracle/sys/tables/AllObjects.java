/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;


import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.oracle.sys.Sys;


/**
 * Objects accessible to the user
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllObjects extends TableImpl<Record> {

	private static final long serialVersionUID = 1445278536;

	/**
	 * The reference instance of <code>SYS.ALL_OBJECTS</code>
	 */
	public static final AllObjects ALL_OBJECTS = new AllObjects();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>SYS.ALL_OBJECTS.OWNER</code>. Username of the owner of the object
	 */
	public final TableField<Record, String> OWNER = createField("OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Username of the owner of the object");

	/**
	 * The column <code>SYS.ALL_OBJECTS.OBJECT_NAME</code>. Name of the object
	 */
	public final TableField<Record, String> OBJECT_NAME = createField("OBJECT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Name of the object");

	/**
	 * The column <code>SYS.ALL_OBJECTS.SUBOBJECT_NAME</code>. Name of the sub-object (for example, partititon)
	 */
	public final TableField<Record, String> SUBOBJECT_NAME = createField("SUBOBJECT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the sub-object (for example, partititon)");

	/**
	 * The column <code>SYS.ALL_OBJECTS.OBJECT_ID</code>. Object number of the object
	 */
	public final TableField<Record, BigDecimal> OBJECT_ID = createField("OBJECT_ID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "Object number of the object");

	/**
	 * The column <code>SYS.ALL_OBJECTS.DATA_OBJECT_ID</code>. Object number of the segment which contains the object
	 */
	public final TableField<Record, BigDecimal> DATA_OBJECT_ID = createField("DATA_OBJECT_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "Object number of the segment which contains the object");

	/**
	 * The column <code>SYS.ALL_OBJECTS.OBJECT_TYPE</code>. Type of the object
	 */
	public final TableField<Record, String> OBJECT_TYPE = createField("OBJECT_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(19), this, "Type of the object");

	/**
	 * The column <code>SYS.ALL_OBJECTS.CREATED</code>. Timestamp for the creation of the object
	 */
	public final TableField<Record, Date> CREATED = createField("CREATED", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "Timestamp for the creation of the object");

	/**
	 * The column <code>SYS.ALL_OBJECTS.LAST_DDL_TIME</code>. Timestamp for the last DDL change (including GRANT and REVOKE) to the object
	 */
	public final TableField<Record, Date> LAST_DDL_TIME = createField("LAST_DDL_TIME", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "Timestamp for the last DDL change (including GRANT and REVOKE) to the object");

	/**
	 * The column <code>SYS.ALL_OBJECTS.TIMESTAMP</code>. Timestamp for the specification of the object
	 */
	public final TableField<Record, String> TIMESTAMP = createField("TIMESTAMP", org.jooq.impl.SQLDataType.VARCHAR.length(19), this, "Timestamp for the specification of the object");

	/**
	 * The column <code>SYS.ALL_OBJECTS.STATUS</code>. Status of the object
	 */
	public final TableField<Record, String> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "Status of the object");

	/**
	 * The column <code>SYS.ALL_OBJECTS.TEMPORARY</code>. Can the current session only see data that it placed in this object itself?
	 */
	public final TableField<Record, String> TEMPORARY = createField("TEMPORARY", org.jooq.impl.SQLDataType.VARCHAR.length(1), this, "Can the current session only see data that it placed in this object itself?");

	/**
	 * The column <code>SYS.ALL_OBJECTS.GENERATED</code>. Was the name of this object system generated?
	 */
	public final TableField<Record, String> GENERATED = createField("GENERATED", org.jooq.impl.SQLDataType.VARCHAR.length(1), this, "Was the name of this object system generated?");

	/**
	 * The column <code>SYS.ALL_OBJECTS.SECONDARY</code>. Is this a secondary object created as part of icreate for domain indexes?
	 */
	public final TableField<Record, String> SECONDARY = createField("SECONDARY", org.jooq.impl.SQLDataType.VARCHAR.length(1), this, "Is this a secondary object created as part of icreate for domain indexes?");

	/**
	 * The column <code>SYS.ALL_OBJECTS.NAMESPACE</code>. Namespace for the object
	 */
	public final TableField<Record, BigDecimal> NAMESPACE = createField("NAMESPACE", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "Namespace for the object");

	/**
	 * The column <code>SYS.ALL_OBJECTS.EDITION_NAME</code>. Name of the edition in which the object is actual
	 */
	public final TableField<Record, String> EDITION_NAME = createField("EDITION_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the edition in which the object is actual");

	/**
	 * Create a <code>SYS.ALL_OBJECTS</code> table reference
	 */
	public AllObjects() {
		this("ALL_OBJECTS", null);
	}

	/**
	 * Create an aliased <code>SYS.ALL_OBJECTS</code> table reference
	 */
	public AllObjects(String alias) {
		this(alias, ALL_OBJECTS);
	}

	private AllObjects(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private AllObjects(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "Objects accessible to the user");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AllObjects as(String alias) {
		return new AllObjects(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AllObjects rename(String name) {
		return new AllObjects(name, null);
	}
}
