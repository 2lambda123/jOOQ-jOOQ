/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;

/**
 * This class is generated by jOOQ.
 *
 * Description of attributes of types accessible to the user
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllTypeAttrs extends org.jooq.impl.TableImpl<org.jooq.Record> {

	private static final long serialVersionUID = -1320783809;

	/**
	 * The singleton instance of <code>SYS.ALL_TYPE_ATTRS</code>
	 */
	public static final org.jooq.util.oracle.sys.tables.AllTypeAttrs ALL_TYPE_ATTRS = new org.jooq.util.oracle.sys.tables.AllTypeAttrs();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.Record> getRecordType() {
		return org.jooq.Record.class;
	}

	/**
	 * The column <code>SYS.ALL_TYPE_ATTRS.OWNER</code>. Owner of the type
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> OWNER = createField("OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Owner of the type");

	/**
	 * The column <code>SYS.ALL_TYPE_ATTRS.TYPE_NAME</code>. Name of the type
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> TYPE_NAME = createField("TYPE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the type");

	/**
	 * The column <code>SYS.ALL_TYPE_ATTRS.ATTR_NAME</code>. Name of the attribute
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> ATTR_NAME = createField("ATTR_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the attribute");

	/**
	 * The column <code>SYS.ALL_TYPE_ATTRS.ATTR_TYPE_MOD</code>. Type modifier of the attribute
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> ATTR_TYPE_MOD = createField("ATTR_TYPE_MOD", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "Type modifier of the attribute");

	/**
	 * The column <code>SYS.ALL_TYPE_ATTRS.ATTR_TYPE_OWNER</code>. Owner of the type of the attribute
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> ATTR_TYPE_OWNER = createField("ATTR_TYPE_OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Owner of the type of the attribute");

	/**
	 * The column <code>SYS.ALL_TYPE_ATTRS.ATTR_TYPE_NAME</code>. Name of the type of the attribute
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> ATTR_TYPE_NAME = createField("ATTR_TYPE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the type of the attribute");

	/**
	 * The column <code>SYS.ALL_TYPE_ATTRS.LENGTH</code>. Length of the CHAR attribute or maximum length of the VARCHAR
or VARCHAR2 attribute
	 */
	public final org.jooq.TableField<org.jooq.Record, java.math.BigDecimal> LENGTH = createField("LENGTH", org.jooq.impl.SQLDataType.NUMERIC, this, "Length of the CHAR attribute or maximum length of the VARCHAR\nor VARCHAR2 attribute");

	/**
	 * The column <code>SYS.ALL_TYPE_ATTRS.PRECISION</code>. Decimal precision of the NUMBER or DECIMAL attribute or
binary precision of the FLOAT attribute
	 */
	public final org.jooq.TableField<org.jooq.Record, java.math.BigDecimal> PRECISION = createField("PRECISION", org.jooq.impl.SQLDataType.NUMERIC, this, "Decimal precision of the NUMBER or DECIMAL attribute or\nbinary precision of the FLOAT attribute");

	/**
	 * The column <code>SYS.ALL_TYPE_ATTRS.SCALE</code>. Scale of the NUMBER or DECIMAL attribute
	 */
	public final org.jooq.TableField<org.jooq.Record, java.math.BigDecimal> SCALE = createField("SCALE", org.jooq.impl.SQLDataType.NUMERIC, this, "Scale of the NUMBER or DECIMAL attribute");

	/**
	 * The column <code>SYS.ALL_TYPE_ATTRS.CHARACTER_SET_NAME</code>. Character set name of the attribute
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> CHARACTER_SET_NAME = createField("CHARACTER_SET_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(44), this, "Character set name of the attribute");

	/**
	 * The column <code>SYS.ALL_TYPE_ATTRS.ATTR_NO</code>. Syntactical order number or position of the attribute as specified in the
type specification or CREATE TYPE statement (not to be used as ID number)
	 */
	public final org.jooq.TableField<org.jooq.Record, java.math.BigDecimal> ATTR_NO = createField("ATTR_NO", org.jooq.impl.SQLDataType.NUMERIC, this, "Syntactical order number or position of the attribute as specified in the\ntype specification or CREATE TYPE statement (not to be used as ID number)");

	/**
	 * The column <code>SYS.ALL_TYPE_ATTRS.INHERITED</code>. Is the attribute inherited from the supertype ?
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> INHERITED = createField("INHERITED", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "Is the attribute inherited from the supertype ?");

	/**
	 * The column <code>SYS.ALL_TYPE_ATTRS.CHAR_USED</code>. C if the width was specified in characters, B if in bytes
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> CHAR_USED = createField("CHAR_USED", org.jooq.impl.SQLDataType.VARCHAR.length(1), this, "C if the width was specified in characters, B if in bytes");

	/**
	 * Create a <code>SYS.ALL_TYPE_ATTRS</code> table reference
	 */
	public AllTypeAttrs() {
		this("ALL_TYPE_ATTRS", null);
	}

	/**
	 * Create an aliased <code>SYS.ALL_TYPE_ATTRS</code> table reference
	 */
	public AllTypeAttrs(java.lang.String alias) {
		this(alias, org.jooq.util.oracle.sys.tables.AllTypeAttrs.ALL_TYPE_ATTRS);
	}

	private AllTypeAttrs(java.lang.String alias, org.jooq.Table<org.jooq.Record> aliased) {
		this(alias, aliased, null);
	}

	private AllTypeAttrs(java.lang.String alias, org.jooq.Table<org.jooq.Record> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.jooq.util.oracle.sys.Sys.SYS, aliased, parameters, "Description of attributes of types accessible to the user");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.util.oracle.sys.tables.AllTypeAttrs as(java.lang.String alias) {
		return new org.jooq.util.oracle.sys.tables.AllTypeAttrs(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.jooq.util.oracle.sys.tables.AllTypeAttrs rename(java.lang.String name) {
		return new org.jooq.util.oracle.sys.tables.AllTypeAttrs(name, null);
	}
}
