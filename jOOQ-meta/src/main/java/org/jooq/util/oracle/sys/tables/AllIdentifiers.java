/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.oracle.sys.Sys;


/**
 * All identifiers in stored objects accessible to the user
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllIdentifiers extends TableImpl<Record> {

	private static final long serialVersionUID = 317979298;

	/**
	 * The reference instance of <code>SYS.ALL_IDENTIFIERS</code>
	 */
	public static final AllIdentifiers ALL_IDENTIFIERS = new AllIdentifiers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>SYS.ALL_IDENTIFIERS.OWNER</code>.
	 */
	public final TableField<Record, String> OWNER = createField("OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

	/**
	 * The column <code>SYS.ALL_IDENTIFIERS.NAME</code>. Name of the identifier
	 */
	public final TableField<Record, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the identifier");

	/**
	 * The column <code>SYS.ALL_IDENTIFIERS.SIGNATURE</code>. Signature of the identifier
	 */
	public final TableField<Record, String> SIGNATURE = createField("SIGNATURE", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "Signature of the identifier");

	/**
	 * The column <code>SYS.ALL_IDENTIFIERS.TYPE</code>. Type of the identifier
	 */
	public final TableField<Record, String> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(18), this, "Type of the identifier");

	/**
	 * The column <code>SYS.ALL_IDENTIFIERS.OBJECT_NAME</code>. Name of the object where the identifier usage occurred
	 */
	public final TableField<Record, String> OBJECT_NAME = createField("OBJECT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Name of the object where the identifier usage occurred");

	/**
	 * The column <code>SYS.ALL_IDENTIFIERS.OBJECT_TYPE</code>. Type of the object where the identifier usage occurred
	 */
	public final TableField<Record, String> OBJECT_TYPE = createField("OBJECT_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(13), this, "Type of the object where the identifier usage occurred");

	/**
	 * The column <code>SYS.ALL_IDENTIFIERS.USAGE</code>. Type of the identifier usage
	 */
	public final TableField<Record, String> USAGE = createField("USAGE", org.jooq.impl.SQLDataType.VARCHAR.length(11), this, "Type of the identifier usage");

	/**
	 * The column <code>SYS.ALL_IDENTIFIERS.USAGE_ID</code>. Unique key for an identifier usage within the object
	 */
	public final TableField<Record, BigDecimal> USAGE_ID = createField("USAGE_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "Unique key for an identifier usage within the object");

	/**
	 * The column <code>SYS.ALL_IDENTIFIERS.LINE</code>. Line number of the identifier usage
	 */
	public final TableField<Record, BigDecimal> LINE = createField("LINE", org.jooq.impl.SQLDataType.NUMERIC, this, "Line number of the identifier usage");

	/**
	 * The column <code>SYS.ALL_IDENTIFIERS.COL</code>. Column number of the identifier usage
	 */
	public final TableField<Record, BigDecimal> COL = createField("COL", org.jooq.impl.SQLDataType.NUMERIC, this, "Column number of the identifier usage");

	/**
	 * The column <code>SYS.ALL_IDENTIFIERS.USAGE_CONTEXT_ID</code>. Context USAGE_ID of an identifier usage
	 */
	public final TableField<Record, BigDecimal> USAGE_CONTEXT_ID = createField("USAGE_CONTEXT_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "Context USAGE_ID of an identifier usage");

	/**
	 * Create a <code>SYS.ALL_IDENTIFIERS</code> table reference
	 */
	public AllIdentifiers() {
		this("ALL_IDENTIFIERS", null);
	}

	/**
	 * Create an aliased <code>SYS.ALL_IDENTIFIERS</code> table reference
	 */
	public AllIdentifiers(String alias) {
		this(alias, ALL_IDENTIFIERS);
	}

	private AllIdentifiers(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private AllIdentifiers(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "All identifiers in stored objects accessible to the user");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AllIdentifiers as(String alias) {
		return new AllIdentifiers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AllIdentifiers rename(String name) {
		return new AllIdentifiers(name, null);
	}
}
