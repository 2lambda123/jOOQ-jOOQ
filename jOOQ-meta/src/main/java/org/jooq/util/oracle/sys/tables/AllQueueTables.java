/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;

/**
 * This class is generated by jOOQ.
 *
 * All queue tables accessible to the user
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.5.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllQueueTables extends org.jooq.impl.TableImpl<org.jooq.Record> {

	private static final long serialVersionUID = 920212700;

	/**
	 * The singleton instance of <code>SYS.ALL_QUEUE_TABLES</code>
	 */
	public static final org.jooq.util.oracle.sys.tables.AllQueueTables ALL_QUEUE_TABLES = new org.jooq.util.oracle.sys.tables.AllQueueTables();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.Record> getRecordType() {
		return org.jooq.Record.class;
	}

	/**
	 * The column <code>SYS.ALL_QUEUE_TABLES.OWNER</code>. Owner of the queue table
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> OWNER = createField("OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Owner of the queue table");

	/**
	 * The column <code>SYS.ALL_QUEUE_TABLES.QUEUE_TABLE</code>. Name of the queue table
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> QUEUE_TABLE = createField("QUEUE_TABLE", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the queue table");

	/**
	 * The column <code>SYS.ALL_QUEUE_TABLES.TYPE</code>. Name of the payload type
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> TYPE = createField("TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "Name of the payload type");

	/**
	 * The column <code>SYS.ALL_QUEUE_TABLES.OBJECT_TYPE</code>. Name of the payload type for object type payload
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> OBJECT_TYPE = createField("OBJECT_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(61), this, "Name of the payload type for object type payload");

	/**
	 * The column <code>SYS.ALL_QUEUE_TABLES.SORT_ORDER</code>. Sort order for the queue table
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> SORT_ORDER = createField("SORT_ORDER", org.jooq.impl.SQLDataType.VARCHAR.length(22), this, "Sort order for the queue table");

	/**
	 * The column <code>SYS.ALL_QUEUE_TABLES.RECIPIENTS</code>. Mulitple or single recipient queue
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> RECIPIENTS = createField("RECIPIENTS", org.jooq.impl.SQLDataType.VARCHAR.length(8), this, "Mulitple or single recipient queue");

	/**
	 * The column <code>SYS.ALL_QUEUE_TABLES.MESSAGE_GROUPING</code>. Transaction grouping
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> MESSAGE_GROUPING = createField("MESSAGE_GROUPING", org.jooq.impl.SQLDataType.VARCHAR.length(13), this, "Transaction grouping");

	/**
	 * The column <code>SYS.ALL_QUEUE_TABLES.COMPATIBLE</code>. Compatibility version of the queue table
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> COMPATIBLE = createField("COMPATIBLE", org.jooq.impl.SQLDataType.VARCHAR.length(6), this, "Compatibility version of the queue table");

	/**
	 * The column <code>SYS.ALL_QUEUE_TABLES.PRIMARY_INSTANCE</code>. Instance assigned as the primary owner of the queue table
	 */
	public final org.jooq.TableField<org.jooq.Record, java.math.BigDecimal> PRIMARY_INSTANCE = createField("PRIMARY_INSTANCE", org.jooq.impl.SQLDataType.NUMERIC, this, "Instance assigned as the primary owner of the queue table");

	/**
	 * The column <code>SYS.ALL_QUEUE_TABLES.SECONDARY_INSTANCE</code>. Instance assigned as the secondary owner of the queue table
	 */
	public final org.jooq.TableField<org.jooq.Record, java.math.BigDecimal> SECONDARY_INSTANCE = createField("SECONDARY_INSTANCE", org.jooq.impl.SQLDataType.NUMERIC, this, "Instance assigned as the secondary owner of the queue table");

	/**
	 * The column <code>SYS.ALL_QUEUE_TABLES.OWNER_INSTANCE</code>. Instance which owns the queue table currently
	 */
	public final org.jooq.TableField<org.jooq.Record, java.math.BigDecimal> OWNER_INSTANCE = createField("OWNER_INSTANCE", org.jooq.impl.SQLDataType.NUMERIC, this, "Instance which owns the queue table currently");

	/**
	 * The column <code>SYS.ALL_QUEUE_TABLES.USER_COMMENT</code>. User specified comment
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> USER_COMMENT = createField("USER_COMMENT", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "User specified comment");

	/**
	 * The column <code>SYS.ALL_QUEUE_TABLES.SECURE</code>. Secure queue table
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> SECURE = createField("SECURE", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "Secure queue table");

	/**
	 * Create a <code>SYS.ALL_QUEUE_TABLES</code> table reference
	 */
	public AllQueueTables() {
		this("ALL_QUEUE_TABLES", null);
	}

	/**
	 * Create an aliased <code>SYS.ALL_QUEUE_TABLES</code> table reference
	 */
	public AllQueueTables(java.lang.String alias) {
		this(alias, org.jooq.util.oracle.sys.tables.AllQueueTables.ALL_QUEUE_TABLES);
	}

	private AllQueueTables(java.lang.String alias, org.jooq.Table<org.jooq.Record> aliased) {
		this(alias, aliased, null);
	}

	private AllQueueTables(java.lang.String alias, org.jooq.Table<org.jooq.Record> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.jooq.util.oracle.sys.Sys.SYS, aliased, parameters, "All queue tables accessible to the user");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.util.oracle.sys.tables.AllQueueTables as(java.lang.String alias) {
		return new org.jooq.util.oracle.sys.tables.AllQueueTables(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.jooq.util.oracle.sys.tables.AllQueueTables rename(java.lang.String name) {
		return new org.jooq.util.oracle.sys.tables.AllQueueTables(name, null);
	}
}
