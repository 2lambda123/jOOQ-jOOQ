/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.oracle.sys.Sys;


/**
 * All synonyms for base objects accessible to the user and session
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllSynonyms extends TableImpl<Record> {

	private static final long serialVersionUID = -805201777;

	/**
	 * The reference instance of <code>SYS.ALL_SYNONYMS</code>
	 */
	public static final AllSynonyms ALL_SYNONYMS = new AllSynonyms();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>SYS.ALL_SYNONYMS.OWNER</code>. Owner of the synonym
	 */
	public final TableField<Record, String> OWNER = createField("OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Owner of the synonym");

	/**
	 * The column <code>SYS.ALL_SYNONYMS.SYNONYM_NAME</code>. Name of the synonym
	 */
	public final TableField<Record, String> SYNONYM_NAME = createField("SYNONYM_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the synonym");

	/**
	 * The column <code>SYS.ALL_SYNONYMS.TABLE_OWNER</code>. Owner of the object referenced by the synonym
	 */
	public final TableField<Record, String> TABLE_OWNER = createField("TABLE_OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Owner of the object referenced by the synonym");

	/**
	 * The column <code>SYS.ALL_SYNONYMS.TABLE_NAME</code>. Name of the object referenced by the synonym
	 */
	public final TableField<Record, String> TABLE_NAME = createField("TABLE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the object referenced by the synonym");

	/**
	 * The column <code>SYS.ALL_SYNONYMS.DB_LINK</code>. Name of the database link referenced in a remote synonym
	 */
	public final TableField<Record, String> DB_LINK = createField("DB_LINK", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "Name of the database link referenced in a remote synonym");

	/**
	 * Create a <code>SYS.ALL_SYNONYMS</code> table reference
	 */
	public AllSynonyms() {
		this("ALL_SYNONYMS", null);
	}

	/**
	 * Create an aliased <code>SYS.ALL_SYNONYMS</code> table reference
	 */
	public AllSynonyms(String alias) {
		this(alias, ALL_SYNONYMS);
	}

	private AllSynonyms(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private AllSynonyms(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "All synonyms for base objects accessible to the user and session");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AllSynonyms as(String alias) {
		return new AllSynonyms(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AllSynonyms rename(String name) {
		return new AllSynonyms(name, null);
	}
}
