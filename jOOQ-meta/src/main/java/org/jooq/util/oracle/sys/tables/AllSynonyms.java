/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;

/**
 * This class is generated by jOOQ.
 *
 * All synonyms for base objects accessible to the user and session
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.5.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllSynonyms extends org.jooq.impl.TableImpl<org.jooq.Record> {

	private static final long serialVersionUID = 86307145;

	/**
	 * The singleton instance of <code>SYS.ALL_SYNONYMS</code>
	 */
	public static final org.jooq.util.oracle.sys.tables.AllSynonyms ALL_SYNONYMS = new org.jooq.util.oracle.sys.tables.AllSynonyms();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.Record> getRecordType() {
		return org.jooq.Record.class;
	}

	/**
	 * The column <code>SYS.ALL_SYNONYMS.OWNER</code>. Owner of the synonym
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> OWNER = createField("OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Owner of the synonym");

	/**
	 * The column <code>SYS.ALL_SYNONYMS.SYNONYM_NAME</code>. Name of the synonym
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> SYNONYM_NAME = createField("SYNONYM_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the synonym");

	/**
	 * The column <code>SYS.ALL_SYNONYMS.TABLE_OWNER</code>. Owner of the object referenced by the synonym
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> TABLE_OWNER = createField("TABLE_OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Owner of the object referenced by the synonym");

	/**
	 * The column <code>SYS.ALL_SYNONYMS.TABLE_NAME</code>. Name of the object referenced by the synonym
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> TABLE_NAME = createField("TABLE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the object referenced by the synonym");

	/**
	 * The column <code>SYS.ALL_SYNONYMS.DB_LINK</code>. Name of the database link referenced in a remote synonym
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> DB_LINK = createField("DB_LINK", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "Name of the database link referenced in a remote synonym");

	/**
	 * Create a <code>SYS.ALL_SYNONYMS</code> table reference
	 */
	public AllSynonyms() {
		this("ALL_SYNONYMS", null);
	}

	/**
	 * Create an aliased <code>SYS.ALL_SYNONYMS</code> table reference
	 */
	public AllSynonyms(java.lang.String alias) {
		this(alias, org.jooq.util.oracle.sys.tables.AllSynonyms.ALL_SYNONYMS);
	}

	private AllSynonyms(java.lang.String alias, org.jooq.Table<org.jooq.Record> aliased) {
		this(alias, aliased, null);
	}

	private AllSynonyms(java.lang.String alias, org.jooq.Table<org.jooq.Record> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.jooq.util.oracle.sys.Sys.SYS, aliased, parameters, "All synonyms for base objects accessible to the user and session");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.util.oracle.sys.tables.AllSynonyms as(java.lang.String alias) {
		return new org.jooq.util.oracle.sys.tables.AllSynonyms(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.jooq.util.oracle.sys.tables.AllSynonyms rename(java.lang.String name) {
		return new org.jooq.util.oracle.sys.tables.AllSynonyms(name, null);
	}
}
