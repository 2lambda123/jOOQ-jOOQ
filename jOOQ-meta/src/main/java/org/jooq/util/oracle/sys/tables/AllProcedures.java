/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.oracle.sys.Sys;


/**
 * Functions/procedures/packages/types/triggers available to the user
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllProcedures extends TableImpl<Record> {

	private static final long serialVersionUID = -1397754590;

	/**
	 * The reference instance of <code>SYS.ALL_PROCEDURES</code>
	 */
	public static final AllProcedures ALL_PROCEDURES = new AllProcedures();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>SYS.ALL_PROCEDURES.OWNER</code>.
	 */
	public final TableField<Record, String> OWNER = createField("OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.OBJECT_NAME</code>. Name of the object: top level function/procedure/package/type/trigger name
	 */
	public final TableField<Record, String> OBJECT_NAME = createField("OBJECT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the object: top level function/procedure/package/type/trigger name");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.PROCEDURE_NAME</code>. Name of the package or type subprogram
	 */
	public final TableField<Record, String> PROCEDURE_NAME = createField("PROCEDURE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the package or type subprogram");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.OBJECT_ID</code>. Object number of the object
	 */
	public final TableField<Record, BigDecimal> OBJECT_ID = createField("OBJECT_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "Object number of the object");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.SUBPROGRAM_ID</code>. Unique sub-program identifier
	 */
	public final TableField<Record, BigDecimal> SUBPROGRAM_ID = createField("SUBPROGRAM_ID", org.jooq.impl.SQLDataType.NUMERIC, this, "Unique sub-program identifier");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.OVERLOAD</code>. Overload unique identifier
	 */
	public final TableField<Record, String> OVERLOAD = createField("OVERLOAD", org.jooq.impl.SQLDataType.VARCHAR.length(40), this, "Overload unique identifier");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.OBJECT_TYPE</code>. The typename of the object
	 */
	public final TableField<Record, String> OBJECT_TYPE = createField("OBJECT_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(19), this, "The typename of the object");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.AGGREGATE</code>. Is it an aggregate function ?
	 */
	public final TableField<Record, String> AGGREGATE = createField("AGGREGATE", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "Is it an aggregate function ?");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.PIPELINED</code>. Is it a pipelined table function ?
	 */
	public final TableField<Record, String> PIPELINED = createField("PIPELINED", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "Is it a pipelined table function ?");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.IMPLTYPEOWNER</code>. Name of the owner of the implementation type (if any)
	 */
	public final TableField<Record, String> IMPLTYPEOWNER = createField("IMPLTYPEOWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the owner of the implementation type (if any)");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.IMPLTYPENAME</code>. Name of the implementation type (if any)
	 */
	public final TableField<Record, String> IMPLTYPENAME = createField("IMPLTYPENAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the implementation type (if any)");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.PARALLEL</code>. Is the procedure parallel enabled ?
	 */
	public final TableField<Record, String> PARALLEL = createField("PARALLEL", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "Is the procedure parallel enabled ?");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.INTERFACE</code>.
	 */
	public final TableField<Record, String> INTERFACE = createField("INTERFACE", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.DETERMINISTIC</code>.
	 */
	public final TableField<Record, String> DETERMINISTIC = createField("DETERMINISTIC", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "");

	/**
	 * The column <code>SYS.ALL_PROCEDURES.AUTHID</code>.
	 */
	public final TableField<Record, String> AUTHID = createField("AUTHID", org.jooq.impl.SQLDataType.VARCHAR.length(12), this, "");

	/**
	 * Create a <code>SYS.ALL_PROCEDURES</code> table reference
	 */
	public AllProcedures() {
		this("ALL_PROCEDURES", null);
	}

	/**
	 * Create an aliased <code>SYS.ALL_PROCEDURES</code> table reference
	 */
	public AllProcedures(String alias) {
		this(alias, ALL_PROCEDURES);
	}

	private AllProcedures(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private AllProcedures(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "Functions/procedures/packages/types/triggers available to the user");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AllProcedures as(String alias) {
		return new AllProcedures(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AllProcedures rename(String name) {
		return new AllProcedures(name, null);
	}
}
