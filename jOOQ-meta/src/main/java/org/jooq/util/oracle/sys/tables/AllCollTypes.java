/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.oracle.sys.Sys;


/**
 * Description of named collection types accessible to the user
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllCollTypes extends TableImpl<Record> {

	private static final long serialVersionUID = 997171860;

	/**
	 * The reference instance of <code>SYS.ALL_COLL_TYPES</code>
	 */
	public static final AllCollTypes ALL_COLL_TYPES = new AllCollTypes();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.OWNER</code>. Owner of the type
	 */
	public final TableField<Record, String> OWNER = createField("OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Owner of the type");

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.TYPE_NAME</code>. Name of the type
	 */
	public final TableField<Record, String> TYPE_NAME = createField("TYPE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Name of the type");

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.COLL_TYPE</code>. Collection type
	 */
	public final TableField<Record, String> COLL_TYPE = createField("COLL_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Collection type");

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.UPPER_BOUND</code>. Size of the FIXED ARRAY type or maximum size of the VARYING ARRAY type
	 */
	public final TableField<Record, BigDecimal> UPPER_BOUND = createField("UPPER_BOUND", org.jooq.impl.SQLDataType.NUMERIC, this, "Size of the FIXED ARRAY type or maximum size of the VARYING ARRAY type");

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.ELEM_TYPE_MOD</code>. Type modifier of the element
	 */
	public final TableField<Record, String> ELEM_TYPE_MOD = createField("ELEM_TYPE_MOD", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "Type modifier of the element");

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.ELEM_TYPE_OWNER</code>. Owner of the type of the element
	 */
	public final TableField<Record, String> ELEM_TYPE_OWNER = createField("ELEM_TYPE_OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Owner of the type of the element");

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.ELEM_TYPE_NAME</code>. Name of the type of the element
	 */
	public final TableField<Record, String> ELEM_TYPE_NAME = createField("ELEM_TYPE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "Name of the type of the element");

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.LENGTH</code>. Length of the CHAR element or maximum length of the VARCHAR
or VARCHAR2 element
	 */
	public final TableField<Record, BigDecimal> LENGTH = createField("LENGTH", org.jooq.impl.SQLDataType.NUMERIC, this, "Length of the CHAR element or maximum length of the VARCHAR\nor VARCHAR2 element");

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.PRECISION</code>. Decimal precision of the NUMBER or DECIMAL element or
binary precision of the FLOAT element
	 */
	public final TableField<Record, BigDecimal> PRECISION = createField("PRECISION", org.jooq.impl.SQLDataType.NUMERIC, this, "Decimal precision of the NUMBER or DECIMAL element or\nbinary precision of the FLOAT element");

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.SCALE</code>. Scale of the NUMBER or DECIMAL element
	 */
	public final TableField<Record, BigDecimal> SCALE = createField("SCALE", org.jooq.impl.SQLDataType.NUMERIC, this, "Scale of the NUMBER or DECIMAL element");

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.CHARACTER_SET_NAME</code>. Character set name of the element
	 */
	public final TableField<Record, String> CHARACTER_SET_NAME = createField("CHARACTER_SET_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(44), this, "Character set name of the element");

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.ELEM_STORAGE</code>. Storage optimization specification for VARRAY of numeric elements
	 */
	public final TableField<Record, String> ELEM_STORAGE = createField("ELEM_STORAGE", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "Storage optimization specification for VARRAY of numeric elements");

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.NULLS_STORED</code>. Is null information stored with each VARRAY element?
	 */
	public final TableField<Record, String> NULLS_STORED = createField("NULLS_STORED", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "Is null information stored with each VARRAY element?");

	/**
	 * The column <code>SYS.ALL_COLL_TYPES.CHAR_USED</code>. C if the width was specified in characters, B if in bytes
	 */
	public final TableField<Record, String> CHAR_USED = createField("CHAR_USED", org.jooq.impl.SQLDataType.VARCHAR.length(1), this, "C if the width was specified in characters, B if in bytes");

	/**
	 * Create a <code>SYS.ALL_COLL_TYPES</code> table reference
	 */
	public AllCollTypes() {
		this("ALL_COLL_TYPES", null);
	}

	/**
	 * Create an aliased <code>SYS.ALL_COLL_TYPES</code> table reference
	 */
	public AllCollTypes(String alias) {
		this(alias, ALL_COLL_TYPES);
	}

	private AllCollTypes(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private AllCollTypes(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "Description of named collection types accessible to the user");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AllCollTypes as(String alias) {
		return new AllCollTypes(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AllCollTypes rename(String name) {
		return new AllCollTypes(name, null);
	}
}
