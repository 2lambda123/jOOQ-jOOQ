/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.oracle.sys.Sys;


/**
 * All queues accessible to the user
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllQueues extends TableImpl<Record> {

	private static final long serialVersionUID = -24655232;

	/**
	 * The reference instance of <code>SYS.ALL_QUEUES</code>
	 */
	public static final AllQueues ALL_QUEUES = new AllQueues();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>SYS.ALL_QUEUES.OWNER</code>. Owner of the queue
	 */
	public final TableField<Record, String> OWNER = createField("OWNER", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Owner of the queue");

	/**
	 * The column <code>SYS.ALL_QUEUES.NAME</code>. Name of the queue
	 */
	public final TableField<Record, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Name of the queue");

	/**
	 * The column <code>SYS.ALL_QUEUES.QUEUE_TABLE</code>. Name of the table the queue data resides in
	 */
	public final TableField<Record, String> QUEUE_TABLE = createField("QUEUE_TABLE", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "Name of the table the queue data resides in");

	/**
	 * The column <code>SYS.ALL_QUEUES.QID</code>. Object number of the queue
	 */
	public final TableField<Record, BigDecimal> QID = createField("QID", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "Object number of the queue");

	/**
	 * The column <code>SYS.ALL_QUEUES.QUEUE_TYPE</code>. Type of the queue
	 */
	public final TableField<Record, String> QUEUE_TYPE = createField("QUEUE_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "Type of the queue");

	/**
	 * The column <code>SYS.ALL_QUEUES.MAX_RETRIES</code>. Maximum number of retries allowed when dequeuing from the queue
	 */
	public final TableField<Record, BigDecimal> MAX_RETRIES = createField("MAX_RETRIES", org.jooq.impl.SQLDataType.NUMERIC, this, "Maximum number of retries allowed when dequeuing from the queue");

	/**
	 * The column <code>SYS.ALL_QUEUES.RETRY_DELAY</code>. Time interval between retries
	 */
	public final TableField<Record, BigDecimal> RETRY_DELAY = createField("RETRY_DELAY", org.jooq.impl.SQLDataType.NUMERIC, this, "Time interval between retries");

	/**
	 * The column <code>SYS.ALL_QUEUES.ENQUEUE_ENABLED</code>. Queue is enabled for enqueue
	 */
	public final TableField<Record, String> ENQUEUE_ENABLED = createField("ENQUEUE_ENABLED", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "Queue is enabled for enqueue");

	/**
	 * The column <code>SYS.ALL_QUEUES.DEQUEUE_ENABLED</code>. Queue is enabled for dequeue
	 */
	public final TableField<Record, String> DEQUEUE_ENABLED = createField("DEQUEUE_ENABLED", org.jooq.impl.SQLDataType.VARCHAR.length(7), this, "Queue is enabled for dequeue");

	/**
	 * The column <code>SYS.ALL_QUEUES.RETENTION</code>. Time interval processed messages retained in the queue
	 */
	public final TableField<Record, String> RETENTION = createField("RETENTION", org.jooq.impl.SQLDataType.VARCHAR.length(40), this, "Time interval processed messages retained in the queue");

	/**
	 * The column <code>SYS.ALL_QUEUES.USER_COMMENT</code>. User specified comment
	 */
	public final TableField<Record, String> USER_COMMENT = createField("USER_COMMENT", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "User specified comment");

	/**
	 * The column <code>SYS.ALL_QUEUES.NETWORK_NAME</code>. Network name of queue service
	 */
	public final TableField<Record, String> NETWORK_NAME = createField("NETWORK_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(512), this, "Network name of queue service");

	/**
	 * Create a <code>SYS.ALL_QUEUES</code> table reference
	 */
	public AllQueues() {
		this("ALL_QUEUES", null);
	}

	/**
	 * Create an aliased <code>SYS.ALL_QUEUES</code> table reference
	 */
	public AllQueues(String alias) {
		this(alias, ALL_QUEUES);
	}

	private AllQueues(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private AllQueues(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "All queues accessible to the user");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AllQueues as(String alias) {
		return new AllQueues(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AllQueues rename(String name) {
		return new AllQueues(name, null);
	}
}
