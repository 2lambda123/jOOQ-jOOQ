/**
 * This class is generated by jOOQ
 */
package org.jooq.util.hana.sys.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Views extends org.jooq.impl.TableImpl<org.jooq.Record> {

	private static final long serialVersionUID = 1324239937;

	/**
	 * The reference instance of <code>SYS.VIEWS</code>
	 */
	public static final org.jooq.util.hana.sys.tables.Views VIEWS = new org.jooq.util.hana.sys.tables.Views();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.Record> getRecordType() {
		return org.jooq.Record.class;
	}

	/**
	 * The column <code>SYS.VIEWS.SCHEMA_NAME</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> SCHEMA_NAME = createField("SCHEMA_NAME", org.jooq.impl.SQLDataType.NVARCHAR.length(256).nullable(false), this, "");

	/**
	 * The column <code>SYS.VIEWS.VIEW_NAME</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> VIEW_NAME = createField("VIEW_NAME", org.jooq.impl.SQLDataType.NVARCHAR.length(256).nullable(false), this, "");

	/**
	 * The column <code>SYS.VIEWS.VIEW_OID</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Long> VIEW_OID = createField("VIEW_OID", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>SYS.VIEWS.IS_UNICODE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_UNICODE = createField("IS_UNICODE", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.VIEWS.IS_READ_ONLY</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_READ_ONLY = createField("IS_READ_ONLY", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.VIEWS.HAS_CHECK_OPTION</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> HAS_CHECK_OPTION = createField("HAS_CHECK_OPTION", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.VIEWS.HAS_COLUMN_ALIASES</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> HAS_COLUMN_ALIASES = createField("HAS_COLUMN_ALIASES", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.VIEWS.DEFINITION</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> DEFINITION = createField("DEFINITION", org.jooq.impl.SQLDataType.NCLOB.length(2147483647), this, "");

	/**
	 * The column <code>SYS.VIEWS.COMMENTS</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> COMMENTS = createField("COMMENTS", org.jooq.impl.SQLDataType.NVARCHAR.length(5000), this, "");

	/**
	 * The column <code>SYS.VIEWS.IS_COLUMN_VIEW</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_COLUMN_VIEW = createField("IS_COLUMN_VIEW", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * The column <code>SYS.VIEWS.VIEW_TYPE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> VIEW_TYPE = createField("VIEW_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

	/**
	 * The column <code>SYS.VIEWS.IS_TENANT_SHARED_METADATA</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_TENANT_SHARED_METADATA = createField("IS_TENANT_SHARED_METADATA", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.VIEWS.IS_VALID</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_VALID = createField("IS_VALID", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * Create a <code>SYS.VIEWS</code> table reference
	 */
	public Views() {
		this("VIEWS", null);
	}

	/**
	 * Create an aliased <code>SYS.VIEWS</code> table reference
	 */
	public Views(java.lang.String alias) {
		this(alias, org.jooq.util.hana.sys.tables.Views.VIEWS);
	}

	private Views(java.lang.String alias, org.jooq.Table<org.jooq.Record> aliased) {
		this(alias, aliased, null);
	}

	private Views(java.lang.String alias, org.jooq.Table<org.jooq.Record> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.jooq.util.hana.sys.Sys.SYS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.util.hana.sys.tables.Views as(java.lang.String alias) {
		return new org.jooq.util.hana.sys.tables.Views(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.jooq.util.hana.sys.tables.Views rename(java.lang.String name) {
		return new org.jooq.util.hana.sys.tables.Views(name, null);
	}
}
