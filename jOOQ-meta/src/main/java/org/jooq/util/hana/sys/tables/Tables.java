/**
 * This class is generated by jOOQ
 */
package org.jooq.util.hana.sys.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables extends org.jooq.impl.TableImpl<org.jooq.Record> {

	private static final long serialVersionUID = 1131023261;

	/**
	 * The reference instance of <code>SYS.TABLES</code>
	 */
	public static final org.jooq.util.hana.sys.tables.Tables TABLES = new org.jooq.util.hana.sys.tables.Tables();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.Record> getRecordType() {
		return org.jooq.Record.class;
	}

	/**
	 * The column <code>SYS.TABLES.SCHEMA_NAME</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> SCHEMA_NAME = createField("SCHEMA_NAME", org.jooq.impl.SQLDataType.NVARCHAR.length(256), this, "");

	/**
	 * The column <code>SYS.TABLES.TABLE_NAME</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> TABLE_NAME = createField("TABLE_NAME", org.jooq.impl.SQLDataType.NVARCHAR.length(256).nullable(false), this, "");

	/**
	 * The column <code>SYS.TABLES.TABLE_OID</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Long> TABLE_OID = createField("TABLE_OID", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>SYS.TABLES.COMMENTS</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> COMMENTS = createField("COMMENTS", org.jooq.impl.SQLDataType.NVARCHAR.length(5000), this, "");

	/**
	 * The column <code>SYS.TABLES.FIXED_PART_SIZE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Short> FIXED_PART_SIZE = createField("FIXED_PART_SIZE", org.jooq.impl.SQLDataType.SMALLINT, this, "");

	/**
	 * The column <code>SYS.TABLES.IS_LOGGED</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_LOGGED = createField("IS_LOGGED", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.TABLES.IS_SYSTEM_TABLE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_SYSTEM_TABLE = createField("IS_SYSTEM_TABLE", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * The column <code>SYS.TABLES.IS_COLUMN_TABLE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_COLUMN_TABLE = createField("IS_COLUMN_TABLE", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * The column <code>SYS.TABLES.TABLE_TYPE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> TABLE_TYPE = createField("TABLE_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

	/**
	 * The column <code>SYS.TABLES.IS_INSERT_ONLY</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_INSERT_ONLY = createField("IS_INSERT_ONLY", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * The column <code>SYS.TABLES.IS_TENANT_SHARED_DATA</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_TENANT_SHARED_DATA = createField("IS_TENANT_SHARED_DATA", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * The column <code>SYS.TABLES.IS_TENANT_SHARED_METADATA</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_TENANT_SHARED_METADATA = createField("IS_TENANT_SHARED_METADATA", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * The column <code>SYS.TABLES.SESSION_TYPE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> SESSION_TYPE = createField("SESSION_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(7).nullable(false), this, "");

	/**
	 * The column <code>SYS.TABLES.IS_TEMPORARY</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_TEMPORARY = createField("IS_TEMPORARY", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * The column <code>SYS.TABLES.TEMPORARY_TABLE_TYPE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> TEMPORARY_TABLE_TYPE = createField("TEMPORARY_TABLE_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

	/**
	 * The column <code>SYS.TABLES.COMMIT_ACTION</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> COMMIT_ACTION = createField("COMMIT_ACTION", org.jooq.impl.SQLDataType.VARCHAR.length(8), this, "");

	/**
	 * The column <code>SYS.TABLES.IS_USER_DEFINED_TYPE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_USER_DEFINED_TYPE = createField("IS_USER_DEFINED_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * The column <code>SYS.TABLES.HAS_PRIMARY_KEY</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> HAS_PRIMARY_KEY = createField("HAS_PRIMARY_KEY", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * The column <code>SYS.TABLES.PARTITION_SPEC</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> PARTITION_SPEC = createField("PARTITION_SPEC", org.jooq.impl.SQLDataType.NCLOB.length(2147483647), this, "");

	/**
	 * The column <code>SYS.TABLES.USES_EXTKEY</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> USES_EXTKEY = createField("USES_EXTKEY", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.TABLES.AUTO_MERGE_ON</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> AUTO_MERGE_ON = createField("AUTO_MERGE_ON", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.TABLES.USES_DIMFN_CACHE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> USES_DIMFN_CACHE = createField("USES_DIMFN_CACHE", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.TABLES.IS_PUBLIC</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_PUBLIC = createField("IS_PUBLIC", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.TABLES.AUTO_OPTIMIZE_COMPRESSION_ON</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> AUTO_OPTIMIZE_COMPRESSION_ON = createField("AUTO_OPTIMIZE_COMPRESSION_ON", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.TABLES.COMPRESSED_EXTKEY</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> COMPRESSED_EXTKEY = createField("COMPRESSED_EXTKEY", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.TABLES.HAS_TEXT_FIELDS</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> HAS_TEXT_FIELDS = createField("HAS_TEXT_FIELDS", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.TABLES.USES_QUEUE_TABLE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> USES_QUEUE_TABLE = createField("USES_QUEUE_TABLE", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.TABLES.IS_PRELOAD</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_PRELOAD = createField("IS_PRELOAD", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.TABLES.IS_PARTIAL_PRELOAD</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_PARTIAL_PRELOAD = createField("IS_PARTIAL_PRELOAD", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.TABLES.UNLOAD_PRIORITY</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Byte> UNLOAD_PRIORITY = createField("UNLOAD_PRIORITY", org.jooq.impl.SQLDataType.TINYINT, this, "");

	/**
	 * The column <code>SYS.TABLES.HAS_SCHEMA_FLEXIBILITY</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> HAS_SCHEMA_FLEXIBILITY = createField("HAS_SCHEMA_FLEXIBILITY", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.TABLES.IS_REPLICA</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_REPLICA = createField("IS_REPLICA", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false), this, "");

	/**
	 * Create a <code>SYS.TABLES</code> table reference
	 */
	public Tables() {
		this("TABLES", null);
	}

	/**
	 * Create an aliased <code>SYS.TABLES</code> table reference
	 */
	public Tables(java.lang.String alias) {
		this(alias, org.jooq.util.hana.sys.tables.Tables.TABLES);
	}

	private Tables(java.lang.String alias, org.jooq.Table<org.jooq.Record> aliased) {
		this(alias, aliased, null);
	}

	private Tables(java.lang.String alias, org.jooq.Table<org.jooq.Record> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.jooq.util.hana.sys.Sys.SYS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.util.hana.sys.tables.Tables as(java.lang.String alias) {
		return new org.jooq.util.hana.sys.tables.Tables(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.jooq.util.hana.sys.tables.Tables rename(java.lang.String name) {
		return new org.jooq.util.hana.sys.tables.Tables(name, null);
	}
}
