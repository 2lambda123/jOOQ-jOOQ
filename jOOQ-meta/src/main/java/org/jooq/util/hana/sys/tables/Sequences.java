/**
 * This class is generated by jOOQ
 */
package org.jooq.util.hana.sys.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sequences extends org.jooq.impl.TableImpl<org.jooq.Record> {

	private static final long serialVersionUID = 294009727;

	/**
	 * The reference instance of <code>SYS.SEQUENCES</code>
	 */
	public static final org.jooq.util.hana.sys.tables.Sequences SEQUENCES = new org.jooq.util.hana.sys.tables.Sequences();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.jooq.Record> getRecordType() {
		return org.jooq.Record.class;
	}

	/**
	 * The column <code>SYS.SEQUENCES.SCHEMA_NAME</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> SCHEMA_NAME = createField("SCHEMA_NAME", org.jooq.impl.SQLDataType.NVARCHAR.length(256).nullable(false), this, "");

	/**
	 * The column <code>SYS.SEQUENCES.SEQUENCE_NAME</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> SEQUENCE_NAME = createField("SEQUENCE_NAME", org.jooq.impl.SQLDataType.NVARCHAR.length(256).nullable(false), this, "");

	/**
	 * The column <code>SYS.SEQUENCES.SEQUENCE_OID</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Long> SEQUENCE_OID = createField("SEQUENCE_OID", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>SYS.SEQUENCES.START_NUMBER</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Long> START_NUMBER = createField("START_NUMBER", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>SYS.SEQUENCES.MIN_VALUE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Long> MIN_VALUE = createField("MIN_VALUE", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>SYS.SEQUENCES.MAX_VALUE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Long> MAX_VALUE = createField("MAX_VALUE", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>SYS.SEQUENCES.INCREMENT_BY</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Long> INCREMENT_BY = createField("INCREMENT_BY", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>SYS.SEQUENCES.IS_CYCLED</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> IS_CYCLED = createField("IS_CYCLED", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>SYS.SEQUENCES.RESET_BY_QUERY</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.String> RESET_BY_QUERY = createField("RESET_BY_QUERY", org.jooq.impl.SQLDataType.NCLOB.length(2147483647), this, "");

	/**
	 * The column <code>SYS.SEQUENCES.CACHE_SIZE</code>.
	 */
	public final org.jooq.TableField<org.jooq.Record, java.lang.Short> CACHE_SIZE = createField("CACHE_SIZE", org.jooq.impl.SQLDataType.SMALLINT, this, "");

	/**
	 * Create a <code>SYS.SEQUENCES</code> table reference
	 */
	public Sequences() {
		this("SEQUENCES", null);
	}

	/**
	 * Create an aliased <code>SYS.SEQUENCES</code> table reference
	 */
	public Sequences(java.lang.String alias) {
		this(alias, org.jooq.util.hana.sys.tables.Sequences.SEQUENCES);
	}

	private Sequences(java.lang.String alias, org.jooq.Table<org.jooq.Record> aliased) {
		this(alias, aliased, null);
	}

	private Sequences(java.lang.String alias, org.jooq.Table<org.jooq.Record> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, org.jooq.util.hana.sys.Sys.SYS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.util.hana.sys.tables.Sequences as(java.lang.String alias) {
		return new org.jooq.util.hana.sys.tables.Sequences(alias, this);
	}

	/**
	 * Rename this table
	 */
	public org.jooq.util.hana.sys.tables.Sequences rename(java.lang.String name) {
		return new org.jooq.util.hana.sys.tables.Sequences(name, null);
	}
}
