/**
 * This class is generated by jOOQ
 */
package org.jooq.util.vertica.v_catalog.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.vertica.v_catalog.VCatalog;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConstraintColumns extends TableImpl<Record> {

	private static final long serialVersionUID = -369608656;

	/**
	 * The reference instance of <code>v_catalog.constraint_columns</code>
	 */
	public static final ConstraintColumns CONSTRAINT_COLUMNS = new ConstraintColumns();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>v_catalog.constraint_columns.constraint_id</code>.
	 */
	public final TableField<Record, Integer> CONSTRAINT_ID = createField("constraint_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>v_catalog.constraint_columns.table_schema</code>.
	 */
	public final TableField<Record, String> TABLE_SCHEMA = createField("table_schema", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.constraint_columns.table_id</code>.
	 */
	public final TableField<Record, Integer> TABLE_ID = createField("table_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>v_catalog.constraint_columns.table_name</code>.
	 */
	public final TableField<Record, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.constraint_columns.column_name</code>.
	 */
	public final TableField<Record, String> COLUMN_NAME = createField("column_name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.constraint_columns.constraint_name</code>.
	 */
	public final TableField<Record, String> CONSTRAINT_NAME = createField("constraint_name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.constraint_columns.constraint_type</code>.
	 */
	public final TableField<Record, String> CONSTRAINT_TYPE = createField("constraint_type", org.jooq.impl.SQLDataType.CHAR.length(1).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.constraint_columns.reference_table_id</code>.
	 */
	public final TableField<Record, Integer> REFERENCE_TABLE_ID = createField("reference_table_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>v_catalog.constraint_columns.reference_table_schema</code>.
	 */
	public final TableField<Record, String> REFERENCE_TABLE_SCHEMA = createField("reference_table_schema", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.constraint_columns.reference_table_name</code>.
	 */
	public final TableField<Record, String> REFERENCE_TABLE_NAME = createField("reference_table_name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.constraint_columns.reference_column_name</code>.
	 */
	public final TableField<Record, String> REFERENCE_COLUMN_NAME = createField("reference_column_name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * Create a <code>v_catalog.constraint_columns</code> table reference
	 */
	public ConstraintColumns() {
		this("constraint_columns", null);
	}

	/**
	 * Create an aliased <code>v_catalog.constraint_columns</code> table reference
	 */
	public ConstraintColumns(String alias) {
		this(alias, CONSTRAINT_COLUMNS);
	}

	private ConstraintColumns(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private ConstraintColumns(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, VCatalog.V_CATALOG, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConstraintColumns as(String alias) {
		return new ConstraintColumns(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ConstraintColumns rename(String name) {
		return new ConstraintColumns(name, null);
	}
}
