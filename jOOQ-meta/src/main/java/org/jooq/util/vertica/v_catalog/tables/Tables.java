/**
 * This class is generated by jOOQ
 */
package org.jooq.util.vertica.v_catalog.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.vertica.v_catalog.VCatalog;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables extends TableImpl<Record> {

	private static final long serialVersionUID = 605215034;

	/**
	 * The reference instance of <code>v_catalog.tables</code>
	 */
	public static final Tables TABLES = new Tables();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>v_catalog.tables.table_schema_id</code>.
	 */
	public final TableField<Record, Integer> TABLE_SCHEMA_ID = createField("table_schema_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>v_catalog.tables.table_schema</code>.
	 */
	public final TableField<Record, String> TABLE_SCHEMA = createField("table_schema", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.tables.table_id</code>.
	 */
	public final TableField<Record, Integer> TABLE_ID = createField("table_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>v_catalog.tables.table_name</code>.
	 */
	public final TableField<Record, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.tables.owner_id</code>.
	 */
	public final TableField<Record, Integer> OWNER_ID = createField("owner_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>v_catalog.tables.owner_name</code>.
	 */
	public final TableField<Record, String> OWNER_NAME = createField("owner_name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.tables.is_temp_table</code>.
	 */
	public final TableField<Record, Boolean> IS_TEMP_TABLE = createField("is_temp_table", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * The column <code>v_catalog.tables.is_system_table</code>.
	 */
	public final TableField<Record, Boolean> IS_SYSTEM_TABLE = createField("is_system_table", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * The column <code>v_catalog.tables.is_flextable</code>.
	 */
	public final TableField<Record, Boolean> IS_FLEXTABLE = createField("is_flextable", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * The column <code>v_catalog.tables.has_aggregate_projection</code>.
	 */
	public final TableField<Record, Boolean> HAS_AGGREGATE_PROJECTION = createField("has_aggregate_projection", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * The column <code>v_catalog.tables.system_table_creator</code>.
	 */
	public final TableField<Record, String> SYSTEM_TABLE_CREATOR = createField("system_table_creator", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.tables.partition_expression</code>.
	 */
	public final TableField<Record, String> PARTITION_EXPRESSION = createField("partition_expression", org.jooq.impl.SQLDataType.VARCHAR.length(8192).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.tables.create_time</code>.
	 */
	public final TableField<Record, Object> CREATE_TIME = createField("create_time", org.jooq.impl.DefaultDataType.getDefaultDataType("timestamptz"), this, "");

	/**
	 * The column <code>v_catalog.tables.table_definition</code>.
	 */
	public final TableField<Record, String> TABLE_DEFINITION = createField("table_definition", org.jooq.impl.SQLDataType.VARCHAR.length(8192).nullable(false), this, "");

	/**
	 * Create a <code>v_catalog.tables</code> table reference
	 */
	public Tables() {
		this("tables", null);
	}

	/**
	 * Create an aliased <code>v_catalog.tables</code> table reference
	 */
	public Tables(String alias) {
		this(alias, TABLES);
	}

	private Tables(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private Tables(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, VCatalog.V_CATALOG, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Tables as(String alias) {
		return new Tables(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Tables rename(String name) {
		return new Tables(name, null);
	}
}
