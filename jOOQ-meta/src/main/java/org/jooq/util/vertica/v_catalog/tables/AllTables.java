/**
 * This class is generated by jOOQ
 */
package org.jooq.util.vertica.v_catalog.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;
import org.jooq.util.vertica.v_catalog.VCatalog;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllTables extends TableImpl<Record> {

	private static final long serialVersionUID = 1518946197;

	/**
	 * The reference instance of <code>v_catalog.all_tables</code>
	 */
	public static final AllTables ALL_TABLES = new AllTables();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>v_catalog.all_tables.schema_name</code>.
	 */
	public final TableField<Record, String> SCHEMA_NAME = createField("schema_name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.all_tables.table_id</code>.
	 */
	public final TableField<Record, Integer> TABLE_ID = createField("table_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>v_catalog.all_tables.table_name</code>.
	 */
	public final TableField<Record, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.all_tables.table_type</code>.
	 */
	public final TableField<Record, String> TABLE_TYPE = createField("table_type", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

	/**
	 * The column <code>v_catalog.all_tables.remarks</code>.
	 */
	public final TableField<Record, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR.length(8192).nullable(false), this, "");

	/**
	 * Create a <code>v_catalog.all_tables</code> table reference
	 */
	public AllTables() {
		this("all_tables", null);
	}

	/**
	 * Create an aliased <code>v_catalog.all_tables</code> table reference
	 */
	public AllTables(String alias) {
		this(alias, ALL_TABLES);
	}

	private AllTables(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private AllTables(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, VCatalog.V_CATALOG, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AllTables as(String alias) {
		return new AllTables(alias, this);
	}

	/**
	 * Rename this table
	 */
	public AllTables rename(String name) {
		return new AllTables(name, null);
	}
}
